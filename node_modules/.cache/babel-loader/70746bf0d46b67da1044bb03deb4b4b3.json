{"remainingRequest":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\babel-loader\\lib\\index.js!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsList\\BsListView.vue?vue&type=script&lang=js&","dependencies":[{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsList\\BsListView.vue","mtime":1603614545000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BsListView.vue"],"names":[],"mappings":";;;;;;;;;;;AAOA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA;AACA;AACA;AACA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;;AASA;AACA;AACA;AACA;AACA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;;AAiBA;AACA;AACA;AACA;AACA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArBA;;AAyBA;AACA;AACA;AACA;AACA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,SAFA;AAGA,MAAA,SAAA,EAAA,mBAAA,CAAA;AAAA,eAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,OAAA,CAAA,CAAA,IAAA,CAAA,CAAA;AAAA;AAHA,KA7BA;;AAkCA;AACA;AACA;AACA;AACA;AACA,IAAA,kBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,SAFA;AAGA,MAAA,SAAA,EAAA,mBAAA,CAAA;AAAA,eAAA,CAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,KAAA,EAAA,QAAA,EAAA,YAAA,EAAA,OAAA,CAAA,CAAA,IAAA,CAAA,CAAA;AAAA;AAHA;AAvCA,GAFA;AA+CA,EAAA,IAAA,EAAA,cAAA,EAAA;AAAA,WAAA;AACA,MAAA,MAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,YAAA,EAAA,EAAA,CAAA,YAFA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,OAAA,EAAA,EAAA,CAAA,OATA;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,QAAA,EAAA,EAAA,CAAA,QAjBA;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,UAAA,EAAA,EAAA,CAAA,UAxBA;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,WAAA,EAAA,EAAA,CAAA,WAhCA;;AAiCA;AACA;AACA;AACA;AACA;AACA,QAAA,UAAA,EAAA,EAAA,CAAA;AAtCA;AADA,KAAA;AAAA,GA/CA;AAyFA,EAAA,OAzFA,qBAyFA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,KAAA;AADA,KAAA;AAGA,GA7FA;AA8FA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA;AACA,2BAAA,KAAA,cADA;AAEA,yBAAA,KAAA,WAAA,KAAA,MAFA;AAGA,yBAAA,KAAA,WAAA,KAAA,MAHA;AAIA,0BAAA,KAAA,WAAA,KAAA,OAJA;AAKA,0BAAA,KAAA,kBAAA,KAAA,MALA;AAMA,2BAAA,KAAA,kBAAA,KAAA,OANA;AAOA,gCAAA,KAAA,kBAAA,KAAA,YAPA;AAQA,yBAAA,KAAA,kBAAA,KAAA,KARA;AASA,4BAAA,KAAA,kBAAA,KAAA,QATA;AAUA,gCAAA,KAAA,kBAAA,KAAA;AAVA,2BAWA,KAAA,KAXA,GAWA,KAAA,KAXA;AAaA;AAfA,GA9FA;AA+GA,EAAA,aA/GA,2BA+GA;AACA,SAAA,MAAA,CAAA,KAAA,GAAA,IAAA;AACA,SAAA,MAAA,GAAA,IAAA;AACA,GAlHA;AAmHA,EAAA,OAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,OAPA,mBAOA,IAPA,EAOA;AACA,WAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA;AACA,KATA;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,QAjBA,oBAiBA,SAjBA,EAiBA,KAjBA,EAiBA;AACA,UAAA,GAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,UAAA,EAAA;AAAA,eAAA,EAAA,CAAA,GAAA,KAAA,SAAA;AAAA,OAAA,CAAA;;AAEA,UAAA,GAAA,EAAA;AACA,YAAA,CAAA,GAAA,CAAA,QAAA,EAAA;AACA,UAAA,GAAA,CAAA,QAAA,GAAA,EAAA;AACA;;AACA,QAAA,GAAA,CAAA,QAAA,CAAA,IAAA,CAAA,KAAA;AACA;AACA,KA1BA;;AA2BA;AACA;AACA;AACA;AACA;AACA,IAAA,UAhCA,wBAgCA;AAAA,iDACA,KAAA,MAAA,CAAA,KADA;AAAA;;AAAA;AACA,4DAAA;AAAA,cAAA,IAAA;;AACA,cAAA,IAAA,CAAA,SAAA,CAAA,QAAA,EAAA;AACA,mBAAA,IAAA,CAAA,SAAA;AACA;;AACA,cAAA,IAAA,CAAA,QAAA,IAAA,IAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AAAA,wDACA,IAAA,CAAA,QADA;AAAA;;AAAA;AACA,qEAAA;AAAA,oBAAA,KAAA;;AACA,oBAAA,KAAA,CAAA,SAAA,CAAA,QAAA,EAAA;AACA,yBAAA,KAAA,CAAA,SAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;;AAcA,aAAA,IAAA;AACA,KA/CA;;AAgDA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,UAtDA,sBAsDA,GAtDA,EAsDA;AACA,UAAA,KAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,UAAA,EAAA;AAAA,eAAA,EAAA,CAAA,GAAA,KAAA,GAAA;AAAA,OAAA,CAAA;;AAEA,UAAA,KAAA,GAAA,CAAA,CAAA,EAAA;AACA,aAAA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA;AACA,KA5DA;;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,WApEA,uBAoEA,SApEA,EAoEA,QApEA,EAoEA;AACA,UAAA,GAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,UAAA,EAAA;AAAA,eAAA,EAAA,CAAA,GAAA,KAAA,SAAA;AAAA,OAAA,CAAA;;AAEA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,GAAA,GAAA,CAAA,QAAA,CAAA,SAAA,CAAA,UAAA,EAAA;AAAA,iBAAA,EAAA,CAAA,GAAA,KAAA,QAAA;AAAA,SAAA,CAAA;AACA,QAAA,GAAA,CAAA,QAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA;AACA;AACA;AA3EA;AAnHA,CAAA","sourcesContent":["<template>\r\n  <div :class=\"_classNames\" class=\"md-list\">\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"BsListView\",\r\n    props: {\r\n        /**\r\n         * Render ListView with the given color variant.\r\n         * @type {string|*}\r\n         */\r\n        color: {\r\n            type: String,\r\n            default: 'white'\r\n        },\r\n        /**\r\n         * Apply css `'overflow-hidden'` or not.\r\n         * @type {boolean|*}\r\n         */\r\n        overflowHidden: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * If `false` then more than one item can be expanded.\r\n         * @type {boolean|*}\r\n         */\r\n        singleExpand: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        /**\r\n         * Give some space around each item. Valid values are: `both`, `left`, `right`.\r\n         * @type {string|*}\r\n         */\r\n        spaceAround: {\r\n            type: String,\r\n            default: undefined,\r\n            validator: v => ['both', 'left', 'right'].indexOf(v) > -1\r\n        },\r\n        /**\r\n         * Give border around the active item.\r\n         * Valid values are: `left`, `right`, `left-right`, `top`, `bottom`, `top-bottom`.\r\n         * @type {string|*}\r\n         */\r\n        activeItemBordered: {\r\n            type: String,\r\n            default: undefined,\r\n            validator: v => ['left', 'right', 'left-right', 'top', 'bottom', 'top-bottom'].indexOf(v) > -1\r\n        },\r\n    },\r\n    data: (vm) => ({\r\n        bsList: {\r\n            items: [],\r\n            singleExpand: vm.singleExpand,\r\n            /**\r\n             * Add an item to the ListView registry.\r\n             *\r\n             * @param {Object} item The object or item instance to add\r\n             * @returns {void}\r\n             */\r\n            addItem: vm.addItem,\r\n            /**\r\n             * Add a child's item to a parent.\r\n             *\r\n             * @param {string} parentUid  The parent item ID\r\n             * @param {Object} child      The object or item instance to add\r\n             * @returns {void}\r\n             */\r\n            addChild: vm.addChild,\r\n            /**\r\n             * Removes an item from the ListView registry.\r\n             *\r\n             * @param {string} uid The ID of item that will be removed\r\n             * @returns {void}\r\n             */\r\n            removeItem: vm.removeItem,\r\n            /**\r\n             * Removes child's item from a parent.\r\n             *\r\n             * @param {string} parentUid The parent item ID\r\n             * @param {string} childUid  The child item ID that will be removed\r\n             * @returns {void}\r\n             */\r\n            removeChild: vm.removeChild,\r\n            /**\r\n             * Find a component in the registry that has active state.\r\n             *\r\n             * @returns {Object} The component instance\r\n             */\r\n            findActive: vm.findActive,\r\n        }\r\n    }),\r\n    provide() {\r\n        return {\r\n            bsList: this.bsList\r\n        }\r\n    },\r\n    computed: {\r\n        _classNames() {\r\n            return {\r\n                'overflow-hidden': this.overflowHidden,\r\n                'md-space-both': this.spaceAround === 'both',\r\n                'md-space-left': this.spaceAround === 'left',\r\n                'md-space-right': this.spaceAround === 'right',\r\n                'md-border-left': this.activeItemBordered === 'left',\r\n                'md-border-right': this.activeItemBordered === 'right',\r\n                'md-border-left-right': this.activeItemBordered === 'left-right',\r\n                'md-border-top': this.activeItemBordered === 'top',\r\n                'md-border-bottom': this.activeItemBordered === 'bottom',\r\n                'md-border-top-bottom': this.activeItemBordered === 'top-bottom',\r\n                [`md-list-${this.color}`]: this.color,\r\n            }\r\n        }\r\n    },\r\n    beforeDestroy() {\r\n        this.bsList.items = null;\r\n        this.bsList = null;\r\n    },\r\n    methods: {\r\n        /**\r\n         * Add an item to the ListView registry.\r\n         *\r\n         * @param {Object} item The object or item instance to add\r\n         * @returns {void}\r\n         */\r\n        addItem(item) {\r\n            this.bsList.items.push(item);\r\n        },\r\n        /**\r\n         * Add a child's item to a parent.\r\n         *\r\n         * @param {string} parentUid  The parent item ID\r\n         * @param {Object} child      The object or item instance to add\r\n         * @returns {void}\r\n         */\r\n        addChild(parentUid, child) {\r\n            const obj = this.bsList.items.find(el => el.uid === parentUid);\r\n\r\n            if (obj) {\r\n                if (!obj.children) {\r\n                    obj.children = [];\r\n                }\r\n                obj.children.push(child);\r\n            }\r\n        },\r\n        /**\r\n         * Find a component in the registry that has active state.\r\n         *\r\n         * @returns {Object} The component instance\r\n         */\r\n        findActive() {\r\n            for (const item of this.bsList.items) {\r\n                if (item.component.isActive) {\r\n                    return item.component;\r\n                }\r\n                if (item.children && item.children.length > 0) {\r\n                    for (const child of item.children) {\r\n                        if (child.component.isActive) {\r\n                            return child.component;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n        /**\r\n         * Removes an item from the ListView registry.\r\n         *\r\n         * @param {string} uid The ID of item that will be removed\r\n         * @returns {void}\r\n         */\r\n        removeItem(uid) {\r\n            const index = this.bsList.items.findIndex(el => el.uid === uid);\r\n\r\n            if (index > -1) {\r\n                this.bsList.items.splice(index, 1);\r\n            }\r\n        },\r\n        /**\r\n         * Removes child's item from a parent.\r\n         *\r\n         * @param {string} parentUid The parent item ID\r\n         * @param {string} childUid  The child item ID that will be removed\r\n         * @returns {void}\r\n         */\r\n        removeChild(parentUid, childUid) {\r\n            const obj = this.bsList.items.find(el => el.uid === parentUid);\r\n\r\n            if (obj) {\r\n                const idx = obj.children.findIndex(el => el.uid === childUid);\r\n                obj.children.splice(idx, 1);\r\n            }\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"~compass-sass-mixins/lib/compass/css3\";\r\n@import \"../../../scss/colors\";\r\n@import \"../../../scss/variables\";\r\n\r\n.#{$prefix}-list {\r\n    @include transition(height .3s cubic-bezier(.4, 0, .2, 1));\r\n    list-style-type: none;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n    padding: 8px 0;\r\n    height: 100%;\r\n\r\n    .#{$prefix}-subheader {\r\n        @include user-select(none);\r\n    }\r\n}\r\n\r\n.card {\r\n    > .#{$prefix}-list:first-child {\r\n        @include border-top-radius($border-radius-base * 2);\r\n    }\r\n\r\n    > .#{$prefix}-list:last-child {\r\n        @include border-bottom-radius($border-radius-base * 2);\r\n    }\r\n}\r\n</style>\r\n"],"sourceRoot":"node_modules/vue-mdbootstrap/src/components/BsList"}]}