{"remainingRequest":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\babel-loader\\lib\\index.js!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsNumericField.vue?vue&type=script&lang=js&","dependencies":[{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsNumericField.vue","mtime":1625050943000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BsNumericField.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div :class=\"_classNames\" class=\"md-field row\">\r\n    <slot v-if=\"floatingLabel === false\" v-bind=\"{ id }\" />\r\n    <div class=\"md-field-wrapper\">\r\n      <div\r\n        v-if=\"prependIconOuter\"\r\n        class=\"md-prepend-icon\">\r\n        <slot name=\"prependIconOuter\">\r\n          <font-awesome-icon :icon=\"prependIconOuter\" fixed-width />\r\n        </slot>\r\n      </div>\r\n      <div class=\"md-field-ctrl\">\r\n        <div class=\"md-field-inner\">\r\n          <fieldset\r\n            v-if=\"outlined\"\r\n            aria-hidden=\"true\">\r\n            <legend ref=\"legend\">\r\n              <span>​</span>\r\n            </legend>\r\n          </fieldset>\r\n          <div\r\n            v-if=\"prependIcon\"\r\n            class=\"md-prepend-icon\">\r\n            <slot name=\"prependIcon\">\r\n              <font-awesome-icon :icon=\"prependIcon\" fixed-width />\r\n            </slot>\r\n          </div>\r\n          <div\r\n            v-if=\"hasSpinButton && _leftSpinButton\"\r\n            class=\"md-spin-button-left\">\r\n            <bs-button\r\n              color=\"dark\"\r\n              size=\"xs\"\r\n              flat\r\n              @click=\"_incrementValue\">\r\n              <bs-icon icon=\"ArrowDropUp\" size=\"24\" />\r\n            </bs-button>\r\n            <bs-button\r\n              color=\"dark\"\r\n              size=\"xs\"\r\n              flat\r\n              @click=\"_decrementValue\">\r\n              <bs-icon icon=\"ArrowDropDown\" size=\"24\" />\r\n            </bs-button>\r\n          </div>\r\n          <div\r\n            v-if=\"hasActionButton && (_leftActionButton || _splitActionButton)\"\r\n            :class=\"{ 'md-button-split' : _splitActionButton }\"\r\n            class=\"md-action-button-left\">\r\n            <bs-button\r\n              v-if=\"_splitActionButton === false\"\r\n              v-bind=\"_actionButtonAttrs\"\r\n              @click=\"_incrementValue\">\r\n              <bs-icon icon=\"Add\" size=\"24\" />\r\n            </bs-button>\r\n            <bs-button v-bind=\"_actionButtonAttrs\" @click=\"_decrementValue\">\r\n              <bs-icon icon=\"Remove\" size=\"24\" />\r\n            </bs-button>\r\n          </div>\r\n          <div class=\"md-field-input-wrapper\">\r\n            <div\r\n              v-if=\"floatingLabel\"\r\n              ref=\"floatLabel\"\r\n              :class=\"floatingLabelClass\"\r\n              class=\"md-field-label\">\r\n              <slot v-bind=\"{ id }\" />\r\n            </div>\r\n            <input\r\n              ref=\"input\"\r\n              v-bind=\"attributes\"\r\n              role=\"textbox\"\r\n              @blur=\"_onBlur\"\r\n              @focus=\"_onFocus\"\r\n              @input=\"_updateValue($event.target.value)\"\r\n              @keydown=\"_onKeyDown\" />\r\n          </div>\r\n          <transition name=\"fade\">\r\n            <div\r\n              v-if=\"hasClearButton\"\r\n              class=\"md-action-icon\">\r\n              <bs-icon\r\n                v-if=\"hasClearButton\"\r\n                icon=\"clear\"\r\n                height=\"24\"\r\n                @click=\"clearValue\" />\r\n            </div>\r\n          </transition>\r\n          <div\r\n            v-if=\"hasActionButton && (_rightActionButton || _splitActionButton)\"\r\n            class=\"md-action-button-right\">\r\n            <bs-button\r\n              v-if=\"_splitActionButton === false\"\r\n              v-bind=\"_actionButtonAttrs\"\r\n              @click=\"_decrementValue\">\r\n              <bs-icon icon=\"Remove\" size=\"24\" />\r\n            </bs-button>\r\n            <bs-button v-bind=\"_actionButtonAttrs\" @click=\"_incrementValue\">\r\n              <bs-icon icon=\"Add\" size=\"24\" />\r\n            </bs-button>\r\n          </div>\r\n          <div\r\n            v-if=\"hasSpinButton && _rightSpinButton\"\r\n            class=\"md-spin-button-right\">\r\n            <bs-button\r\n              color=\"dark\"\r\n              size=\"xs\"\r\n              flat\r\n              @click=\"_incrementValue\">\r\n              <bs-icon icon=\"ArrowDropUp\" size=\"24\" />\r\n            </bs-button>\r\n            <bs-button\r\n              color=\"dark\"\r\n              size=\"xs\"\r\n              flat\r\n              @click=\"_decrementValue\">\r\n              <bs-icon icon=\"ArrowDropDown\" size=\"24\" />\r\n            </bs-button>\r\n          </div>\r\n          <div\r\n            v-if=\"appendIcon\"\r\n            class=\"md-append-icon\">\r\n            <slot name=\"appendIcon\">\r\n              <font-awesome-icon :icon=\"appendIcon\" fixed-width />\r\n            </slot>\r\n          </div>\r\n        </div>\r\n        <div\r\n          v-if=\"helpText || showErrorValidation\"\r\n          class=\"md-help-text\">\r\n          <transition name=\"fade\">\r\n            <slot name=\"helpText\">\r\n              <small\r\n                v-if=\"showHelpText\"\r\n                class=\"text-muted d-block\">\r\n                {{ helpText }}\r\n              </small>\r\n            </slot>\r\n          </transition>\r\n          <template v-if=\"hasValidationError\">\r\n            <small\r\n              v-for=\"(fld) in errorItems\"\r\n              :key=\"fld\"\r\n              class=\"text-danger d-block\">\r\n              {{ _validationMessage(fld) }}\r\n            </small>\r\n          </template>\r\n        </div>\r\n      </div>\r\n      <div\r\n        v-if=\"appendIconOuter\"\r\n        class=\"md-append-icon\">\r\n        <slot name=\"appendIconOuter\">\r\n          <font-awesome-icon :icon=\"appendIconOuter\" fixed-width />\r\n        </slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\r\nimport BsButton from \"../BsButton/BsButton\";\r\nimport BsIcon from \"../BsIcon/BsIcon\";\r\nimport Input from \"./mixins/Input\";\r\nimport TextField from \"./mixins/TextField\";\r\nimport FieldValidation from \"./mixins/FieldValidation\";\r\nimport Helper from \"../../utils/Helper\";\r\nimport \"../../../scss/_field.scss\"\r\n\r\nexport default {\r\n    name: \"BsNumericField\",\r\n    components: {FontAwesomeIcon, BsButton, BsIcon},\r\n    mixins: [Input, TextField, FieldValidation],\r\n    props: {\r\n        locale: {\r\n            type: String,\r\n            default: 'en-US'\r\n        },\r\n        useGrouping: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        spinButton: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        spinButtonPlacement: {\r\n            type: String,\r\n            default: 'right',\r\n            validator: v => ['left', 'right'].includes(v)\r\n        },\r\n        actionButton: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        actionButtonColor: {\r\n            type: String,\r\n            default: 'secondary'\r\n        },\r\n        actionButtonPlacement: {\r\n            type: String,\r\n            default: 'right',\r\n            validator: v => ['left', 'right', 'both'].includes(v)\r\n        },\r\n        /**\r\n         * Sets the maximum allowed fraction or decimal digits for the displayed value.\r\n         * @type {number|*}\r\n         */\r\n        maxFraction: {\r\n            type: [Number, String],\r\n            default: 3,\r\n            validator: v => !isNaN(parseInt(v))\r\n        },\r\n        /**\r\n         * Sets the maximum allowed value.\r\n         * @type {number|*}\r\n         */\r\n        maxValue: {\r\n            type: [String, Number],\r\n            default: undefined,\r\n            validator: v => !isNaN(parseFloat(v))\r\n        },\r\n        /**\r\n         * Sets the minimum allowed value\r\n         * @type {number|*}\r\n         */\r\n        minValue: {\r\n            type: [String, Number],\r\n            default: undefined,\r\n            validator: v => !isNaN(parseFloat(v))\r\n        },\r\n        step: {\r\n            type: [Number, String],\r\n            default: 1.0,\r\n            validator: v => !isNaN(parseFloat(v))\r\n        },\r\n        /**\r\n         * The value monitored by `v-model` to maintain field value.\r\n         * @type {string|number|*}\r\n         */\r\n        value: {\r\n            type: [String, Number],\r\n            default: undefined,\r\n            validator: v => !isNaN(parseFloat(v))\r\n        },\r\n    },\r\n    data() {\r\n        const value = this._parseValue(this.value);\r\n        const formatter = new Intl.NumberFormat(this.locale, {\r\n            maximumFractionDigits: parseInt(this.maxFraction),\r\n            useGrouping: this.useGrouping\r\n        });\r\n\r\n        return {\r\n            invalidNumber: false,\r\n            numberValue: value,\r\n            formatter: formatter,\r\n            localValue: !Helper.isEmpty(value) ? formatter.format(value) : null\r\n        }\r\n    },\r\n    computed: {\r\n        /**\r\n         * Get computed component's class names.\r\n         *\r\n         * @returns {Object|*} Collection of css classes\r\n         * @private\r\n         */\r\n        _classNames() {\r\n            return {\r\n                ...this.cmpAttrClasses,\r\n                'md-field-flat': this.flat,\r\n                'md-field-filled': this.filled,\r\n                'md-field-outlined': this.outlined,\r\n                'md-floating-label': this.floatingLabel,\r\n                'md-focused': this.isFocused,\r\n                'has-error': this.hasValidationError,\r\n                'has-success': this.hasValidated && !this.hasValidationError\r\n            }\r\n        },\r\n        _actionButtonAttrs() {\r\n            return {\r\n                'color': this.actionButtonColor,\r\n                'mode': 'icon',\r\n                'size': 'xs'\r\n            }\r\n        },\r\n        _leftActionButton() {\r\n            return !this.spinButton && this.actionButton && this.actionButtonPlacement === 'left';\r\n        },\r\n        _rightActionButton() {\r\n            return !this.spinButton && this.actionButton && this.actionButtonPlacement === 'right';\r\n        },\r\n        _splitActionButton() {\r\n            return !this.spinButton && this.actionButton && this.actionButtonPlacement === 'both';\r\n        },\r\n        _leftSpinButton() {\r\n            return this.spinButton && this.spinButtonPlacement === 'left';\r\n        },\r\n        _rightSpinButton() {\r\n            return this.spinButton && this.spinButtonPlacement === 'right';\r\n        },\r\n        hasActionButton() {\r\n            return this.actionButton && !this.spinButton && !this.readonly && !this.disabled;\r\n        },\r\n        hasSpinButton() {\r\n            return this.spinButton && !this.readonly && !this.disabled;\r\n        },\r\n        /**\r\n         * @returns {number|null} The maximum allowed value\r\n         * @private\r\n         */\r\n        _maxValue() {\r\n            const _value = parseFloat(this.maxValue);\r\n\r\n            if (!isNaN(_value)) {\r\n                return _value;\r\n            }\r\n\r\n            return null;\r\n        },\r\n        /**\r\n         * @returns {number|null} The minimum allowed value\r\n         * @private\r\n         */\r\n        _minValue() {\r\n            const _value = parseFloat(this.minValue);\r\n\r\n            if (!isNaN(_value)) {\r\n                return _value;\r\n            }\r\n\r\n            return null;\r\n        },\r\n        /**\r\n         * @returns {number} The increment/decrement step value.\r\n         * @private\r\n         */\r\n        _stepValue() {\r\n            const _step = parseFloat(this.step);\r\n\r\n            if (!isNaN(_step)) {\r\n                return _step;\r\n            }\r\n\r\n            return 1.0;\r\n        },\r\n        /**\r\n         * Get input field computed binding's attributes.\r\n         *\r\n         * @returns {Object|*} Attributes to bind\r\n         */\r\n        attributes() {\r\n            return {\r\n                ...this.cmpAttrs,\r\n                ...this.fieldAttrs,\r\n                'type': 'text',\r\n            }\r\n        },\r\n    },\r\n    watch: {\r\n        value(newValue) {\r\n            if (newValue && this.isFocused) {\r\n                this.numberValue = newValue;\r\n                this.localValue = Helper.roundNumber(newValue, this.maxFraction);\r\n            } else if (newValue) {\r\n                this.numberValue = this._parseValue(newValue);\r\n                this.localValue = this.formatValue(this.numberValue);\r\n            } else {\r\n                this.localValue = null;\r\n            }\r\n            this._updateLegend(newValue);\r\n        }\r\n    },\r\n    mounted() {\r\n        this._updateLabel();\r\n        this.$nextTick(() => {\r\n            if (this.autofocus && this.$refs.input) {\r\n                this.$refs.input.focus();\r\n            }\r\n            this._updateLegend();\r\n        });\r\n    },\r\n    methods: {\r\n        /**\r\n         * Clear the input value.\r\n         *\r\n         * @returns {void}\r\n         */\r\n        clearValue() {\r\n            this.numberValue = null;\r\n            this.localValue = null;\r\n            this.$emit('input', '');\r\n            this.$nextTick(() => {\r\n                this.$emit('clear');\r\n                this._updateLegend();\r\n            });\r\n        },\r\n        /**\r\n         * Format the input value as number formatted value.\r\n         *\r\n         * @param {number} value The value to format\r\n         * @returns {string} The formatted value\r\n         */\r\n        formatValue(value) {\r\n            return !Helper.isEmpty(value) ? this.formatter.format(value) : null;\r\n        },\r\n        isBelowOrEqualMaxValue(value) {\r\n            return Helper.isEmpty(this._maxValue) ? true : (!Helper.isEmpty(this._maxValue) && value <= this._maxValue);\r\n        },\r\n        isAboveOrEqualMinValue(value) {\r\n            return Helper.isEmpty(this._minValue) ? true : (!Helper.isEmpty(this._minValue) && value >= this._minValue);\r\n        },\r\n        _decrementValue() {\r\n            const _value = this.numberValue - this._stepValue;\r\n            this._updateValue(_value);\r\n        },\r\n        _incrementValue() {\r\n            const _value = this.numberValue + this._stepValue;\r\n            this._updateValue(_value);\r\n        },\r\n        /**\r\n         * Handler when input field lost focus.\r\n         *\r\n         * @param {FocusEvent} e The received event\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _onBlur(e) {\r\n            this.isFocused = false;\r\n            this.localValue = this.formatValue(this.numberValue);\r\n            this.$emit('blur', e);\r\n            this._updateLegend();\r\n            this._nextTickChange(this.numberValue);\r\n        },\r\n        /**\r\n         * Handler when input field get focus.\r\n         *\r\n         * @param {FocusEvent} e The received event\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _onFocus(e) {\r\n            if (!this.$refs.input) {\r\n                return;\r\n            }\r\n            if (document.activeElement !== this.$refs.input) {\r\n                this.$refs.input.focus();\r\n            }\r\n            if (this.localValue && this.numberValue === undefined) {\r\n                this.numberValue = this._parseValue(this.localValue);\r\n            }\r\n\r\n            this.isFocused = true;\r\n            this.localValue = this.numberValue && !isNaN(this.numberValue) ? Helper.roundNumber(this.numberValue, this.maxFraction) : null;\r\n            this.$emit('focus', e);\r\n            this._updateLegend();\r\n        },\r\n        /**\r\n         * Handler when input field receive keypress.\r\n         *\r\n         * @param {KeyboardEvent} e The received event\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _onKeyDown(e) {\r\n            if (!this.$refs.input) {\r\n                return;\r\n            }\r\n            const _incrementKey = ['Up', 'ArrowUp'];\r\n            const _decrementKey = ['Down', 'ArrowDown'];\r\n            const _specialKey = ['Left', 'ArrowLeft', 'Right', 'ArrowRight', 'Esc', 'Escape', 'End', 'Tab',\r\n                'Home', 'PageDown', 'PageUp', 'Backspace', 'Clear', 'Delete', 'Copy', 'Cut', 'EraseEof'];\r\n\r\n            if (e.key && e.key === 'Enter') {\r\n                this.numberValue = this._parseValue(this.localValue);\r\n                this.localValue = this.formatValue(this.numberValue);\r\n                this.$emit('keydown', e);\r\n                this._nextTickChange(this.numberValue);\r\n            } else if (/^-?\\d*[.,]?\\d*$/.test(e.key)) {\r\n                this.$emit('keydown', e);\r\n            } else if (_incrementKey.includes(e.key) && !this.disabled && !this.readonly) {\r\n                this._incrementValue();\r\n            } else if (_decrementKey.includes(e.key) && !this.disabled && !this.readonly) {\r\n                this._decrementValue();\r\n            } else if (_specialKey.includes(e.key)) {\r\n                this.$emit('keydown', e);\r\n            } else {\r\n                e.returnValue = false;\r\n            }\r\n        },\r\n        /**\r\n         * Convert an input string as floating-point number.\r\n         *\r\n         * @param {string|number} value The value to convert\r\n         * @returns {number|null} The converted value\r\n         * @private\r\n         */\r\n        _parseValue(value) {\r\n            if (Helper.isEmpty(value)) {\r\n                this.localValue = null;\r\n                return null;\r\n            }\r\n            if (Helper.isNumber(value)) {\r\n                return value;\r\n            }\r\n\r\n            let strValue = value.toString();\r\n            const posComma = strValue.indexOf(',');\r\n            const posDot = strValue.indexOf('.');\r\n\r\n            if (posComma > -1 && posDot > -1) {\r\n                if (posComma > posDot) {\r\n                    strValue = strValue.replace(/\\./g, '').replace(/,/g, '.');\r\n                } else {\r\n                    strValue = strValue.replace(/,/g, '');\r\n                }\r\n            } else if (posComma > -1) {\r\n                const values = strValue.split(',');\r\n\r\n                if (values.length > 2) {\r\n                    strValue = values.join('');\r\n                } else {\r\n                    strValue = values.join('.');\r\n                }\r\n            } else if (posDot > -1) {\r\n                const values = strValue.split('.');\r\n                if (values.length > 2) {\r\n                    strValue = values.join('');\r\n                }\r\n            }\r\n\r\n            const floatValue = parseFloat(strValue);\r\n            this.invalidNumber = isNaN(floatValue);\r\n\r\n            return floatValue;\r\n        },\r\n        /**\r\n         * Update input field value and fire input events.\r\n         *\r\n         * @param {string|number} value the input value\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _updateValue(value) {\r\n            const _value = this._parseValue(value);\r\n\r\n            if (this.isAboveOrEqualMinValue(_value) && this.isBelowOrEqualMaxValue(_value)) {\r\n                this.numberValue = _value;\r\n                this.localValue = Helper.roundNumber(_value, this.maxFraction);\r\n                this.$emit('input', this.numberValue);\r\n                this._nextTickChange(this.numberValue);\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"node_modules/vue-mdbootstrap/src/components/BsField"}]}