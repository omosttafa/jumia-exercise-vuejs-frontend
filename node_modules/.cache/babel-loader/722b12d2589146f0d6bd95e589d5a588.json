{"remainingRequest":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\babel-loader\\lib\\index.js!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsGrid\\BsGridColumnFilters.vue?vue&type=script&lang=js&","dependencies":[{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsGrid\\BsGridColumnFilters.vue","mtime":1609323709000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIk86L1dPUksvSlVNSUEvdnVlanMvbmV3L2p1bWlhLXZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW0uanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBGb250QXdlc29tZUljb24gfSBmcm9tICJAZm9ydGF3ZXNvbWUvdnVlLWZvbnRhd2Vzb21lIjsKaW1wb3J0IEJzQnV0dG9uIGZyb20gIi4uL0JzQnV0dG9uL0JzQnV0dG9uIjsKaW1wb3J0IEhlbHBlciBmcm9tICIuLi8uLi91dGlscy9IZWxwZXIiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkJzR3JpZENvbHVtbkZpbHRlcnMiLAogIGNvbXBvbmVudHM6IHsKICAgIEZvbnRBd2Vzb21lSWNvbjogRm9udEF3ZXNvbWVJY29uLAogICAgQnNCdXR0b246IEJzQnV0dG9uCiAgfSwKICBpbmplY3Q6IFsnQnNHcmlkJ10sCiAgcHJvcHM6IHsKICAgIGNvbHVtbnM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZAogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHZhbHVlczogW10KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmNvbHVtbnMubGVuZ3RoOyBpKyspIHsKICAgICAgdGhpcy52YWx1ZXMucHVzaCh7CiAgICAgICAgaW5kZXg6IGksCiAgICAgICAga2V5d29yZDogbnVsbAogICAgICB9KTsKICAgIH0KICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICB0aGlzLnZhbHVlcyA9IG51bGw7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvKioNCiAgICAgKiBAcHJvcGVydHkge0lCc0dyaWR9IEJzR3JpZA0KICAgICAqLwogICAgX2ZpZWxkQ2xhc3M6IGZ1bmN0aW9uIF9maWVsZENsYXNzKGluZGV4KSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgJ2Qtbm9uZSc6IHRoaXMudmFsdWVzW2luZGV4XS5rZXl3b3JkICE9PSAnJyAmJiB0aGlzLnZhbHVlc1tpbmRleF0ua2V5d29yZCAhPSBudWxsCiAgICAgIH07CiAgICB9LAogICAgX2hhc0ZpZWxkTmFtZTogZnVuY3Rpb24gX2hhc0ZpZWxkTmFtZShpbmRleCkgewogICAgICB2YXIgY29sdW1uID0gdGhpcy5jb2x1bW5zW2luZGV4XTsKICAgICAgcmV0dXJuICFIZWxwZXIuaXNFbXB0eShjb2x1bW4uZmlsdGVyYWJsZS5maWVsZCkgfHwgIUhlbHBlci5pc0VtcHR5KGNvbHVtbi5maWVsZCk7CiAgICB9LAoKICAgIC8qKg0KICAgICAqIEdldCBpbnB1dCBmaWVsZCBiaW5kaW5nIGF0dHJpYnV0ZXMuDQogICAgICoNCiAgICAgKiBAcGFyYW0ge2ludH0gaW5kZXggQ29sdW1uIGluZGV4DQogICAgICogQHJldHVybnMge09iamVjdH0gSW5wdXQgZmllbGQgYXR0cmlidXRlcw0KICAgICAqIEBwcml2YXRlDQogICAgICovCiAgICBfaW5wdXRBdHRyczogZnVuY3Rpb24gX2lucHV0QXR0cnMoaW5kZXgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICAndHlwZSc6ICd0ZXh0JywKICAgICAgICAndmFsdWUnOiB0aGlzLnZhbHVlc1tpbmRleF0ua2V5d29yZCwKICAgICAgICAnY2xhc3MnOiAnZm9ybS1jb250cm9sIGZvcm0tY29udHJvbC1zbScKICAgICAgfTsKICAgIH0sCgogICAgLyoqDQogICAgICogRmlsdGVyIGV4aXN0aW5nIGRhdGFJdGVtcyB3aXRoIGF2YWlsYWJsZSBmaWx0ZXJzLg0KICAgICAqDQogICAgICogQHJldHVybnMge3ZvaWR9DQogICAgICogQHByaXZhdGUNCiAgICAgKi8KICAgIF9kb0ZpbHRlcjogZnVuY3Rpb24gX2RvRmlsdGVyKCkgewogICAgICB2YXIgZmlsdGVycyA9IFtdOwoKICAgICAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHRoaXMudmFsdWVzKSwKICAgICAgICAgIF9zdGVwOwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgICAgdmFyIGl0ZW0gPSBfc3RlcC52YWx1ZTsKICAgICAgICAgIHZhciBjb2x1bW4gPSB0aGlzLmNvbHVtbnNbaXRlbS5pbmRleF07CgogICAgICAgICAgaWYgKCFIZWxwZXIuaXNFbXB0eShpdGVtLmtleXdvcmQpICYmIGl0ZW0ua2V5d29yZC50cmltKCkubGVuZ3RoID49IGNvbHVtbi5maWx0ZXJhYmxlLm1pbmxlbmd0aCkgewogICAgICAgICAgICBpZiAoSGVscGVyLmlzT2JqZWN0KGNvbHVtbi5maWx0ZXJhYmxlKSkgewogICAgICAgICAgICAgIGZpbHRlcnMucHVzaCh7CiAgICAgICAgICAgICAgICBwcm9wZXJ0eTogY29sdW1uLmZpbHRlcmFibGUuZmllbGQgfHwgY29sdW1uLmZpZWxkLAogICAgICAgICAgICAgICAgdmFsdWU6IGl0ZW0ua2V5d29yZC50cmltKCksCiAgICAgICAgICAgICAgICBvcGVyYXRvcjogY29sdW1uLmZpbHRlcmFibGUub3BlcmF0b3IgfHwgJ2VxJwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9IGVsc2UgaWYgKGNvbHVtbi5maWx0ZXJhYmxlID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgZmlsdGVycy5wdXNoKHsKICAgICAgICAgICAgICAgIHByb3BlcnR5OiBjb2x1bW4uZmllbGQsCiAgICAgICAgICAgICAgICB2YWx1ZTogaXRlbS5rZXl3b3JkLnRyaW0oKSwKICAgICAgICAgICAgICAgIG9wZXJhdG9yOiAnZXEnCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgfQoKICAgICAgaWYgKCFIZWxwZXIuaXNFbXB0eShmaWx0ZXJzKSkgewogICAgICAgIHRoaXMuQnNHcmlkLmZpbHRlcihmaWx0ZXJzKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLkJzR3JpZC5maWx0ZXIobnVsbCk7CiAgICAgIH0KICAgIH0sCgogICAgLyoqDQogICAgICogVXBkYXRlIGlucHV0IGZpZWxkIHZhbHVlIGFuZCBmaXJlIGlucHV0IGV2ZW50cy4NCiAgICAgKg0KICAgICAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcn0gdmFsdWUgVGhlIGlucHV0IHZhbHVlDQogICAgICogQHBhcmFtIHtpbnR9IGluZGV4ICAgICAgICAgICBDb2x1bW4gaW5kZXgNCiAgICAgKiBAcmV0dXJucyB7dm9pZH0NCiAgICAgKiBAcHJpdmF0ZQ0KICAgICAqLwogICAgX29uQ2hhbmdlVmFsdWU6IGZ1bmN0aW9uIF9vbkNoYW5nZVZhbHVlKHZhbHVlLCBpbmRleCkgewogICAgICB0aGlzLnZhbHVlc1tpbmRleF0ua2V5d29yZCA9IHZhbHVlOwoKICAgICAgaWYgKHRoaXMuY29sdW1uc1tpbmRleF0uZmlsdGVyYWJsZS5pbW1lZGlhdGUpIHsKICAgICAgICB0aGlzLl9kb0ZpbHRlcigpOwogICAgICB9CiAgICB9LAoKICAgIC8qKg0KICAgICAqIEhhbmRsZXIgd2hlbiBpbnB1dCBmaWVsZCByZWNlaXZlIGtleXByZXNzLg0KICAgICAqDQogICAgICogQHBhcmFtIHtLZXlib2FyZEV2ZW50fSBldmVudCBUaGUgcmVjZWl2ZWQgZXZlbnQNCiAgICAgKiBAcGFyYW0ge2ludH0gaW5kZXggICAgICAgICAgIENvbHVtbiBpbmRleA0KICAgICAqIEByZXR1cm5zIHt2b2lkfQ0KICAgICAqIEBwcml2YXRlDQogICAgICovCiAgICBfb25LZXlEb3duOiBmdW5jdGlvbiBfb25LZXlEb3duKGV2ZW50LCBpbmRleCkgewogICAgICBpZiAoZXZlbnQua2V5ICYmIGV2ZW50LmtleS50b0xvd2VyQ2FzZSgpID09PSAnZW50ZXInKSB7CiAgICAgICAgdGhpcy52YWx1ZXNbaW5kZXhdLmtleXdvcmQgPSBldmVudC50YXJnZXQudmFsdWU7CgogICAgICAgIGlmICh0aGlzLmNvbHVtbnNbaW5kZXhdLmZpbHRlcmFibGUuaW1tZWRpYXRlID09PSBmYWxzZSkgewogICAgICAgICAgdGhpcy5fZG9GaWx0ZXIoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["BsGridColumnFilters.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <tr>\r\n    <td v-if=\"BsGrid.enableRowSelect()\">\r\n      <bs-button\r\n        v-if=\"columns[0].filterable.immediate === false\"\r\n        color=\"secondary\"\r\n        size=\"sm\"\r\n        @click=\"_doFilter\">\r\n        <font-awesome-icon icon=\"search\" />\r\n      </bs-button>\r\n      <span v-else>&nbsp;</span>\r\n    </td>\r\n    <td\r\n      v-for=\"(column, idx) in columns\"\r\n      :class=\"{'border-right': column.rowNumbering}\"\r\n      :key=\"BsGrid.uuid() + idx\">\r\n      <div v-if=\"column.filterable.enabled && _hasFieldName(idx)\" class=\"md-field d-flex\">\r\n        <input\r\n          v-bind=\"_inputAttrs(idx)\"\r\n          @change=\"_onChangeValue($event.target.value, idx)\"\r\n          @keydown=\"_onKeyDown($event, idx)\" />\r\n        <div\r\n          v-if=\"column.filterable.placeholder\"\r\n          :class=\"_fieldClass(idx)\"\r\n          class=\"md-field-placeholder text-grey-400\">\r\n          <font-awesome-icon icon=\"search\" />\r\n        </div>\r\n        <bs-button\r\n          v-else-if=\"column.filterable.button\"\r\n          color=\"secondary\"\r\n          size=\"sm\"\r\n          @click=\"_doFilter\">\r\n          <font-awesome-icon icon=\"search\" />\r\n        </bs-button>\r\n      </div>\r\n      <bs-button\r\n        v-else-if=\"column.filterable.button\"\r\n        color=\"secondary\"\r\n        size=\"sm\"\r\n        block\r\n        @click=\"_doFilter\">\r\n        <font-awesome-icon icon=\"search\" />\r\n      </bs-button>\r\n      <span v-else>&nbsp;</span>\r\n    </td>\r\n  </tr>\r\n</template>\r\n\r\n<script>\r\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\r\nimport BsButton from \"../BsButton/BsButton\";\r\nimport Helper from \"../../utils/Helper\";\r\n\r\nexport default {\r\n    name: \"BsGridColumnFilters\",\r\n    components: {FontAwesomeIcon, BsButton},\r\n    inject: ['BsGrid'],\r\n    props: {\r\n        columns: {\r\n            type: Array,\r\n            default: undefined\r\n        }\r\n    },\r\n    data: () => ({\r\n        values: []\r\n    }),\r\n    created() {\r\n        for (let i = 0; i < this.columns.length; i++) {\r\n            this.values.push({index: i, keyword: null});\r\n        }\r\n    },\r\n    beforeDestroy() {\r\n        this.values = null;\r\n    },\r\n    methods: {\r\n        /**\r\n         * @property {IBsGrid} BsGrid\r\n         */\r\n\r\n        _fieldClass(index) {\r\n            return {\r\n                'd-none': (this.values[index].keyword !== '' && this.values[index].keyword != null)\r\n            }\r\n        },\r\n        _hasFieldName(index) {\r\n            const column = this.columns[index];\r\n\r\n            return (!Helper.isEmpty(column.filterable.field) || !Helper.isEmpty(column.field));\r\n        },\r\n        /**\r\n         * Get input field binding attributes.\r\n         *\r\n         * @param {int} index Column index\r\n         * @returns {Object} Input field attributes\r\n         * @private\r\n         */\r\n        _inputAttrs(index) {\r\n            return {\r\n                'type': 'text',\r\n                'value': this.values[index].keyword,\r\n                'class': 'form-control form-control-sm'\r\n            }\r\n        },\r\n        /**\r\n         * Filter existing dataItems with available filters.\r\n         *\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _doFilter() {\r\n            let filters = [];\r\n\r\n            for (const item of this.values) {\r\n                const column = this.columns[item.index];\r\n\r\n                if (!Helper.isEmpty(item.keyword) && item.keyword.trim().length >= column.filterable.minlength) {\r\n                    if (Helper.isObject(column.filterable)) {\r\n                        filters.push({\r\n                            property: (column.filterable.field || column.field),\r\n                            value: item.keyword.trim(),\r\n                            operator: (column.filterable.operator || 'eq')\r\n                        });\r\n                    } else if (column.filterable === true) {\r\n                        filters.push({property: column.field, value: item.keyword.trim(), operator: 'eq'});\r\n                    }\r\n                }\r\n            }\r\n            if (!Helper.isEmpty(filters)) {\r\n                this.BsGrid.filter(filters);\r\n            } else {\r\n                this.BsGrid.filter(null);\r\n            }\r\n        },\r\n        /**\r\n         * Update input field value and fire input events.\r\n         *\r\n         * @param {string|number} value The input value\r\n         * @param {int} index           Column index\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _onChangeValue(value, index) {\r\n            this.values[index].keyword = value;\r\n\r\n            if (this.columns[index].filterable.immediate) {\r\n                this._doFilter();\r\n            }\r\n        },\r\n        /**\r\n         * Handler when input field receive keypress.\r\n         *\r\n         * @param {KeyboardEvent} event The received event\r\n         * @param {int} index           Column index\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _onKeyDown(event, index) {\r\n            if (event.key && event.key.toLowerCase() === 'enter') {\r\n                this.values[index].keyword = event.target.value;\r\n\r\n                if (this.columns[index].filterable.immediate === false) {\r\n                    this._doFilter();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"~compass-sass-mixins/lib/compass/css3\";\r\n@import \"../../../scss/colors\";\r\n@import \"../../../scss/variables\";\r\n\r\n.#{$prefix}-grid {\r\n    .#{$prefix}-field {\r\n        > .#{$prefix}-field-placeholder {\r\n            position: absolute;\r\n            left: 8px;\r\n            top: 6px;\r\n        }\r\n\r\n        input[type='text']:focus {\r\n            ~ .#{$prefix}-field-placeholder {\r\n                display: none;\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>\r\n"],"sourceRoot":"node_modules/vue-mdbootstrap/src/components/BsGrid"}]}