{"remainingRequest":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsContainer\\BsContainer.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsContainer\\BsContainer.vue","mtime":1609324103000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCkBpbXBvcnQgIn5jb21wYXNzLXNhc3MtbWl4aW5zL2xpYi9jb21wYXNzL2NzczMiOw0KQGltcG9ydCAiLi4vLi4vLi4vc2Nzcy9jb2xvcnMiOw0KQGltcG9ydCAiLi4vLi4vLi4vc2Nzcy92YXJpYWJsZXMiOw0KDQouI3skcHJlZml4fS1jb250YWluZXItd3JhcCB7DQogICAgQGluY2x1ZGUgdHJhbnNpdGlvbigkdHJhbnNpdGlvbi1kdXJhdGlvbi1iYXNlICRtZC10cmFuc2l0aW9uLWRlZmF1bHQtdGltaW5nKTsNCiAgICBAaW5jbHVkZSBmbGV4Ym94KChkaXNwbGF5OiBmbGV4LCBmbGV4OiAxIDAgYXV0bykpOw0KICAgIG1heC13aWR0aDogMTAwJTsNCiAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQp9DQo="},{"version":3,"sources":["BsContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"BsContainer.vue","sourceRoot":"node_modules/vue-mdbootstrap/src/components/BsContainer","sourcesContent":["<template>\r\n  <div\r\n    :is=\"tag\"\r\n    v-resize=\"_resize\"\r\n    :style=\"_styles\"\r\n    class=\"md-container-wrap\">\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport resize from \"../../directives/WindowResize\";\r\nimport ScreenSize from \"../../mixins/ScreenSize\";\r\n\r\nexport default {\r\n    name: \"BsContainer\",\r\n    directives: {resize},\r\n    mixins: [ScreenSize],\r\n    props: {\r\n        /**\r\n         * Mount this container as part of application container or just ordinary container.\r\n         * If mount as part of application container, then it will adapt to SidebarDrawer and Appbar size.\r\n         * @type {boolean|*}\r\n         */\r\n        app: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Html tag used to render the container.\r\n         * @type {string|*}\r\n         */\r\n        tag: {\r\n            type: String,\r\n            default: 'div'\r\n        },\r\n    },\r\n    data: () => ({\r\n        isMobile: false\r\n    }),\r\n    computed: {\r\n        /**\r\n         * Get component's css styles.\r\n         *\r\n         * @returns {Object|null} Inline css styles\r\n         * @private\r\n         */\r\n        _styles() {\r\n            if (this.app) {\r\n                const {sideDrawerWidth, left, right} = this.$VueMdb.application;\r\n\r\n                return {\r\n                    // paddingTop: `${top + navbarHeight}px`,\r\n                    paddingRight: `${right}px`,\r\n                    // paddingBottom: `${footer + insetFooter + bottom}px`,\r\n                    paddingLeft: this.isMobile ? `${left}px` : `${sideDrawerWidth + left}px`\r\n                };\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    methods: {\r\n        /**\r\n         * Event handler when document body is resized.\r\n         *\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _resize() {\r\n            this.isMobile = !!this.screenMaxLg.matches;\r\n            this.$emit('resize', this.isMobile);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"~compass-sass-mixins/lib/compass/css3\";\r\n@import \"../../../scss/colors\";\r\n@import \"../../../scss/variables\";\r\n\r\n.#{$prefix}-container-wrap {\r\n    @include transition($transition-duration-base $md-transition-default-timing);\r\n    @include flexbox((display: flex, flex: 1 0 auto));\r\n    max-width: 100%;\r\n    position: relative;\r\n}\r\n</style>\r\n"]}]}