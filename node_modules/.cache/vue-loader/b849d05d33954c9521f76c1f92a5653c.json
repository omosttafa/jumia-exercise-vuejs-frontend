{"remainingRequest":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsNumericField.vue?vue&type=script&lang=js&","dependencies":[{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsNumericField.vue","mtime":1625050943000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BsNumericField.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"BsNumericField.vue","sourceRoot":"node_modules/vue-mdbootstrap/src/components/BsField","sourcesContent":["<template>\r\n  <div :class=\"_classNames\" class=\"md-field row\">\r\n    <slot v-if=\"floatingLabel === false\" v-bind=\"{ id }\" />\r\n    <div class=\"md-field-wrapper\">\r\n      <div\r\n        v-if=\"prependIconOuter\"\r\n        class=\"md-prepend-icon\">\r\n        <slot name=\"prependIconOuter\">\r\n          <font-awesome-icon :icon=\"prependIconOuter\" fixed-width />\r\n        </slot>\r\n      </div>\r\n      <div class=\"md-field-ctrl\">\r\n        <div class=\"md-field-inner\">\r\n          <fieldset\r\n            v-if=\"outlined\"\r\n            aria-hidden=\"true\">\r\n            <legend ref=\"legend\">\r\n              <span>​</span>\r\n            </legend>\r\n          </fieldset>\r\n          <div\r\n            v-if=\"prependIcon\"\r\n            class=\"md-prepend-icon\">\r\n            <slot name=\"prependIcon\">\r\n              <font-awesome-icon :icon=\"prependIcon\" fixed-width />\r\n            </slot>\r\n          </div>\r\n          <div\r\n            v-if=\"hasSpinButton && _leftSpinButton\"\r\n            class=\"md-spin-button-left\">\r\n            <bs-button\r\n              color=\"dark\"\r\n              size=\"xs\"\r\n              flat\r\n              @click=\"_incrementValue\">\r\n              <bs-icon icon=\"ArrowDropUp\" size=\"24\" />\r\n            </bs-button>\r\n            <bs-button\r\n              color=\"dark\"\r\n              size=\"xs\"\r\n              flat\r\n              @click=\"_decrementValue\">\r\n              <bs-icon icon=\"ArrowDropDown\" size=\"24\" />\r\n            </bs-button>\r\n          </div>\r\n          <div\r\n            v-if=\"hasActionButton && (_leftActionButton || _splitActionButton)\"\r\n            :class=\"{ 'md-button-split' : _splitActionButton }\"\r\n            class=\"md-action-button-left\">\r\n            <bs-button\r\n              v-if=\"_splitActionButton === false\"\r\n              v-bind=\"_actionButtonAttrs\"\r\n              @click=\"_incrementValue\">\r\n              <bs-icon icon=\"Add\" size=\"24\" />\r\n            </bs-button>\r\n            <bs-button v-bind=\"_actionButtonAttrs\" @click=\"_decrementValue\">\r\n              <bs-icon icon=\"Remove\" size=\"24\" />\r\n            </bs-button>\r\n          </div>\r\n          <div class=\"md-field-input-wrapper\">\r\n            <div\r\n              v-if=\"floatingLabel\"\r\n              ref=\"floatLabel\"\r\n              :class=\"floatingLabelClass\"\r\n              class=\"md-field-label\">\r\n              <slot v-bind=\"{ id }\" />\r\n            </div>\r\n            <input\r\n              ref=\"input\"\r\n              v-bind=\"attributes\"\r\n              role=\"textbox\"\r\n              @blur=\"_onBlur\"\r\n              @focus=\"_onFocus\"\r\n              @input=\"_updateValue($event.target.value)\"\r\n              @keydown=\"_onKeyDown\" />\r\n          </div>\r\n          <transition name=\"fade\">\r\n            <div\r\n              v-if=\"hasClearButton\"\r\n              class=\"md-action-icon\">\r\n              <bs-icon\r\n                v-if=\"hasClearButton\"\r\n                icon=\"clear\"\r\n                height=\"24\"\r\n                @click=\"clearValue\" />\r\n            </div>\r\n          </transition>\r\n          <div\r\n            v-if=\"hasActionButton && (_rightActionButton || _splitActionButton)\"\r\n            class=\"md-action-button-right\">\r\n            <bs-button\r\n              v-if=\"_splitActionButton === false\"\r\n              v-bind=\"_actionButtonAttrs\"\r\n              @click=\"_decrementValue\">\r\n              <bs-icon icon=\"Remove\" size=\"24\" />\r\n            </bs-button>\r\n            <bs-button v-bind=\"_actionButtonAttrs\" @click=\"_incrementValue\">\r\n              <bs-icon icon=\"Add\" size=\"24\" />\r\n            </bs-button>\r\n          </div>\r\n          <div\r\n            v-if=\"hasSpinButton && _rightSpinButton\"\r\n            class=\"md-spin-button-right\">\r\n            <bs-button\r\n              color=\"dark\"\r\n              size=\"xs\"\r\n              flat\r\n              @click=\"_incrementValue\">\r\n              <bs-icon icon=\"ArrowDropUp\" size=\"24\" />\r\n            </bs-button>\r\n            <bs-button\r\n              color=\"dark\"\r\n              size=\"xs\"\r\n              flat\r\n              @click=\"_decrementValue\">\r\n              <bs-icon icon=\"ArrowDropDown\" size=\"24\" />\r\n            </bs-button>\r\n          </div>\r\n          <div\r\n            v-if=\"appendIcon\"\r\n            class=\"md-append-icon\">\r\n            <slot name=\"appendIcon\">\r\n              <font-awesome-icon :icon=\"appendIcon\" fixed-width />\r\n            </slot>\r\n          </div>\r\n        </div>\r\n        <div\r\n          v-if=\"helpText || showErrorValidation\"\r\n          class=\"md-help-text\">\r\n          <transition name=\"fade\">\r\n            <slot name=\"helpText\">\r\n              <small\r\n                v-if=\"showHelpText\"\r\n                class=\"text-muted d-block\">\r\n                {{ helpText }}\r\n              </small>\r\n            </slot>\r\n          </transition>\r\n          <template v-if=\"hasValidationError\">\r\n            <small\r\n              v-for=\"(fld) in errorItems\"\r\n              :key=\"fld\"\r\n              class=\"text-danger d-block\">\r\n              {{ _validationMessage(fld) }}\r\n            </small>\r\n          </template>\r\n        </div>\r\n      </div>\r\n      <div\r\n        v-if=\"appendIconOuter\"\r\n        class=\"md-append-icon\">\r\n        <slot name=\"appendIconOuter\">\r\n          <font-awesome-icon :icon=\"appendIconOuter\" fixed-width />\r\n        </slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\r\nimport BsButton from \"../BsButton/BsButton\";\r\nimport BsIcon from \"../BsIcon/BsIcon\";\r\nimport Input from \"./mixins/Input\";\r\nimport TextField from \"./mixins/TextField\";\r\nimport FieldValidation from \"./mixins/FieldValidation\";\r\nimport Helper from \"../../utils/Helper\";\r\nimport \"../../../scss/_field.scss\"\r\n\r\nexport default {\r\n    name: \"BsNumericField\",\r\n    components: {FontAwesomeIcon, BsButton, BsIcon},\r\n    mixins: [Input, TextField, FieldValidation],\r\n    props: {\r\n        locale: {\r\n            type: String,\r\n            default: 'en-US'\r\n        },\r\n        useGrouping: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        spinButton: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        spinButtonPlacement: {\r\n            type: String,\r\n            default: 'right',\r\n            validator: v => ['left', 'right'].includes(v)\r\n        },\r\n        actionButton: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        actionButtonColor: {\r\n            type: String,\r\n            default: 'secondary'\r\n        },\r\n        actionButtonPlacement: {\r\n            type: String,\r\n            default: 'right',\r\n            validator: v => ['left', 'right', 'both'].includes(v)\r\n        },\r\n        /**\r\n         * Sets the maximum allowed fraction or decimal digits for the displayed value.\r\n         * @type {number|*}\r\n         */\r\n        maxFraction: {\r\n            type: [Number, String],\r\n            default: 3,\r\n            validator: v => !isNaN(parseInt(v))\r\n        },\r\n        /**\r\n         * Sets the maximum allowed value.\r\n         * @type {number|*}\r\n         */\r\n        maxValue: {\r\n            type: [String, Number],\r\n            default: undefined,\r\n            validator: v => !isNaN(parseFloat(v))\r\n        },\r\n        /**\r\n         * Sets the minimum allowed value\r\n         * @type {number|*}\r\n         */\r\n        minValue: {\r\n            type: [String, Number],\r\n            default: undefined,\r\n            validator: v => !isNaN(parseFloat(v))\r\n        },\r\n        step: {\r\n            type: [Number, String],\r\n            default: 1.0,\r\n            validator: v => !isNaN(parseFloat(v))\r\n        },\r\n        /**\r\n         * The value monitored by `v-model` to maintain field value.\r\n         * @type {string|number|*}\r\n         */\r\n        value: {\r\n            type: [String, Number],\r\n            default: undefined,\r\n            validator: v => !isNaN(parseFloat(v))\r\n        },\r\n    },\r\n    data() {\r\n        const value = this._parseValue(this.value);\r\n        const formatter = new Intl.NumberFormat(this.locale, {\r\n            maximumFractionDigits: parseInt(this.maxFraction),\r\n            useGrouping: this.useGrouping\r\n        });\r\n\r\n        return {\r\n            invalidNumber: false,\r\n            numberValue: value,\r\n            formatter: formatter,\r\n            localValue: !Helper.isEmpty(value) ? formatter.format(value) : null\r\n        }\r\n    },\r\n    computed: {\r\n        /**\r\n         * Get computed component's class names.\r\n         *\r\n         * @returns {Object|*} Collection of css classes\r\n         * @private\r\n         */\r\n        _classNames() {\r\n            return {\r\n                ...this.cmpAttrClasses,\r\n                'md-field-flat': this.flat,\r\n                'md-field-filled': this.filled,\r\n                'md-field-outlined': this.outlined,\r\n                'md-floating-label': this.floatingLabel,\r\n                'md-focused': this.isFocused,\r\n                'has-error': this.hasValidationError,\r\n                'has-success': this.hasValidated && !this.hasValidationError\r\n            }\r\n        },\r\n        _actionButtonAttrs() {\r\n            return {\r\n                'color': this.actionButtonColor,\r\n                'mode': 'icon',\r\n                'size': 'xs'\r\n            }\r\n        },\r\n        _leftActionButton() {\r\n            return !this.spinButton && this.actionButton && this.actionButtonPlacement === 'left';\r\n        },\r\n        _rightActionButton() {\r\n            return !this.spinButton && this.actionButton && this.actionButtonPlacement === 'right';\r\n        },\r\n        _splitActionButton() {\r\n            return !this.spinButton && this.actionButton && this.actionButtonPlacement === 'both';\r\n        },\r\n        _leftSpinButton() {\r\n            return this.spinButton && this.spinButtonPlacement === 'left';\r\n        },\r\n        _rightSpinButton() {\r\n            return this.spinButton && this.spinButtonPlacement === 'right';\r\n        },\r\n        hasActionButton() {\r\n            return this.actionButton && !this.spinButton && !this.readonly && !this.disabled;\r\n        },\r\n        hasSpinButton() {\r\n            return this.spinButton && !this.readonly && !this.disabled;\r\n        },\r\n        /**\r\n         * @returns {number|null} The maximum allowed value\r\n         * @private\r\n         */\r\n        _maxValue() {\r\n            const _value = parseFloat(this.maxValue);\r\n\r\n            if (!isNaN(_value)) {\r\n                return _value;\r\n            }\r\n\r\n            return null;\r\n        },\r\n        /**\r\n         * @returns {number|null} The minimum allowed value\r\n         * @private\r\n         */\r\n        _minValue() {\r\n            const _value = parseFloat(this.minValue);\r\n\r\n            if (!isNaN(_value)) {\r\n                return _value;\r\n            }\r\n\r\n            return null;\r\n        },\r\n        /**\r\n         * @returns {number} The increment/decrement step value.\r\n         * @private\r\n         */\r\n        _stepValue() {\r\n            const _step = parseFloat(this.step);\r\n\r\n            if (!isNaN(_step)) {\r\n                return _step;\r\n            }\r\n\r\n            return 1.0;\r\n        },\r\n        /**\r\n         * Get input field computed binding's attributes.\r\n         *\r\n         * @returns {Object|*} Attributes to bind\r\n         */\r\n        attributes() {\r\n            return {\r\n                ...this.cmpAttrs,\r\n                ...this.fieldAttrs,\r\n                'type': 'text',\r\n            }\r\n        },\r\n    },\r\n    watch: {\r\n        value(newValue) {\r\n            if (newValue && this.isFocused) {\r\n                this.numberValue = newValue;\r\n                this.localValue = Helper.roundNumber(newValue, this.maxFraction);\r\n            } else if (newValue) {\r\n                this.numberValue = this._parseValue(newValue);\r\n                this.localValue = this.formatValue(this.numberValue);\r\n            } else {\r\n                this.localValue = null;\r\n            }\r\n            this._updateLegend(newValue);\r\n        }\r\n    },\r\n    mounted() {\r\n        this._updateLabel();\r\n        this.$nextTick(() => {\r\n            if (this.autofocus && this.$refs.input) {\r\n                this.$refs.input.focus();\r\n            }\r\n            this._updateLegend();\r\n        });\r\n    },\r\n    methods: {\r\n        /**\r\n         * Clear the input value.\r\n         *\r\n         * @returns {void}\r\n         */\r\n        clearValue() {\r\n            this.numberValue = null;\r\n            this.localValue = null;\r\n            this.$emit('input', '');\r\n            this.$nextTick(() => {\r\n                this.$emit('clear');\r\n                this._updateLegend();\r\n            });\r\n        },\r\n        /**\r\n         * Format the input value as number formatted value.\r\n         *\r\n         * @param {number} value The value to format\r\n         * @returns {string} The formatted value\r\n         */\r\n        formatValue(value) {\r\n            return !Helper.isEmpty(value) ? this.formatter.format(value) : null;\r\n        },\r\n        isBelowOrEqualMaxValue(value) {\r\n            return Helper.isEmpty(this._maxValue) ? true : (!Helper.isEmpty(this._maxValue) && value <= this._maxValue);\r\n        },\r\n        isAboveOrEqualMinValue(value) {\r\n            return Helper.isEmpty(this._minValue) ? true : (!Helper.isEmpty(this._minValue) && value >= this._minValue);\r\n        },\r\n        _decrementValue() {\r\n            const _value = this.numberValue - this._stepValue;\r\n            this._updateValue(_value);\r\n        },\r\n        _incrementValue() {\r\n            const _value = this.numberValue + this._stepValue;\r\n            this._updateValue(_value);\r\n        },\r\n        /**\r\n         * Handler when input field lost focus.\r\n         *\r\n         * @param {FocusEvent} e The received event\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _onBlur(e) {\r\n            this.isFocused = false;\r\n            this.localValue = this.formatValue(this.numberValue);\r\n            this.$emit('blur', e);\r\n            this._updateLegend();\r\n            this._nextTickChange(this.numberValue);\r\n        },\r\n        /**\r\n         * Handler when input field get focus.\r\n         *\r\n         * @param {FocusEvent} e The received event\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _onFocus(e) {\r\n            if (!this.$refs.input) {\r\n                return;\r\n            }\r\n            if (document.activeElement !== this.$refs.input) {\r\n                this.$refs.input.focus();\r\n            }\r\n            if (this.localValue && this.numberValue === undefined) {\r\n                this.numberValue = this._parseValue(this.localValue);\r\n            }\r\n\r\n            this.isFocused = true;\r\n            this.localValue = this.numberValue && !isNaN(this.numberValue) ? Helper.roundNumber(this.numberValue, this.maxFraction) : null;\r\n            this.$emit('focus', e);\r\n            this._updateLegend();\r\n        },\r\n        /**\r\n         * Handler when input field receive keypress.\r\n         *\r\n         * @param {KeyboardEvent} e The received event\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _onKeyDown(e) {\r\n            if (!this.$refs.input) {\r\n                return;\r\n            }\r\n            const _incrementKey = ['Up', 'ArrowUp'];\r\n            const _decrementKey = ['Down', 'ArrowDown'];\r\n            const _specialKey = ['Left', 'ArrowLeft', 'Right', 'ArrowRight', 'Esc', 'Escape', 'End', 'Tab',\r\n                'Home', 'PageDown', 'PageUp', 'Backspace', 'Clear', 'Delete', 'Copy', 'Cut', 'EraseEof'];\r\n\r\n            if (e.key && e.key === 'Enter') {\r\n                this.numberValue = this._parseValue(this.localValue);\r\n                this.localValue = this.formatValue(this.numberValue);\r\n                this.$emit('keydown', e);\r\n                this._nextTickChange(this.numberValue);\r\n            } else if (/^-?\\d*[.,]?\\d*$/.test(e.key)) {\r\n                this.$emit('keydown', e);\r\n            } else if (_incrementKey.includes(e.key) && !this.disabled && !this.readonly) {\r\n                this._incrementValue();\r\n            } else if (_decrementKey.includes(e.key) && !this.disabled && !this.readonly) {\r\n                this._decrementValue();\r\n            } else if (_specialKey.includes(e.key)) {\r\n                this.$emit('keydown', e);\r\n            } else {\r\n                e.returnValue = false;\r\n            }\r\n        },\r\n        /**\r\n         * Convert an input string as floating-point number.\r\n         *\r\n         * @param {string|number} value The value to convert\r\n         * @returns {number|null} The converted value\r\n         * @private\r\n         */\r\n        _parseValue(value) {\r\n            if (Helper.isEmpty(value)) {\r\n                this.localValue = null;\r\n                return null;\r\n            }\r\n            if (Helper.isNumber(value)) {\r\n                return value;\r\n            }\r\n\r\n            let strValue = value.toString();\r\n            const posComma = strValue.indexOf(',');\r\n            const posDot = strValue.indexOf('.');\r\n\r\n            if (posComma > -1 && posDot > -1) {\r\n                if (posComma > posDot) {\r\n                    strValue = strValue.replace(/\\./g, '').replace(/,/g, '.');\r\n                } else {\r\n                    strValue = strValue.replace(/,/g, '');\r\n                }\r\n            } else if (posComma > -1) {\r\n                const values = strValue.split(',');\r\n\r\n                if (values.length > 2) {\r\n                    strValue = values.join('');\r\n                } else {\r\n                    strValue = values.join('.');\r\n                }\r\n            } else if (posDot > -1) {\r\n                const values = strValue.split('.');\r\n                if (values.length > 2) {\r\n                    strValue = values.join('');\r\n                }\r\n            }\r\n\r\n            const floatValue = parseFloat(strValue);\r\n            this.invalidNumber = isNaN(floatValue);\r\n\r\n            return floatValue;\r\n        },\r\n        /**\r\n         * Update input field value and fire input events.\r\n         *\r\n         * @param {string|number} value the input value\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _updateValue(value) {\r\n            const _value = this._parseValue(value);\r\n\r\n            if (this.isAboveOrEqualMinValue(_value) && this.isBelowOrEqualMaxValue(_value)) {\r\n                this.numberValue = _value;\r\n                this.localValue = Helper.roundNumber(_value, this.maxFraction);\r\n                this.$emit('input', this.numberValue);\r\n                this._nextTickChange(this.numberValue);\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}