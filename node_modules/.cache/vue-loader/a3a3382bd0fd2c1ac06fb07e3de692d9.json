{"remainingRequest":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsBasic\\BsChip.vue?vue&type=script&lang=js&","dependencies":[{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsBasic\\BsChip.vue","mtime":1625048492000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BsChip.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"BsChip.vue","sourceRoot":"node_modules/vue-mdbootstrap/src/components/BsBasic","sourcesContent":["<template>\r\n  <transition name=\"fade\">\r\n    <div\r\n      v-if=\"show\"\r\n      v-on=\"$listeners\"\r\n      :is=\"_cmpTag\"\r\n      :class=\"_classNames\"\r\n      :href=\"href && !disabled ? href : null\"\r\n      class=\"md-chip\"\r\n      @mousedown=\"_mouseDown\">\r\n      <bs-ripple\r\n        :disabled=\"_rippleDisabled\"\r\n        class=\"md-chip-content\">\r\n        <transition name=\"scale\">\r\n          <span\r\n            v-if=\"imgSrc\"\r\n            :class=\"{'md-chip-avatar-bounded': imgPadding === false}\"\r\n            class=\"md-chip-avatar mr-2\">\r\n            <img\r\n              :class=\"_imageClass\"\r\n              :src=\"imgSrc\"\r\n              :style=\"_imageStyles\"\r\n              alt=\"Chip Avatar\" />\r\n          </span>\r\n        </transition>\r\n        <span v-if=\"icon\" class=\"md-chip-icon mr-2\">\r\n          <slot name=\"chipIcon\">\r\n            <bs-icon v-if=\"isInternal\" v-bind=\"_bsIconAttrs\" />\r\n            <span v-else class=\"md-chip-icon-fa\">\r\n              <font-awesome-icon v-bind=\"_faIconAttrs\" />\r\n            </span>\r\n          </slot>\r\n        </span>        \r\n        <span class=\"md-chip-text\">\r\n          <slot></slot>\r\n        </span>\r\n        <bs-button\r\n          v-if=\"dismissible\"\r\n          v-bind=\"_btnCloseAttrs\"\r\n          @click=\"_hide\">\r\n          <bs-icon v-bind=\"_iconCloseAttrs\" icon=\"close\" />\r\n        </bs-button>\r\n      </bs-ripple>\r\n    </div>\r\n  </transition>\r\n</template>\r\n\r\n<script>\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\r\nimport BsButton from \"../BsButton/BsButton\";\r\nimport BsIcon from \"../BsIcon/BsIcon\";\r\nimport BsRipple from \"../BsAnimation/BsRipple\";\r\nimport IconMixin from \"./mixins/IconMixin\";\r\nimport ActiveMixin from \"./mixins/ActiveMixin\";\r\nimport DisabledMixin from \"./mixins/DisabledMixin\";\r\n\r\nexport default {\r\n    name: \"BsChip\",\r\n    components: {BsButton, BsIcon, BsRipple, FontAwesomeIcon},\r\n    mixins: [ActiveMixin, DisabledMixin, IconMixin],\r\n    props: {\r\n        /**\r\n         * Custom CSS class to apply when the chip is in active state.\r\n         * @type {string|*}\r\n         */\r\n        activeClass: {\r\n            type: String,\r\n            default: undefined\r\n        },\r\n        /**\r\n         * Predefine color when Chip is in active state.\r\n         * @type {string|*}\r\n         */\r\n        activeColor: {\r\n            type: String,\r\n            default: undefined\r\n        },\r\n        /**\r\n         * The default chip color to apply.\r\n         * @type {string|*}\r\n         */\r\n        color: {\r\n            type: String,\r\n            default: 'light-grey'\r\n        },\r\n        /**\r\n         * Render as `<a>` element and define its `href` property and apply chip styles to the element.\r\n         * @type {string|*}\r\n         */\r\n        href: {\r\n            type: String,\r\n            default: undefined\r\n        },\r\n        /**\r\n         * Enable avatar and set the image location url.\r\n         * @type {string|*}\r\n         */\r\n        imgSrc: {\r\n            type: String,\r\n            default: undefined\r\n        },\r\n        /**\r\n         * Create avatar with circle shape.\r\n         * @type {boolean|*}\r\n         */\r\n        imgCircle: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        /**\r\n         * Adjust avatar size to match the Chip height by eliminating the margin around the avatar.\r\n         * @type {boolean|*}\r\n         */\r\n        imgPadding: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        /**\r\n         * When set, display the close button to dismiss/hide the component.\r\n         * @type {boolean|*}\r\n         */\r\n        dismissible: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Remove circle edges.\r\n         * @type {boolean|*}\r\n         */\r\n        label: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Render Chip with outlined style or not.\r\n         * @type {boolean|*}\r\n         */\r\n        outlined: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Enabled or disabled ripple effect.\r\n         * Ripple effect is automatically disabled when `click` event or `href` property is not defined.\r\n         * @type {boolean|*}\r\n         */\r\n        rippleOff: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Adjust FontAwesome Icon size with css rules like `font-size` or `height` and `width`.\r\n         * @type {Object}\r\n         */\r\n        faStyles: {\r\n            type: Object,\r\n            default: undefined\r\n        },\r\n        /**\r\n         * Create Chip with predefined size, valid values are: `sm` (small), `lg` (large).\r\n         * @type {string|*}\r\n         */\r\n        size: {\r\n            type: String,\r\n            default: undefined,\r\n            validator: (value) => ['sm', 'lg'].includes(value)\r\n        },\r\n        /**\r\n         * The value monitored by `v-model` to show or hide the Chip component.\r\n         * @type {boolean|*}\r\n         */\r\n        value: {\r\n            type: Boolean,\r\n            default: true\r\n        }\r\n    },\r\n    data: () => ({\r\n        dismiss: false,\r\n        notCtxColors: ['warning', 'light', 'light-grey'],\r\n        lightColors: ['light', 'light-grey'],\r\n    }),\r\n    computed: {\r\n        /**\r\n         * Get Icon `Close` binding attributes.\r\n         *\r\n         * @returns {Object} The icon attributes\r\n         * @private\r\n         */\r\n        _iconCloseAttrs() {\r\n            return {\r\n                'class': {\r\n                    'text-white': this.lightColors.includes(this.color) || this.outlined,\r\n                    ['text-' + this.color]: this.color && !this.lightColors.includes(this.color) && !this.outlined\r\n                },\r\n                'size': this.size === 'lg' ? 20 : (this.size === 'sm' ? 12 : 16)\r\n            }\r\n        },\r\n        /**\r\n         * Get Button `Close` binding attributes.\r\n         *\r\n         * @returns {Object} The button attributes\r\n         * @private\r\n         */\r\n        _btnCloseAttrs() {\r\n            return {\r\n                'rippleOff': true,\r\n                'class': this.size === 'sm' ? 'ml-2 mr-n2' : 'ml-2 mr-n1',\r\n                'mode': 'icon',\r\n                'size': 'xs',\r\n                'disabled': this.disabled,\r\n                'color': this.outlined && !this.lightColors.includes(this.color)\r\n                    ? this.color : (this.lightColors.includes(this.color) ? 'grey' : 'light'),\r\n            }\r\n        },\r\n        /**\r\n         * Get BsIcon binding attributes.\r\n         *\r\n         * @returns {Object} The icon attributes\r\n         * @private\r\n         */\r\n        _bsIconAttrs() {\r\n            return {\r\n                ...this.iconAttributes,\r\n                size: this.size === 'sm' ? 18 : (this.size === 'lg' ? 40 : 24)\r\n            }\r\n        },\r\n        /**\r\n         * Get FontAwesomeIcon binding attributes.\r\n         *\r\n         * @returns {Object} The icon attributes\r\n         * @private\r\n         */\r\n        _faIconAttrs() {\r\n            let styles = {};\r\n\r\n            if (this.size === 'sm') {\r\n                styles = {\r\n                    'font-size': '16px',\r\n                    'max-height': '16px',\r\n                    'max-width': '16px',\r\n                };\r\n            } else if (this.size === 'lg') {\r\n                styles = {\r\n                    'font-size': '36px',\r\n                    'max-height': '36px',\r\n                    'max-width': '36px',\r\n                };\r\n            } else {\r\n                styles = {\r\n                    'font-size': '22px',\r\n                    'max-height': '22px',\r\n                    'max-width': '22px',\r\n                };\r\n            }\r\n\r\n            return {\r\n                ...this.iconAttributes,\r\n                style: {\r\n                    ...styles,\r\n                    ...this.faStyles\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Get component class names.\r\n         *\r\n         * @returns {Object|*} The collection of css classes\r\n         * @private\r\n         */\r\n        _classNames() {\r\n            return {\r\n                ...this._activeClasses,\r\n                ...this._disableClasses,\r\n                'md-chip-sm': this.size === 'sm',\r\n                'md-chip-lg': this.size === 'lg',\r\n                'md-chip-label': this.label,\r\n                'md-chip-outlined': this.outlined,\r\n                'md-chip-clickable': (this.href || this.$listeners.click) && !this.disabled,\r\n                ['md-chip-' + this.color]: this.color && !this.outlined && !this.disabled && (!this.activeColor || !this.active),\r\n                ['md-chip-outline-' + this.color]: this.color && this.outlined && !this.disabled && (!this.activeColor || !this.active),\r\n                ['md-chip-' + this.activeColor]: this.activeColor && this.active && !this.outlined && !this.disabled,\r\n                ['md-chip-outline-' + this.activeColor]: this.activeColor && this.active && this.outlined && !this.disabled,\r\n                [this.activeClass]: this.activeClass && this.active && !this.disabled,\r\n            }\r\n        },\r\n        /**\r\n         * Get avatar class names.\r\n         *\r\n         * @returns {Object|*} The collection of css classes\r\n         * @private\r\n         */\r\n        _imageClass() {\r\n            return {\r\n                'rounded-circle': this.imgCircle,\r\n                'rounded': !this.imgCircle,\r\n            }\r\n        },\r\n        /**\r\n         * Get avatar size.\r\n         *\r\n         * @returns {Object|*} The collection of css rules\r\n         * @private\r\n         */\r\n        _imageStyles() {\r\n            let imgSize = '1.5rem';\r\n\r\n            if (this.size === 'sm') {\r\n                imgSize = this.imgPadding ? '1.125rem' : '1.56rem';\r\n            } else if (this.size === 'lg') {\r\n                imgSize = this.imgPadding ? '2.375rem' : '3rem';\r\n            } else {\r\n                imgSize = this.imgPadding ? '1.5rem' : '2rem';\r\n            }\r\n\r\n            return {\r\n                height: imgSize,\r\n                width: imgSize\r\n            }\r\n        },\r\n        /**\r\n         * Check whether ripple animation effect enabled or disabled.\r\n         *\r\n         * @returns {boolean} Ripple state: enabled or disabled\r\n         * @private\r\n         */\r\n        _rippleDisabled() {\r\n            return this.rippleOff || this.disabled || (!this.$listeners.click && !this.href);\r\n        },\r\n        _cmpTag() {\r\n            return this.href && !this.disabled ? 'a' : 'div';\r\n        },\r\n        /**\r\n         * Check if this component is visible or not.\r\n         *\r\n         * @returns {boolean} True if component is visible otherwise False\r\n         */\r\n        show() {\r\n            return !this.dismiss && this.value;\r\n        }\r\n    },\r\n    watch: {\r\n        value(newValue) {\r\n            if (this.dismissible && newValue === true) {\r\n                this.dismiss = false;\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        _hide() {\r\n            this.dismiss = true;\r\n            this.$emit('update:active', false);\r\n            this.$emit('input', false);\r\n            this.$nextTick(() => {\r\n                this.$emit('close');\r\n            });\r\n        },\r\n        _mouseDown(event) {\r\n            if (!this.disabled) {\r\n                this.$emit('update:active', !this.active);\r\n            }\r\n\r\n            this.$listeners.mousedown && this.$listeners.mousedown(event);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"~compass-sass-mixins/lib/compass/css3\";\r\n@import \"../../../scss/colors\";\r\n@import \"../../../scss/variables\";\r\n@import \"../../../scss/functions\";\r\n@import \"../../../scss/mixins\";\r\n@import \"../../../scss/shared\";\r\n\r\n.#{$prefix}-chip {\r\n    @include flexbox((display: inline-flex, align-items: center));\r\n    @include border-radius($border-radius-pill);\r\n    cursor: default;\r\n    height: 2rem;\r\n    max-width: 100%;\r\n    line-height: 1;\r\n    outline: none;\r\n    overflow: hidden;\r\n    position: relative;\r\n    white-space: nowrap;\r\n    vertical-align: middle;\r\n    text-decoration: none !important;\r\n    transition-duration: .4s;\r\n    transition-property: box-shadow, opacity, width;\r\n    transition-timing-function: $md-transition-stand-timing;\r\n\r\n    &:before {\r\n        @extend %full-rect-absolute;\r\n        @extend %opacity-0;\r\n        background-color: currentColor;\r\n        border-radius: inherit;\r\n        content: \" \";\r\n        pointer-events: none;\r\n    }\r\n\r\n    &.#{$prefix}-disabled {\r\n        background-color: lighten($gray-500, 25%);\r\n        color: $gray-700;\r\n    }\r\n\r\n    &.#{$prefix}-chip-outlined {\r\n        border: thin solid $gray-500;\r\n        background-color: transparent;\r\n\r\n        &.#{$prefix}-disabled {\r\n            border-color: lighten($gray-500, 8%);\r\n            color: lighten($gray-500, 8%) !important;\r\n        }\r\n    }\r\n\r\n    &.#{$prefix}-chip-clickable:not(.#{$prefix}-disabled) {\r\n        @include user-select(none);\r\n        cursor: pointer;\r\n    }\r\n\r\n    > .#{$prefix}-chip-content {\r\n        @include flexbox((display: inline-flex, align-items: center));\r\n        @include border-radius($border-radius-pill);\r\n        padding: 0 ($padding-base - .25);\r\n        max-width: 100%;\r\n\r\n        > .#{$prefix}-chip-avatar,\r\n        > .#{$prefix}-chip-icon {\r\n            @include flexbox((display: flex, align-self: center, align-items: center));\r\n            @include transition(.3s $md-transition-stand-timing, visibility);\r\n            margin-left: -.5rem; // -6px\r\n\r\n            > .#{$prefix}-chip-icon-fa {\r\n                @include flexbox((display: flex, justify-content: center, align-items: center));\r\n                height: 22px;\r\n                width: 22px;\r\n            }\r\n        }\r\n\r\n        > .#{$prefix}-chip-avatar {\r\n            &.#{$prefix}-chip-avatar-bounded {\r\n                margin-left: -.75rem;\r\n            }\r\n        }\r\n    }\r\n\r\n    &.#{$prefix}-chip-label {\r\n        @include border-radius($border-radius-sm);\r\n\r\n        > .#{$prefix}-chip-content {\r\n            @include border-radius($border-radius-sm);\r\n        }\r\n    }\r\n\r\n    &.#{$prefix}-chip-sm {\r\n        font-size: 80%;\r\n        height: 1.56rem;\r\n\r\n        > .#{$prefix}-chip-content {\r\n            > .#{$prefix}-chip-avatar,\r\n            > .#{$prefix}-chip-icon {\r\n                margin-left: -.5rem; // -8px\r\n\r\n                > .#{$prefix}-chip-icon-fa {\r\n                    height: 18px;\r\n                    width: 18px;\r\n                }\r\n            }\r\n\r\n            > .#{$prefix}-chip-avatar {\r\n                &.#{$prefix}-chip-avatar-bounded {\r\n                    margin-left: -.75rem;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    &.#{$prefix}-chip-lg {\r\n        font-size: 120%;\r\n        height: 3rem;\r\n\r\n        > .#{$prefix}-chip-content {\r\n            padding: 0 $padding-base;\r\n\r\n            > .#{$prefix}-chip-avatar,\r\n            > .#{$prefix}-chip-icon {\r\n                margin-left: -.625rem; // -10px\r\n\r\n                > .#{$prefix}-chip-icon-fa {\r\n                    height: 38px;\r\n                    width: 38px;\r\n                }\r\n            }\r\n\r\n            > .#{$prefix}-chip-avatar {\r\n                &.#{$prefix}-chip-avatar-bounded {\r\n                    margin-left: -$padding-base;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    + .#{$prefix}-chip {\r\n        margin-left: $padding-sm;\r\n    }\r\n}\r\n\r\n@each $color_name, $color in $merge-theme-colors {\r\n    @include make-chip($color_name, $color);\r\n    @include make-outline-chip($color_name, $color);\r\n}\r\n</style>\r\n"]}]}