{"remainingRequest":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsBasic\\BsAlert.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsBasic\\BsAlert.vue","mtime":1614512599000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAaW1wb3J0ICJ+Y29tcGFzcy1zYXNzLW1peGlucy9saWIvY29tcGFzcy9jc3MzIjsNCkBpbXBvcnQgIn5ib290c3RyYXAvc2Nzcy9taXhpbnMvYWxlcnQiOw0KQGltcG9ydCAifmJvb3RzdHJhcC9zY3NzL21peGlucy9ncmFkaWVudHMiOw0KQGltcG9ydCAiLi4vLi4vLi4vc2Nzcy9jb2xvcnMiOw0KQGltcG9ydCAiLi4vLi4vLi4vc2Nzcy92YXJpYWJsZXMiOw0KQGltcG9ydCAiLi4vLi4vLi4vc2Nzcy9mdW5jdGlvbnMiOw0KQGltcG9ydCAiLi4vLi4vLi4vc2Nzcy9taXhpbnMiOw0KDQouYWxlcnQgew0KICAgICYuYWxlcnQtZGlzbWlzc2libGUgew0KICAgICAgICBwYWRkaW5nLXJpZ2h0OiAzLjNyZW07DQoNCiAgICAgICAgPiAuY2xvc2Ugew0KICAgICAgICAgICAgcGFkZGluZzogLjVyZW07DQogICAgICAgIH0NCiAgICB9DQoNCiAgICA+IC5hbGVydC1pY29uIHsNCiAgICAgICAgZm9udC1zaXplOiAxLjZyZW07DQogICAgfQ0KfQ0KDQpAZWFjaCAkY29sb3IsICR2YWx1ZSBpbiAkdGhlbWUtY29sb3JzIHsNCiAgICAuYWxlcnQtI3skY29sb3J9IHsNCiAgICAgICAgQGluY2x1ZGUgYWxlcnQtdmFyaWFudCgNCiAgICAgICAgICAgIHRoZW1lLWNvbG9yLWxldmVsKCR0aGVtZS1jb2xvcnMsICRjb2xvciwgJGFsZXJ0LWJnLWxldmVsKSwNCiAgICAgICAgICAgIHRoZW1lLWNvbG9yLWxldmVsKCR0aGVtZS1jb2xvcnMsICRjb2xvciwgJGFsZXJ0LWJvcmRlci1sZXZlbCksDQogICAgICAgICAgICB0aGVtZS1jb2xvci1sZXZlbCgkdGhlbWUtY29sb3JzLCAkY29sb3IsICRhbGVydC1jb2xvci1sZXZlbCkNCiAgICAgICAgKTsNCiAgICB9DQp9DQoNCkBlYWNoICRjb2xvcl9uYW1lLCAkY29sb3JfdmFsdWUgaW4gJHRoZW1lLWNvbG9ycyB7DQogICAgQGluY2x1ZGUgbWFrZS1vdXRsaW5lLWFsZXJ0KCRjb2xvcl9uYW1lLCB0aGVtZS1jb2xvci1sZXZlbCgkdGhlbWUtY29sb3JzLCAkY29sb3JfbmFtZSwgJGFsZXJ0LWNvbG9yLWxldmVsKSk7DQp9DQoNCkBlYWNoICRjb2xvcl9uYW1lLCAkY29sb3JfdmFsdWUgaW4gJHRoZW1lLWNvbG9ycyB7DQogICAgQGluY2x1ZGUgbWFrZS1zb2xpZC1hbGVydCgkY29sb3JfbmFtZSwgJGNvbG9yX3ZhbHVlKTsNCn0NCg=="},{"version":3,"sources":["BsAlert.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsNA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"BsAlert.vue","sourceRoot":"node_modules/vue-mdbootstrap/src/components/BsBasic","sourcesContent":["<template>\r\n  <transition :name=\"transition\">\r\n    <div\r\n      v-if=\"show\"\r\n      :class=\"_classNames\"\r\n      role=\"alert\">\r\n      <div v-if=\"iconName\" class=\"alert-icon\">\r\n        <slot name=\"alertIcon\">\r\n          <bs-icon v-if=\"iconType || isInternal\" v-bind=\"_bsIconAttributes\" />\r\n          <font-awesome-icon v-else v-bind=\"_faIconAttributes\" />\r\n        </slot>\r\n      </div>\r\n      <div :class=\"{'ml-3' : icon || iconType}\" class=\"flex-fill\">\r\n        <slot></slot>\r\n      </div>\r\n      <bs-button\r\n        v-if=\"dismissible\"\r\n        class=\"close ml-auto\"\r\n        color=\"gray\"\r\n        flat\r\n        mode=\"icon\"\r\n        size=\"sm\"\r\n        @click=\"_hide\">\r\n        <bs-icon icon=\"close\" />\r\n      </bs-button>\r\n    </div>\r\n  </transition>\r\n</template>\r\n\r\n<script>\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\r\nimport BsButton from \"../BsButton/BsButton\";\r\nimport BsIcon from \"../BsIcon/BsIcon\";\r\nimport IconMixin from \"./mixins/IconMixin\";\r\nimport Helper from \"../../utils/Helper\";\r\nimport \"../../../scss/_transitions.scss\";\r\n\r\nexport default {\r\n    name: \"BsAlert\",\r\n    components: {BsButton, BsIcon, FontAwesomeIcon},\r\n    mixins: [IconMixin],\r\n    props: {\r\n        /**\r\n         * Alert color\r\n         * @type {string|*}\r\n         */\r\n        color: {\r\n            type: String,\r\n            default: undefined\r\n        },\r\n        /**\r\n         * When set, display the close button to dismiss/hide the component.\r\n         * @type {boolean|*}\r\n         */\r\n        dismissible: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Use predefined icon to create contextual alert.\r\n         * @type {string|*}\r\n         */\r\n        iconType: {\r\n            type: String,\r\n            default: undefined,\r\n            validator: v => ['success', 'info', 'warning', 'danger', 'help'].includes(v)\r\n        },\r\n        /**\r\n         * Use predefined outline icon to create contextual alert.\r\n         * @type {string|*}\r\n         */\r\n        iconOutlined: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        /**\r\n         * Create outlined alert style.\r\n         * @type {boolean|*}\r\n         */\r\n        outlined: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Create alert with solid fill style.\r\n         * @type {boolean|*}\r\n         */\r\n        solidFill: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * The component animation transition to display/hide.\r\n         * @type {string|*}\r\n         */\r\n        transition: {\r\n            type: String,\r\n            default: 'fade'\r\n        },\r\n        /**\r\n         * The value monitored by `v-model` to display or hide the alert component.\r\n         * @type {boolean|*}\r\n         */\r\n        value: {\r\n            type: Boolean,\r\n            default: true\r\n        }\r\n    },\r\n    data: () => ({\r\n        dismiss: false\r\n    }),\r\n    computed: {\r\n        /**\r\n         * Get component's class names.\r\n         *\r\n         * @returns {Object} Component css classes\r\n         * @private\r\n         */\r\n        _classNames() {\r\n            return {\r\n                'alert d-flex': true,\r\n                'align-items-center': true,\r\n                'alert-dismissible': this.dismissible,\r\n                ['md-alert-outline-' + this._colorName]: this.outlined,\r\n                ['alert-' + this._colorName]: this._colorName && !this.outlined && !this.solidFill,\r\n                ['md-alert-solid-' + this._colorName]: this._colorName && this.solidFill && !this.outlined,\r\n            }\r\n        },\r\n        _colorName() {\r\n            if (this.iconType) {\r\n                if (this.iconType === 'help') {\r\n                    return Helper.isEmpty(this.color) ? 'mdb-color' : this.color;\r\n                } else {\r\n                    return Helper.isEmpty(this.color) ? this.iconType : this.color;\r\n                }\r\n            }\r\n\r\n            return Helper.isEmpty(this.color) ? 'primary' : this.color;\r\n        },\r\n        /**\r\n         * Get BsIcon binding attributes.\r\n         *\r\n         * @returns {Object} The icon attributes\r\n         * @private\r\n         */\r\n        _bsIconAttributes() {\r\n            return {\r\n                ...this.iconAttributes,\r\n                size: 32\r\n            }\r\n        },\r\n        /**\r\n         * Get FontAwesomeIcon binding attributes.\r\n         *\r\n         * @returns {Object} The icon attributes\r\n         * @private\r\n         */\r\n        _faIconAttributes() {\r\n            return {\r\n                ...this.iconAttributes,\r\n                fixedWidth: true\r\n            }\r\n        },\r\n        /**\r\n         * Get computed icon name (real icon name).\r\n         *\r\n         * @returns {string} The icon name\r\n         */\r\n        iconName() {\r\n            if (this.iconType) {\r\n                switch (this.iconType) {\r\n                    case 'help':\r\n                        return this.iconOutlined ? 'HelpOutline' : 'Help';\r\n                    case 'danger':\r\n                        return this.iconOutlined ? 'ReportOutline' : 'Report';\r\n                    case 'warning':\r\n                        return this.iconOutlined ? 'WarningOutline' : 'Warning';\r\n                    case 'info':\r\n                        return this.iconOutlined ? 'InfoOutline' : 'Info';\r\n                    default :\r\n                        return this.iconOutlined ? 'CheckCircleOutline' : 'CheckCircle';\r\n                }\r\n            } else if (this.isInternal) {\r\n                return this.icon.substr(3);\r\n            } else {\r\n                return this.icon;\r\n            }\r\n        },\r\n        /**\r\n         * Check if this component is visible or not.\r\n         *\r\n         * @returns {boolean} True if component is visible otherwise False\r\n         */\r\n        show() {\r\n            return !this.dismiss && this.value;\r\n        }\r\n    },\r\n    watch: {\r\n        value(newValue) {\r\n            if (this.dismissible && newValue === true) {\r\n                this.dismiss = false;\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        _hide() {\r\n            this.dismiss = true;\r\n            this.$emit('input', false);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"~compass-sass-mixins/lib/compass/css3\";\r\n@import \"~bootstrap/scss/mixins/alert\";\r\n@import \"~bootstrap/scss/mixins/gradients\";\r\n@import \"../../../scss/colors\";\r\n@import \"../../../scss/variables\";\r\n@import \"../../../scss/functions\";\r\n@import \"../../../scss/mixins\";\r\n\r\n.alert {\r\n    &.alert-dismissible {\r\n        padding-right: 3.3rem;\r\n\r\n        > .close {\r\n            padding: .5rem;\r\n        }\r\n    }\r\n\r\n    > .alert-icon {\r\n        font-size: 1.6rem;\r\n    }\r\n}\r\n\r\n@each $color, $value in $theme-colors {\r\n    .alert-#{$color} {\r\n        @include alert-variant(\r\n            theme-color-level($theme-colors, $color, $alert-bg-level),\r\n            theme-color-level($theme-colors, $color, $alert-border-level),\r\n            theme-color-level($theme-colors, $color, $alert-color-level)\r\n        );\r\n    }\r\n}\r\n\r\n@each $color_name, $color_value in $theme-colors {\r\n    @include make-outline-alert($color_name, theme-color-level($theme-colors, $color_name, $alert-color-level));\r\n}\r\n\r\n@each $color_name, $color_value in $theme-colors {\r\n    @include make-solid-alert($color_name, $color_value);\r\n}\r\n</style>\r\n"]}]}