{"remainingRequest":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsPicker\\BsDatePickerTableNav.vue?vue&type=script&lang=js&","dependencies":[{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsPicker\\BsDatePickerTableNav.vue","mtime":1603614545000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BsDatePickerTableNav.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAifile":"BsDatePickerTableNav.vue","sourceRoot":"node_modules/vue-mdbootstrap/src/components/BsPicker","sourcesContent":["<template>\r\n  <div class=\"md-datepicker-nav\">\r\n    <bs-button v-bind=\"_btnPrevAttrs\" @click=\"btnPreviousClick\">\r\n      <bs-icon icon=\"chevron_left\" size=\"32\" />\r\n    </bs-button>\r\n    <div :class=\"_headerClasses\" class=\"md-datepicker-navtext\">\r\n      <transition :name=\"transitionName\">\r\n        <strong :key=\"value.toISOString()\" @click=\"toggleClick\">{{ formatter(value) }}</strong>\r\n      </transition>\r\n    </div>\r\n    <bs-button v-bind=\"_btnNextAttrs\" @click=\"btnNextClick\">\r\n      <bs-icon icon=\"chevron_right\" size=\"32\" />\r\n    </bs-button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport BsButton from \"../BsButton/BsButton\";\r\nimport BsIcon from \"../BsIcon/BsIcon\";\r\nimport createNativeLocaleFormatter from \"./utils/createNativeLocaleFormatter\";\r\nimport PickerConst from \"./utils/DatePickerConst\";\r\n\r\nexport default {\r\n    name: \"BsDatePickerTableNav\",\r\n    components: {BsButton, BsIcon},\r\n    props: {\r\n        /**\r\n         * Default \"<code>primary</code>\"\r\n         * @type {string|*}\r\n         */\r\n        color: {\r\n            type: String,\r\n            default: 'primary'\r\n        },\r\n        /**\r\n         * Default FALSE\r\n         * @type {boolean|*}\r\n         */\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Default \"en-us\"\r\n         * @type {string|*}\r\n         */\r\n        locale: {\r\n            type: String,\r\n            default: PickerConst.defaultLocale\r\n        },\r\n        /**\r\n         * @type {Date|*}\r\n         */\r\n        value: {\r\n            type: Date,\r\n            required: true\r\n        },\r\n        /**\r\n         * @type {string|*}\r\n         */\r\n        activePicker: {\r\n            type: String,\r\n            default: undefined\r\n        },\r\n        /**\r\n         * @type {string|*}\r\n         */\r\n        minDate: {\r\n            type: String,\r\n            default: undefined\r\n        },\r\n        /**\r\n         * @type {string|*}\r\n         */\r\n        maxDate: {\r\n            type: String,\r\n            default: undefined\r\n        }\r\n    },\r\n    data: () => ({\r\n        reverse: false,\r\n        btnAttrs: {\r\n            color: 'dark',\r\n            mode: 'icon',\r\n            flat: true\r\n        }\r\n    }),\r\n    computed: {\r\n        /**\r\n         * Get Next button binding's properties.\r\n         *\r\n         * @returns {Object} The component's properties\r\n         */\r\n        _btnNextAttrs() {\r\n            return {\r\n                ...this.btnAttrs,\r\n                'disabled': this.checkDisabled(1)\r\n            }\r\n        },\r\n        /**\r\n         * Get Previous button binding's properties.\r\n         *\r\n         * @returns {Object} The component's properties\r\n         */\r\n        _btnPrevAttrs() {\r\n            return {\r\n                ...this.btnAttrs,\r\n                'disabled': this.checkDisabled(-1)\r\n            }\r\n        },\r\n        /**\r\n         * Get computed navigation text class names.\r\n         *\r\n         * @returns {string[]} Css classes\r\n         */\r\n        _headerClasses() {\r\n            return [\r\n                this.disabled ? 'md-disabled' : `text-hover-${this.color}`\r\n            ];\r\n        },\r\n        /**\r\n         * Format the given date value based on locale formatter and returns date string.\r\n         *\r\n         * @returns {Function} <tt>Function(value)</tt> which is used to convert any valid Date\r\n         * to the current locale date string\r\n         */\r\n        formatter() {\r\n            if (this.activePicker === PickerConst.YEAR) {\r\n                return value => {\r\n                    const start = value.getFullYear() - 4;\r\n                    const end = value.getFullYear() + 7;\r\n                    return `${start} - ${end}`;\r\n                }\r\n            } else if (this.activePicker === PickerConst.MONTH) {\r\n                return createNativeLocaleFormatter(this.locale, {year: 'numeric', timeZone: 'UTC'}, {length: 4});\r\n            } else {\r\n                return createNativeLocaleFormatter(this.locale, {\r\n                    month: 'long',\r\n                    year: 'numeric',\r\n                    timeZone: 'UTC'\r\n                }, {length: 7});\r\n            }\r\n        },\r\n        /**\r\n         * Get computed animation transition name.\r\n         *\r\n         * @returns {string} Transition name\r\n         */\r\n        transitionName() {\r\n            return this.reverse === true ? PickerConst.transitionReverse : PickerConst.transition;\r\n        }\r\n    },\r\n    watch: {\r\n        value(newVal, oldVal) {\r\n            this.reverse = newVal < oldVal;\r\n        }\r\n    },\r\n    beforeDestroy() {\r\n        this.btnAttrs = null;\r\n    },\r\n    methods: {\r\n        /**\r\n         * Event handler when button Next is clicked.\r\n         *\r\n         * @event input Triggers input event\r\n         * @returns {void}\r\n         */\r\n        btnNextClick() {\r\n            if (this.disabled) {\r\n                return;\r\n            }\r\n            let _date = new Date(this.value.toISOString());\r\n\r\n            if (this.activePicker === PickerConst.YEAR) {\r\n                _date.setFullYear(this.value.getFullYear() + 12);\r\n                this.$emit('input', _date);\r\n            } else if (this.activePicker === PickerConst.MONTH) {\r\n                _date.setFullYear(this.value.getFullYear() + 1);\r\n                this.$emit('input', _date);\r\n            } else {\r\n                this.$emit('input', this.calculateChange(1));\r\n            }\r\n        },\r\n        /**\r\n         * Event handler when button Previous is clicked.\r\n         *\r\n         * @event input Triggers input event\r\n         * @returns {void}\r\n         */\r\n        btnPreviousClick() {\r\n            if (this.disabled) {\r\n                return;\r\n            }\r\n\r\n            let _date = new Date(this.value.toISOString());\r\n            if (this.activePicker === PickerConst.YEAR) {\r\n                _date.setFullYear(this.value.getFullYear() - 12);\r\n                this.$emit('input', _date);\r\n            } else if (this.activePicker === PickerConst.MONTH) {\r\n                _date.setFullYear(this.value.getFullYear() - 1);\r\n                this.$emit('input', _date);\r\n            } else {\r\n                this.$emit('input', this.calculateChange(-1));\r\n            }\r\n        },\r\n        /**\r\n         * Calculate the month.\r\n         *\r\n         * @param {number} value The number between -1 and +1\r\n         * @returns {Date} Computed date value\r\n         */\r\n        calculateChange(value) {\r\n            const _month = this.value.getMonth() + value;\r\n            let _date = new Date(this.value.toISOString());\r\n\r\n            if (_month < 0) {\r\n                _date.setFullYear(this.value.getFullYear() - 1);\r\n                _date.setMonth(11);\r\n            } else if (_month === 12) {\r\n                _date.setFullYear(this.value.getFullYear() + 1);\r\n                _date.setMonth(0);\r\n            } else {\r\n                _date.setMonth(_month);\r\n            }\r\n\r\n            return _date;\r\n        },\r\n        /**\r\n         * Check if the navigation is enabled or disabled.\r\n         *\r\n         * @param {number} value The number between -1 and +1\r\n         * @returns {boolean} TRUE if navigation is disabled otherwise FALSE\r\n         */\r\n        checkDisabled(value) {\r\n            return this.disabled ||\r\n                (value < 0 && this.minDate && this.calculateChange(value) < new Date(this.minDate)) ||\r\n                (value > 0 && this.maxDate && this.calculateChange(value) > new Date(this.maxDate));\r\n        },\r\n        /**\r\n         * Event handler when navigation text is clicked.\r\n         *\r\n         * @event toggle Triggers toggle event\r\n         * @returns {void}\r\n         */\r\n        toggleClick() {\r\n            if (!this.disabled) {\r\n                this.$emit('toggle');\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}