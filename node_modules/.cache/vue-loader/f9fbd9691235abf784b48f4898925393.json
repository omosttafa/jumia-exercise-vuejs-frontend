{"remainingRequest":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsSearchField.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsSearchField.vue","mtime":1617204197000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KQGltcG9ydCAifmNvbXBhc3Mtc2Fzcy1taXhpbnMvbGliL2NvbXBhc3MvY3NzMyI7DQpAaW1wb3J0ICIuLi8uLi8uLi9zY3NzL2NvbG9ycyI7DQpAaW1wb3J0ICIuLi8uLi8uLi9zY3NzL3ZhcmlhYmxlcyI7DQoNCi4jeyRwcmVmaXh9LWZpZWxkLXNlYXJjaGJveCB7DQogICAgcG9zaXRpb246IHJlbGF0aXZlOw0KICAgIHdpZHRoOiAxMDAlOw0KDQogICAgLiN7JHByZWZpeH0tc2VhcmNoYm94LWlubmVyIHsNCiAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbihib3JkZXItY29sb3IgJHRyYW5zaXRpb24tYmFzaWMsIGJveC1zaGFkb3cgJHRyYW5zaXRpb24tYmFzaWMpOw0KICAgICAgICBAaW5jbHVkZSBmbGV4Ym94KChkaXNwbGF5OiBmbGV4LCBhbGlnbi1pdGVtczogY2VudGVyKSk7DQogICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJGJsYWNrLCAuMDE1KTsNCiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgkYmxhY2ssIC4wNSk7DQogICAgICAgIGJvcmRlci1yYWRpdXM6IC4zNnJlbTsNCiAgICAgICAgZm9udC1zaXplOiAxcmVtOw0KICAgICAgICBmb250LXdlaWdodDogNDAwOw0KICAgICAgICBsaW5lLWhlaWdodDogMS41Ow0KICAgICAgICBwYWRkaW5nOiA0cHggNnB4Ow0KICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICAgICAgIHdpZHRoOiAxMDAlOw0KDQogICAgICAgICYuI3skcHJlZml4fS1mb2N1c2VkIHsNCiAgICAgICAgICAgIEBpbmNsdWRlIGJveC1zaGFkb3coMCAwIDAuMXJlbSAwLjJyZW0gcmdiYSgwLCAxMjMsIDI1NSwgLjI1KSk7DQogICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7DQogICAgICAgICAgICBib3JkZXItY29sb3I6ICRpbmZvLWNvbG9yLWRhcms7DQogICAgICAgIH0NCg0KICAgICAgICBsYWJlbCB7DQogICAgICAgICAgICBkaXNwbGF5OiBibG9jazsNCiAgICAgICAgICAgIG1hcmdpbjogMCAwIDAgNHB4Ow0KICAgICAgICAgICAgcGFkZGluZzogMDsNCiAgICAgICAgICAgIHdpZHRoOiAxMDAlOw0KICAgICAgICB9DQoNCiAgICAgICAgaW5wdXQgew0KICAgICAgICAgICAgYm9yZGVyOiAwIHRyYW5zcGFyZW50Ow0KICAgICAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7DQogICAgICAgICAgICBjb2xvcjogJGdyYXktNjAwOw0KICAgICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICAgICBvdXRsaW5lOiBub25lOw0KICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAycHg7DQoNCiAgICAgICAgICAgICY6Zm9jdXMgew0KICAgICAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICY6OnBsYWNlaG9sZGVyIHsNCiAgICAgICAgICAgICAgICBjb2xvcjogJGdyYXktNTAwOw0KICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtbGlnaHQ7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICY6Oi1tb3otcGxhY2Vob2xkZXIgew0KICAgICAgICAgICAgICAgIGNvbG9yOiAkZ3JheS01MDA7DQogICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1saWdodDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgJjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7DQogICAgICAgICAgICAgICAgY29sb3I6ICRncmF5LTUwMDsNCiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LWxpZ2h0Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAmOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7DQogICAgICAgICAgICAgICAgY29sb3I6ICRncmF5LTUwMDsNCiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LWxpZ2h0Ow0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgJi4jeyRwcmVmaXh9LXNlYXJjaGJveC1kYXJrIHsNCiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJGJsYWNrLCAuMjUpOw0KICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgkYmxhY2ssIC4wODUpOw0KDQogICAgICAgICAgICBpbnB1dCB7DQogICAgICAgICAgICAgICAgY29sb3I6ICRncmF5LTUwMDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgJi4jeyRwcmVmaXh9LWZvY3VzZWQgew0KICAgICAgICAgICAgICAgIEBpbmNsdWRlIGJveC1zaGFkb3coMCAwIDAuMXJlbSAwLjIzcmVtIHJnYmEoMTAwLCAxMDAsIDEwMCwgMC4zMikpOw0KICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJGJsYWNrLCAwLjM1KTsNCiAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IHJnYmEoJGJsYWNrLCAwLjI1KTsNCg0KICAgICAgICAgICAgICAgIGlucHV0IHsNCiAgICAgICAgICAgICAgICAgICAgJjpmb2N1cyB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGdyYXktMjAwOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuYnRuLWZsYXQtc2Vjb25kYXJ5OmhvdmVyLA0KICAgICAgICAgICAgLmJ0bi1mbGF0LXNlY29uZGFyeTpmb2N1cyB7DQogICAgICAgICAgICAgICAgY29sb3I6IGxpZ2h0ZW4oJGdyYXktNjAwLCAyMCUpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KfQ0K"},{"version":3,"sources":["BsSearchField.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0WA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BsSearchField.vue","sourceRoot":"node_modules/vue-mdbootstrap/src/components/BsField","sourcesContent":["<template>\r\n  <div \r\n    v-click-outside=\"_clickOutSide\"\r\n    class=\"md-field-searchbox\">\r\n    <div\r\n      ref=\"activator\"\r\n      :class=\"_classNames\"\r\n      class=\"md-searchbox-inner\">\r\n      <bs-button\r\n        color=\"secondary\"\r\n        icon=\"search\"\r\n        mode=\"icon\"\r\n        size=\"sm\"\r\n        flat\r\n        @click=\"_prepareSearch\" />\r\n      <label>\r\n        <input\r\n          ref=\"input\"\r\n          v-bind=\"_attributes\"\r\n          @input=\"setValue($event.target.value)\"\r\n          @focus=\"_onFocus\"\r\n          @blur=\"_onBlur\"\r\n          @keyup.enter=\"_submit\" />\r\n      </label>\r\n      <bs-button\r\n        v-if=\"localValue !== null && localValue !== ''\"\r\n        color=\"secondary\"\r\n        mode=\"icon\"\r\n        size=\"sm\"\r\n        flat\r\n        @click=\"_clearValue\">\r\n        <bs-icon icon=\"clear\" />\r\n      </bs-button>\r\n      <bs-button\r\n        v-if=\"searchOptions\"\r\n        color=\"secondary\"\r\n        mode=\"icon\"\r\n        size=\"sm\"\r\n        flat\r\n        @click=\"_popoverOpen\">\r\n        <bs-icon icon=\"ArrowDropDown\" size=\"24\" />\r\n      </bs-button>\r\n    </div>\r\n    <bs-popover\r\n      v-if=\"searchOptions\"\r\n      v-bind=\"_popoverAttributes\"\r\n      @close=\"_popoverClose\">\r\n      <slot name=\"popover\"></slot>\r\n    </bs-popover>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport BsIcon from \"../BsIcon/BsIcon\";\r\nimport BsButton from \"../BsButton/BsButton\";\r\nimport BsPopover from \"../BsPopover/BsPopover\";\r\nimport Common from \"../../mixins/Common\";\r\nimport Helper from \"../../utils/Helper\";\r\nimport clickOutside from \"../../directives/ClickOutside\";\r\n\r\nexport default {\r\n    name: \"BsSearchField\",\r\n    components: {BsButton, BsIcon, BsPopover},\r\n    directives: {clickOutside},\r\n    mixins: [Common],\r\n    props: {\r\n        /**\r\n         * Autofocus field when document is loaded.\r\n         * @type {boolean|*}\r\n         */\r\n        autofocus: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Adapts search field to the container background color.\r\n         * @type {boolean|*}\r\n         */\r\n        darkMode: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Enable/disable the component and the `<input>` element.\r\n         * @type {boolean|*}\r\n         */\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Popover container state: show or hide.\r\n         * @type {boolean|*}\r\n         */\r\n        open: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Put the component in readonly state and sets the `<input>` element readonly attribute.\r\n         * @type {boolean|*}\r\n         */\r\n        readonly: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Enable custom search. If true then Popover container will be enabled.\r\n         * @type {boolean|*}\r\n         */\r\n        searchOptions: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Sets `<input>` element ID attribute. This property value is auto generates.\r\n         * @type {string|*}\r\n         */\r\n        id: {\r\n            type: String,\r\n            default() {\r\n                return 'bs-' + Helper.uuid(true);\r\n            }\r\n        },\r\n        /**\r\n         * Custom CSS class for the Popover container.\r\n         * @type {string|*}\r\n         */\r\n        popoverCls: {\r\n            type: String,\r\n            default: 'bg-white md-shadow'\r\n        },\r\n        /**\r\n         * Sets minimum width for the Popover container.\r\n         * @type {string|number|*}\r\n         */\r\n        popoverMinWidth: {\r\n            type: [Number, String],\r\n            default: 480,\r\n            validator: value => parseInt(value, 10) > 0\r\n        },\r\n        /**\r\n         * Sets the Popover display placement.\r\n         * @type {string|*}\r\n         */\r\n        popoverPosition: {\r\n            type: String,\r\n            default: 'bottom'\r\n        },\r\n        /**\r\n         * Custom CSS class for component inner element.\r\n         * @type {string|*}\r\n         */\r\n        innerCls: {\r\n            type: String,\r\n            default: undefined\r\n        },\r\n        /**\r\n         * Minimum characters to check before triggers the search event.\r\n         * @type {string|number|*}\r\n         */\r\n        minlength: {\r\n            type: [String, Number],\r\n            default: 4,\r\n            validator: value => parseInt(value, 10) > 0\r\n        },\r\n        /**\r\n         * Sets `<input>` element name attribute.\r\n         * @type {string|*}\r\n         */\r\n        name: {\r\n            type: String,\r\n            default: undefined\r\n        },\r\n        /**\r\n         * Sets the field placeholder.\r\n         * @type {string|*}\r\n         */\r\n        placeholder: {\r\n            type: String,\r\n            default: 'Search...'\r\n        },\r\n        /**\r\n         * Sets animation transition when displaying the Popover container.\r\n         * @type {string|*}\r\n         */\r\n        transition: {\r\n            type: String,\r\n            default: BsPopover.props.transition.default\r\n        },\r\n        /**\r\n         * The value monitored by v-model to maintain field value.\r\n         * @type {string|*}\r\n         */\r\n        value: {\r\n            type: String,\r\n            default: undefined\r\n        },\r\n    },\r\n    data: (vm) => ({\r\n        active: vm.open,\r\n        localValue: vm.value || null,\r\n        popoverWidth: vm.popoverMinWidth || 0,\r\n        isFocused: false,\r\n        trigger: null,\r\n    }),\r\n    computed: {\r\n        _attributes() {\r\n            return {\r\n                'type': 'text',\r\n                'role': 'searchbox',\r\n                'spellcheck': 'false',\r\n                'autocomplete': 'false',\r\n                'id': this.id,\r\n                'name': this.name,\r\n                'value': this.localValue,\r\n                'disabled': this.disabled,\r\n                'readonly': this.readonly,\r\n                'autofocus': this.autofocus,\r\n                'placeholder': this.placeholder,\r\n                'minlength': this.minlength,\r\n                'aria-disabled': this.disabled,\r\n                'aria-readonly': this.readonly,\r\n                'aria-placeholder': this.placeholder\r\n            }\r\n        },\r\n        _classNames() {\r\n            return {\r\n                'md-disabled': this.disabled,\r\n                'md-readonly': this.readonly,\r\n                'md-focused': this.isFocused,\r\n                'md-searchbox-dark': this.darkMode,\r\n                [this.innerCls]: this.innerCls\r\n            };\r\n        },\r\n        /**\r\n         * Get Popover computed binding attributes.\r\n         *\r\n         * @returns {Object} Attributes to bind\r\n         */\r\n        _popoverAttributes() {\r\n            return {\r\n                space: 2,\r\n                open: this.active,\r\n                trigger: this.trigger,\r\n                class: this.popoverCls,\r\n                style: this._popoverStyles,\r\n                transition: this.transition,\r\n                placement: this.popoverPosition,\r\n            }\r\n        },\r\n        /**\r\n         * Get popover's computed width.\r\n         *\r\n         * @returns {number} Popover minimum width\r\n         */\r\n        _popoverMinWidth() {\r\n            if (this.trigger && (this.popoverWidth < this.trigger.offsetWidth)) {\r\n                return this.trigger.offsetWidth;\r\n            }\r\n\r\n            return this.popoverWidth;\r\n        },\r\n        /**\r\n         * Get computed popover's styles.\r\n         *\r\n         * @returns {Object} Popover styles\r\n         */\r\n        _popoverStyles() {\r\n            return {\r\n                'min-width': this.trigger ? Helper.sizeUnit(this._popoverMinWidth) : ''\r\n            }\r\n        },\r\n    },\r\n    watch: {\r\n        open(value) {\r\n            if (value && parseInt(this.popoverMinWidth, 10) < this.trigger.offsetWidth) {\r\n                this.popoverWidth = this.trigger.offsetWidth;\r\n            } else {\r\n                this.popoverWidth = this.popoverMinWidth;\r\n            }\r\n            this.active = value;\r\n        },\r\n        value(newValue) {\r\n            this.localValue = newValue;\r\n        },\r\n    },\r\n    mounted() {\r\n        this.trigger = this.$refs.activator;\r\n    },\r\n    methods: {\r\n        _clearValue() {\r\n            this.setValue(null);\r\n        },\r\n        _clickOutSide(e) {\r\n            let result = false;\r\n\r\n            document.querySelectorAll('.md-popover').forEach((el) => {\r\n                if (el.contains(e.target)) {\r\n                    result = true;\r\n                }\r\n            });\r\n\r\n            if (!result) {\r\n                this.fireEvent('open', false);\r\n            }\r\n        },\r\n        _doSearch() {\r\n            const term = this.localValue.trim();\r\n\r\n            if (term.length >= this.minlength) {\r\n                this.fireEvent('search', term);\r\n            }\r\n        },\r\n        _onBlur(event) {\r\n            this.isFocused = false;\r\n            this.fireEvent('blur', event);\r\n        },\r\n        _onFocus(event) {\r\n            if (!this.$refs.input) {\r\n                return;\r\n            }\r\n            if (document.activeElement !== this.$refs.input) {\r\n                this.$refs.input.focus();\r\n            }\r\n            this.isFocused = true;\r\n            this.fireEvent('focus', event);\r\n        },\r\n        _popoverClose(reason) {\r\n            if (['ESC Pressed', 'Overlay clicked'].includes(reason)) {\r\n                this.fireEvent('open', false);\r\n            }\r\n        },\r\n        _popoverOpen() {\r\n            this.fireEvent('open', !this.active);\r\n        },\r\n        _prepareSearch() {\r\n            if (!Helper.isEmpty(this.localValue)) {\r\n                this._doSearch();\r\n            } else {\r\n                this.fireEvent('input', this.localValue);\r\n            }\r\n        },\r\n        _submit() {\r\n            if (!Helper.isEmpty(this.localValue)) {\r\n                this._doSearch();\r\n            } else {\r\n                this.setValue(null);\r\n            }\r\n        },\r\n        getValue() {\r\n            return this.localValue;\r\n        },\r\n        setValue(value) {\r\n            this.localValue = value;\r\n            this.fireEvent('input', value);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"~compass-sass-mixins/lib/compass/css3\";\r\n@import \"../../../scss/colors\";\r\n@import \"../../../scss/variables\";\r\n\r\n.#{$prefix}-field-searchbox {\r\n    position: relative;\r\n    width: 100%;\r\n\r\n    .#{$prefix}-searchbox-inner {\r\n        @include transition(border-color $transition-basic, box-shadow $transition-basic);\r\n        @include flexbox((display: flex, align-items: center));\r\n        background-color: rgba($black, .015);\r\n        border: 1px solid rgba($black, .05);\r\n        border-radius: .36rem;\r\n        font-size: 1rem;\r\n        font-weight: 400;\r\n        line-height: 1.5;\r\n        padding: 4px 6px;\r\n        position: relative;\r\n        width: 100%;\r\n\r\n        &.#{$prefix}-focused {\r\n            @include box-shadow(0 0 0.1rem 0.2rem rgba(0, 123, 255, .25));\r\n            background-color: $white;\r\n            border-color: $info-color-dark;\r\n        }\r\n\r\n        label {\r\n            display: block;\r\n            margin: 0 0 0 4px;\r\n            padding: 0;\r\n            width: 100%;\r\n        }\r\n\r\n        input {\r\n            border: 0 transparent;\r\n            background: transparent;\r\n            color: $gray-600;\r\n            width: 100%;\r\n            outline: none;\r\n            padding-left: 2px;\r\n\r\n            &:focus {\r\n                outline: none;\r\n            }\r\n\r\n            &::placeholder {\r\n                color: $gray-500;\r\n                font-weight: $font-weight-light;\r\n            }\r\n\r\n            &::-moz-placeholder {\r\n                color: $gray-500;\r\n                font-weight: $font-weight-light;\r\n            }\r\n\r\n            &::-webkit-input-placeholder {\r\n                color: $gray-500;\r\n                font-weight: $font-weight-light;\r\n            }\r\n\r\n            &:-ms-input-placeholder {\r\n                color: $gray-500;\r\n                font-weight: $font-weight-light;\r\n            }\r\n        }\r\n\r\n        &.#{$prefix}-searchbox-dark {\r\n            background-color: rgba($black, .25);\r\n            border: 1px solid rgba($black, .085);\r\n\r\n            input {\r\n                color: $gray-500;\r\n            }\r\n\r\n            &.#{$prefix}-focused {\r\n                @include box-shadow(0 0 0.1rem 0.23rem rgba(100, 100, 100, 0.32));\r\n                background-color: rgba($black, 0.35);\r\n                border-color: rgba($black, 0.25);\r\n\r\n                input {\r\n                    &:focus {\r\n                        color: $gray-200;\r\n                    }\r\n                }\r\n            }\r\n\r\n            .btn-flat-secondary:hover,\r\n            .btn-flat-secondary:focus {\r\n                color: lighten($gray-600, 20%);\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>\r\n"]}]}