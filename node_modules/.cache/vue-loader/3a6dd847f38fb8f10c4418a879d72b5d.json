{"remainingRequest":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsGrid\\BsGridFooter.vue?vue&type=script&lang=js&","dependencies":[{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsGrid\\BsGridFooter.vue","mtime":1609323728000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQnNHcmlkRm9vdGVyQ2VsbCBmcm9tICIuL0JzR3JpZEZvb3RlckNlbGwiOw0KaW1wb3J0IFNjcmVlblNpemUgZnJvbSAiLi4vLi4vbWl4aW5zL1NjcmVlblNpemUiOw0KaW1wb3J0IFV0aWwgZnJvbSAiLi4vLi4vdXRpbHMvSGVscGVyIjsNCmltcG9ydCB7IGFkZFJlc2l6ZUxpc3RlbmVyLCByZW1vdmVSZXNpemVMaXN0ZW5lciB9IGZyb20gIi4uLy4uL3V0aWxzL1Jlc2l6ZUxpc3RlbmVyIjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICAgIG5hbWU6ICJCc0dyaWRGb290ZXIiLA0KICAgIGNvbXBvbmVudHM6IHtCc0dyaWRGb290ZXJDZWxsfSwNCiAgICBtaXhpbnM6IFtTY3JlZW5TaXplXSwNCiAgICBpbmplY3Q6IFsnQnNHcmlkJ10sDQogICAgcHJvcHM6IHsNCiAgICAgICAgY29sdW1uczogew0KICAgICAgICAgICAgdHlwZTogQXJyYXksDQogICAgICAgICAgICBkZWZhdWx0OiB1bmRlZmluZWQNCiAgICAgICAgfQ0KICAgIH0sDQogICAgZGF0YTogKCkgPT4gKHsNCiAgICAgICAgaXNTbWFsbFNjcmVlbjogZmFsc2UNCiAgICB9KSwNCiAgICBjb21wdXRlZDogew0KICAgICAgICAvKioNCiAgICAgICAgICogQHByb3BlcnR5IHtJQnNHcmlkfSBCc0dyaWQNCiAgICAgICAgICovDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIEdldCBjaGVja2JveCBjb2x1bW4gd2lkdGguDQogICAgICAgICAqDQogICAgICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IENoZWNrYm94IHdpZHRoDQogICAgICAgICAqIEBwcml2YXRlDQogICAgICAgICAqLw0KICAgICAgICBfY2hlY2tib3hXaWR0aCgpIHsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLkJzR3JpZC5jaGVja2JveFdpZHRoOw0KICAgICAgICB9LA0KICAgICAgICAvKioNCiAgICAgICAgICogR2V0cyB0YWJsZSBzdHlsZXMgYXR0cmlidXRlcy4NCiAgICAgICAgICoNCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0gQ3NzIHN0eWxlcyB0byBhcHBseSBpbiBUQUJMRSB0YWcNCiAgICAgICAgICogQHByaXZhdGUNCiAgICAgICAgICovDQogICAgICAgIF90YWJsZVN0eWxlcygpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgd2lkdGg6IFV0aWwuc2l6ZVVuaXQodGhpcy5Cc0dyaWQudGFibGVXaWR0aCkNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgLyoqDQogICAgICAgICAqIEZsaXAgZ3JpZCBmb290ZXIgb24gU21hbGxTY3JlZW4gZGV2aWNlPw0KICAgICAgICAgKg0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVFJVRSBpZiBncmlkIGZvb3RlciBtdXN0IGJlIGZsaXBwZWQgb24gc21hbGwtc2NyZWVuIGRldmljZSBvdGhlcndpc2UgRkFMU0UNCiAgICAgICAgICovDQogICAgICAgIGZsaXBPblNtYWxsU2NyZWVuKCkgew0KICAgICAgICAgICAgcmV0dXJuIHRoaXMuQnNHcmlkLmZsaXBPblNtYWxsU2NyZWVuOw0KICAgICAgICB9DQogICAgfSwNCiAgICBtb3VudGVkKCkgew0KICAgICAgICBhZGRSZXNpemVMaXN0ZW5lcih0aGlzLiRlbCwgdGhpcy5fdXBkYXRlV2lkdGgpOw0KICAgIH0sDQogICAgYmVmb3JlRGVzdHJveSgpIHsNCiAgICAgICAgcmVtb3ZlUmVzaXplTGlzdGVuZXIodGhpcy4kZWwsIHRoaXMuX3VwZGF0ZVdpZHRoKTsNCiAgICB9LA0KICAgIG1ldGhvZHM6IHsNCiAgICAgICAgLyoqDQogICAgICAgICAqIEdldCBjb21wdXRlZCBncmlkY29sdW1uIGZvb3RlciBzdHlsZXMuDQogICAgICAgICAqDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBjb2wgIENvbHVtbiBvYmplY3QNCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0gQ3NzIHN0eWxlIG9iamVjdA0KICAgICAgICAgKiBAcHJpdmF0ZQ0KICAgICAgICAgKi8NCiAgICAgICAgX2NvbEZvb3RlclN0eWxlcyhjb2wpIHsNCiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt3aWR0aDogVXRpbC5zaXplVW5pdChjb2wud2lkdGgpfSwgY29sLmhlYWRlclN0eWxlIHx8IHt9KTsNCiAgICAgICAgfSwNCiAgICAgICAgLyoqDQogICAgICAgICAqIERldGVjdCBzY3JlZW4gc2l6ZSBhbmQgcmVjYWxjdWxhdGUgZm9vdGVyIHdpZHRoLg0KICAgICAgICAgKg0KICAgICAgICAgKiBAcmV0dXJucyB7dm9pZH0NCiAgICAgICAgICogQHByaXZhdGUNCiAgICAgICAgICovDQogICAgICAgIF91cGRhdGVXaWR0aCgpIHsNCiAgICAgICAgICAgIHRoaXMuaXNTbWFsbFNjcmVlbiA9IHRoaXMuc2NyZWVuTWF4U20ubWF0Y2hlczsNCiAgICAgICAgfSwNCiAgICB9DQp9DQo="},{"version":3,"sources":["BsGridFooter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BsGridFooter.vue","sourceRoot":"node_modules/vue-mdbootstrap/src/components/BsGrid","sourcesContent":["<template>\r\n  <table :style=\"_tableStyles\" role=\"grid\">\r\n    <colgroup v-if=\"!isSmallScreen || !flipOnSmallScreen\">\r\n      <col v-if=\"BsGrid.enableRowSelect()\" :style=\"{width: _checkboxWidth + 'px'}\" />\r\n      <col\r\n        v-for=\"(column, idx) in columns\"\r\n        :key=\"'col-' + BsGrid.uuid() + idx\"\r\n        :style=\"_colFooterStyles(column)\" />\r\n    </colgroup>\r\n    <tfoot role=\"rowgroup\">\r\n      <tr role=\"row\">\r\n        <th v-if=\"BsGrid.enableRowSelect()\" role=\"gridcell\"></th>\r\n        <slot>\r\n          <bs-grid-footer-cell\r\n            v-for=\"(col, idx) in columns\"\r\n            :key=\"col.field + '-' + idx\"\r\n            :column=\"col\"\r\n            :index=\"idx\" />\r\n        </slot>\r\n      </tr>\r\n    </tfoot>\r\n  </table>\r\n</template>\r\n\r\n<script>\r\nimport BsGridFooterCell from \"./BsGridFooterCell\";\r\nimport ScreenSize from \"../../mixins/ScreenSize\";\r\nimport Util from \"../../utils/Helper\";\r\nimport { addResizeListener, removeResizeListener } from \"../../utils/ResizeListener\";\r\n\r\nexport default {\r\n    name: \"BsGridFooter\",\r\n    components: {BsGridFooterCell},\r\n    mixins: [ScreenSize],\r\n    inject: ['BsGrid'],\r\n    props: {\r\n        columns: {\r\n            type: Array,\r\n            default: undefined\r\n        }\r\n    },\r\n    data: () => ({\r\n        isSmallScreen: false\r\n    }),\r\n    computed: {\r\n        /**\r\n         * @property {IBsGrid} BsGrid\r\n         */\r\n\r\n        /**\r\n         * Get checkbox column width.\r\n         *\r\n         * @returns {number} Checkbox width\r\n         * @private\r\n         */\r\n        _checkboxWidth() {\r\n            return this.BsGrid.checkboxWidth;\r\n        },\r\n        /**\r\n         * Gets table styles attributes.\r\n         *\r\n         * @returns {Object} Css styles to apply in TABLE tag\r\n         * @private\r\n         */\r\n        _tableStyles() {\r\n            return {\r\n                width: Util.sizeUnit(this.BsGrid.tableWidth)\r\n            }\r\n        },\r\n        /**\r\n         * Flip grid footer on SmallScreen device?\r\n         *\r\n         * @returns {boolean} TRUE if grid footer must be flipped on small-screen device otherwise FALSE\r\n         */\r\n        flipOnSmallScreen() {\r\n            return this.BsGrid.flipOnSmallScreen;\r\n        }\r\n    },\r\n    mounted() {\r\n        addResizeListener(this.$el, this._updateWidth);\r\n    },\r\n    beforeDestroy() {\r\n        removeResizeListener(this.$el, this._updateWidth);\r\n    },\r\n    methods: {\r\n        /**\r\n         * Get computed gridcolumn footer styles.\r\n         *\r\n         * @param {Object} col  Column object\r\n         * @returns {Object} Css style object\r\n         * @private\r\n         */\r\n        _colFooterStyles(col) {\r\n            return Object.assign({width: Util.sizeUnit(col.width)}, col.headerStyle || {});\r\n        },\r\n        /**\r\n         * Detect screen size and recalculate footer width.\r\n         *\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _updateWidth() {\r\n            this.isSmallScreen = this.screenMaxSm.matches;\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}