{"remainingRequest":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsGrid\\BsGrid.vue?vue&type=script&lang=js&","dependencies":[{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsGrid\\BsGrid.vue","mtime":1611483390000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BsGrid.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"BsGrid.vue","sourceRoot":"node_modules/vue-mdbootstrap/src/components/BsGrid","sourcesContent":["<template>\r\n  <div\r\n    :class=\"_classNames\"\r\n    :style=\"_gridStyles\"\r\n    class=\"md-grid\">\r\n    <slot name=\"toolbar\"></slot>\r\n    <div :class=\"{'d-flex': isSmallScreen && flipOnSmallScreen}\">\r\n      <div class=\"md-grid-header\">\r\n        <div ref=\"theader\" class=\"md-grid-header-wrap\">\r\n          <table :style=\"_tableStyles\" role=\"grid\">\r\n            <colgroup v-if=\"!isSmallScreen || !flipOnSmallScreen\">\r\n              <col v-if=\"isSelectable\" :style=\"{width: checkboxWidth + 'px'}\" />\r\n              <template v-for=\"(column, idx) in columnIterator\">\r\n                <col\r\n                  v-if=\"column.cellData\"\r\n                  :key=\"'col-' + _uuid() + idx\"\r\n                  :style=\"_colHeaderStyles(column)\" />\r\n              </template>\r\n            </colgroup>\r\n            <thead role=\"rowgroup\">\r\n              <slot v-bind=\"{ items: dataItems, selectionMode: selectionMode }\" name=\"columnheader\"></slot>\r\n              <tr v-if=\"!$scopedSlots['columnheader']\" role=\"row\">\r\n                <bs-grid-column-selection\r\n                  v-if=\"isSelectable\"\r\n                  :data-items=\"dataItems\"\r\n                  :color=\"selectionMode.checkboxColor\" />\r\n                <slot></slot>\r\n              </tr>\r\n              <bs-grid-column-filters\r\n                v-if=\"filterable && !(flipOnSmallScreen && isSmallScreen)\"\r\n                :columns=\"columnIterator\" />\r\n            </thead>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <bs-progress v-if=\"isLoading && loading.type === 'bar'\" v-bind=\"_progressLoadingAttrs\" />\r\n      <div\r\n        ref=\"tcontent\"\r\n        class=\"md-grid-content\"\r\n        @scroll=\"_handleScroll\">\r\n        <table :style=\"_tableStyles\" role=\"grid\">\r\n          <colgroup v-if=\"!isSmallScreen || !flipOnSmallScreen\">\r\n            <col v-if=\"isSelectable\" :style=\"{width: checkboxWidth + 'px'}\" />\r\n            <template v-for=\"(column, idx) in columnIterator\">\r\n              <col\r\n                v-if=\"column.cellData\"\r\n                :key=\"'col-' + _uuid() + idx\"\r\n                :style=\"_colDataStyles(column)\" />\r\n            </template>\r\n          </colgroup>\r\n          <tbody role=\"rowgroup\">\r\n            <bs-grid-row\r\n              v-for=\"(item, index) in dataItems\"\r\n              :key=\"'row-' + index\"\r\n              :index=\"index\"\r\n              :item=\"item\"\r\n              :selection-mode=\"selectionMode\">\r\n              <bs-grid-cell-selection\r\n                v-if=\"isSelectable\"\r\n                :item=\"item\"\r\n                :value=\"isRowSelected(item)\"\r\n                :selection-mode=\"selectionMode\"\r\n                @input=\"selected => selected ? selectRow(item) : deselectRow(item)\" />\r\n              <slot v-bind=\"{ columns: columnIterator, item: item, index: index }\" name=\"datarow\">\r\n                <template v-for=\"column in columnIterator\">\r\n                  <component\r\n                    v-if=\"column.field || column.rowNumbering\"\r\n                    :is=\"column.rowNumbering ? 'bs-grid-cell-numbering' : 'bs-grid-cell'\"\r\n                    :key=\"column.field + '-' + _uuid()\"\r\n                    :column=\"column\"\r\n                    :index=\"index\"\r\n                    :item=\"item\" />\r\n                </template>\r\n              </slot>\r\n            </bs-grid-row>\r\n          </tbody>\r\n        </table>\r\n        <transition v-if=\"_showEmptyMessage\" name=\"fade\">\r\n          <div class=\"md-grid-alert my-3 mx-3 mx-md-auto\">\r\n            <bs-alert color=\"warning\" icon=\"exclamation-triangle\">\r\n              <slot name=\"emptyMessage\">\r\n                Sorry! No data to display here.\r\n              </slot>\r\n            </bs-alert>\r\n          </div>\r\n        </transition>\r\n      </div>\r\n      <div v-if=\"showFooter\" class=\"md-grid-footer\">\r\n        <div ref=\"tfooter\" class=\"md-grid-footer-wrap\">\r\n          <bs-grid-footer :columns=\"columnIterator\">\r\n            <slot\r\n              slot=\"default\"\r\n              v-bind=\"{ columns: columnIterator }\"\r\n              name=\"gridfooter\"></slot>\r\n          </bs-grid-footer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"isLoading && loading.type === 'spinner'\" class=\"md-grid-progress-spinner\">\r\n      <bs-progress v-bind=\"_progressLoadingAttrs\" class=\"align-self-center\" />\r\n    </div>\r\n    <div\r\n      v-if=\"pageable\"\r\n      ref=\"footer\"\r\n      class=\"md-pagination\">\r\n      <bs-pagination\r\n        v-bind=\"_paginationAttrs\"\r\n        @pagesize=\"setPageSize\"\r\n        @reload=\"reload\"\r\n        @gotopage=\"gotoPage\"\r\n        @prevpage=\"previousPage\"\r\n        @nextpage=\"nextPage\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/**\r\n * BsGrid interface.\r\n *\r\n * @typedef {Object} IBsGrid\r\n * @property {Object[]} columns         The collection of columns\r\n * @property {Object[]} selectedItems   Collection of selected rows\r\n * @property {number} page              Current page or active page\r\n * @property {number} pageSize          Number of rows in a page\r\n * @property {number} totalCount        Total number of items in the Store's dataset\r\n * @property {boolean} enableSort       Enable sort (Readonly)\r\n * @property {BsStore|BsArrayStore} dataSource  Grid data source\r\n * @property {number} checkboxWidth       Checkbox width\r\n * @property {boolean} flipOnSmallScreen  Flip Grid on small screen\r\n * @property {ISorter} sort               Sorter property\r\n * @property {number} tableWidth          Table width (Readonly)\r\n * @property {function(field: string, direction: string)} doSort   Sort dataset based on the given field name.\r\n * @property {function(filters: IFilter[], logic: string=null)} filter  Filter dataset based on the given filter.\r\n * @property {function(eventName: string, ...[*])} fireEvent  Triggers event.\r\n * @property {function(standard: boolean)} uuid  Create UUID, if params is `TRUE` then standard UUID v4 will be created.\r\n */\r\n\r\nimport BsGridRow from './BsGridRow';\r\nimport BsGridCell from './BsGridCell';\r\nimport BsGridCellNumbering from \"./BsGridCellNumbering\";\r\nimport BsGridCellSelection from './BsGridCellSelection';\r\nimport BsGridColumnFilters from \"./BsGridColumnFilters\";\r\nimport BsGridColumnSelection from './BsGridColumnSelection';\r\nimport BsGridFooter from \"./BsGridFooter\";\r\nimport BsPagination from '../BsPagination/BsPagination';\r\nimport BsProgress from '../BsAnimation/BsProgress';\r\nimport BsAlert from '../BsBasic/BsAlert';\r\nimport BsStore from '../../model/BsStore';\r\nimport BsArrayStore from \"../../model/BsArrayStore\";\r\nimport Common from \"../../mixins/Common\";\r\nimport ScreenSize from '../../mixins/ScreenSize';\r\nimport Grid from \"./mixins/Grid\";\r\nimport Helper from '../../utils/Helper';\r\nimport sum from 'lodash/sum';\r\nimport { addResizeListener, removeResizeListener } from '../../utils/ResizeListener';\r\n\r\nexport default {\r\n    name: \"BsGrid\",\r\n    components: {\r\n        BsGridCell, BsGridCellSelection, BsGridCellNumbering, BsGridColumnFilters,\r\n        BsGridColumnSelection, BsGridRow, BsGridFooter, BsPagination, BsProgress, BsAlert\r\n    },\r\n    mixins: [Common, Grid, ScreenSize],\r\n    props: {\r\n        /**\r\n         * Grid data sources.\r\n         * @type {BsStore|BsArrayStore|*}\r\n         */\r\n        dataSource: {\r\n            type: [BsStore, BsArrayStore],\r\n            default: undefined\r\n        },\r\n        /**\r\n         * Flip Grid component on small screen.\r\n         * @type {boolean|*}\r\n         */\r\n        flipOnSmallScreen: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        /**\r\n         * Enable or disable pagination.\r\n         * @type {boolean|Object|*}\r\n         */\r\n        pageable: {\r\n            type: [Boolean, Object],\r\n            default: false\r\n        },\r\n        /**\r\n         * Jika berupa <b>Object</b> maka strukturnya adalah:\r\n         * <pre>\r\n         * {\r\n         *    logic: 'and|or',      // Logic yang dipakai jika filters lebih dari 1\r\n         *    operator: 'eq|neq|gt|gte|lt|lte|in|notin|startswith|endswith|contains|fts',  // default 'eq'\r\n         *    placeholder: boolean, // Show/hide placeholder pada textfield, default TRUE\r\n         *    immediate: boolean,   // Jika TRUE maka filtering akan segera dilakukan setelah event 'onChange' terjadi\r\n         *                          // jika FALSE maka filtering baru dilakukan setelah keyboard 'ENTER' ditekan\r\n         *                          // ataupun melalui action button\r\n         *    minlength: int,       // Minimum jumlah karakter, default 1\r\n         * }\r\n         * </pre>\r\n         */\r\n        filterable: {\r\n            type: [Boolean, Object],\r\n            default: false\r\n        },\r\n        /**\r\n         * Enable or disable row selection.\r\n         * @type {boolean|Object|*}\r\n         */\r\n        rowSelection: {\r\n            type: [Boolean, Object],\r\n            default: false\r\n        },\r\n        /**\r\n         * Display Grid column footer at bottom or not.\r\n         * @type {boolean|*}\r\n         */\r\n        showFooter: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Enable or disable column filtering feature.\r\n         * @type {boolean|Object|*}\r\n         */\r\n        sortable: {\r\n            type: [Boolean, Object],\r\n            default: undefined\r\n        }\r\n    },\r\n    data: (vm) => ({\r\n        checkboxWidth: 48,\r\n        columnsWidth: [],\r\n        dataFetched: false,\r\n        isFetching: false,\r\n        isSmallScreen: false,\r\n        selectionMode: {\r\n            checkboxColor: 'pink',\r\n            rowSelect: false\r\n        },\r\n        table: {\r\n            columns: [],\r\n            selectedItems: [],\r\n            page: 0,\r\n            pageSize: 10,\r\n            totalCount: 0,\r\n            enableSort: vm.sortable,\r\n            dataSource: vm.dataSource,\r\n            filterable: vm.filterable,\r\n            checkboxWidth: vm.checkboxWidth,\r\n            flipOnSmallScreen: vm.flipOnSmallScreen,\r\n            sort: {property: '', direction: 'asc'},\r\n            tableWidth: undefined,\r\n            // methods\r\n            /**\r\n             * Sort the data based on the given field name.\r\n             *\r\n             * @param {string} field     - The field for sorting\r\n             * @param {string} direction - The sort direction.\r\n             */\r\n            doSort: vm.sort,\r\n            /**\r\n             * Check if feature CheckBox Row selection is enabled or not.\r\n             *\r\n             * @returns {boolean}\r\n             */\r\n            enableRowSelect: vm._enableRowSelect,\r\n            /**\r\n             * Filter the data based on the given filters and fire event <tt>'filter'</tt> after data has been filtered.\r\n             *\r\n             * @param {IFilter[]} filters - Collection of filters to be used\r\n             * @param {string} logic      - The filter logic to be used (optional)\r\n             */\r\n            filter: vm.filter,\r\n            fireEvent: vm.fireEvent,\r\n            /**\r\n             * Generate simple/random UUID or standard UUID v4.\r\n             *\r\n             * @param {boolean} standard\r\n             * @returns {string}\r\n             */\r\n            uuid: vm._uuid\r\n        }\r\n    }),\r\n    provide() {\r\n        const _grid = this.table;\r\n\r\n        return {\r\n            BsGrid: _grid\r\n        }\r\n    },\r\n    computed: {\r\n        /**\r\n         * Get pagination binding attributes.\r\n         *\r\n         * @returns {Object|*} Pagination attributes\r\n         * @private\r\n         */\r\n        _paginationAttrs() {\r\n            return {\r\n                page: this.currentPage,\r\n                pageable: this.pageable,\r\n                pageSize: this.pageSize,\r\n                dataItems: this.dataItems,\r\n                totalItems: this.totalItems\r\n            }\r\n        },\r\n        /**\r\n         * Gets current page number.\r\n         *\r\n         * @returns {number} Page number\r\n         */\r\n        currentPage() {\r\n            return this.table.page;\r\n        },\r\n        /**\r\n         * Check if feature Row selection is enabled or not.\r\n         *\r\n         * @returns {boolean} TRUE if row selection is enabled otherwise FALSE\r\n         */\r\n        isSelectable() {\r\n            return this.selectionMode.rowSelect;\r\n        },\r\n        /**\r\n         * Gets the number of items that can be display in the Grid.\r\n         *\r\n         * @returns {int} Default number of items within a page\r\n         */\r\n        pageSize() {\r\n            return this.table.pageSize;\r\n        },\r\n        /**\r\n         * Gets the selected items.\r\n         *\r\n         * @returns {Array} Current selected items\r\n         */\r\n        selectedItems() {\r\n            return this.table.selectedItems;\r\n        },\r\n        /**\r\n         * Gets total number of items.\r\n         *\r\n         * @returns {int} Total items\r\n         */\r\n        totalItems() {\r\n            return this.dataSource ? this.dataSource.totalCount : this.table.totalCount;\r\n        },\r\n        /**\r\n         * Gets the total number of pages.\r\n         *\r\n         * @returns {int} Total pages\r\n         */\r\n        totalPages() {\r\n            return Math.ceil(this.totalItems / this.table.pageSize);\r\n        }\r\n    },\r\n    created() {\r\n        if (typeof this.rowSelection === 'boolean') {\r\n            this.selectionMode.rowSelect = this.rowSelection;\r\n        } else if (typeof this.rowSelection === 'object') {\r\n            this.selectionMode.checkboxColor = this.rowSelection.checkboxColor || 'pink';\r\n            this.selectionMode.rowSelect = this.rowSelection.rowSelect || true;\r\n        }\r\n        if (Helper.isObject(this.pageable) && this.pageable.pageSize && this.pageable.pageSize > 0) {\r\n            this.table.pageSize = this.pageable.pageSize;\r\n        }\r\n\r\n        this.gotoPage(1);\r\n    },\r\n    mounted() {\r\n        addResizeListener(this.$el, this._updateTableWidth);\r\n        this._updateBodyHeight();\r\n    },\r\n    beforeDestroy() {\r\n        removeResizeListener(this.$el, this._updateTableWidth);\r\n        this.columnsWidth = null;\r\n        this.selectionMode = null;\r\n\r\n        this.table.columns = [];\r\n        this.table.selectedItems = [];\r\n        this.table = null;\r\n    },\r\n    methods: {\r\n        /**\r\n         * Check if feature CheckBox Row selection is enabled or not.\r\n         *\r\n         * @returns {boolean} TRUE if feature CheckBox Row selection is enabled otherwise FALSE\r\n         * @private\r\n         */\r\n        _enableRowSelect() {\r\n            return this.selectionMode.rowSelect;\r\n        },\r\n        /**\r\n         * Fetch data from array data source or remote server.\r\n         *\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _fetchData() {\r\n            this.isFetching = true;\r\n\r\n            if (!Helper.isEmpty(this.dataSource)) {\r\n                if (this.dataSource.pageSize < 1 || Helper.isEmpty(this.dataSource.pageSize)) {\r\n                    // this.dataSource.pageSize = this.table.pageSize;\r\n                    this.dataSource.setPageSize(this.table.pageSize);\r\n                } else {\r\n                    this.table.pageSize = this.dataSource.pageSize;\r\n                }\r\n\r\n                this.dataSource\r\n                    .page(this.table.page)\r\n                    .load()\r\n                    .then(() => {\r\n                        this.dataFetched = true;\r\n                        this.isFetching = false;\r\n                        this.table.totalCount = this.dataSource.totalCount;\r\n                        this.fireEvent('data-bind', this.dataSource.dataItems);\r\n                    })\r\n                    .catch((error) => {\r\n                        this.dataFetched = true;\r\n                        this.isFetching = false;\r\n                        this.fireEvent('data-error', error);\r\n                    });\r\n            } else {\r\n                this.dataFetched = false;\r\n                this.isFetching = false;\r\n            }\r\n        },\r\n        /**\r\n         * Event handler when table body is scrolling.\r\n         *\r\n         * @param {Event} e The received event\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _handleScroll(e) {\r\n            const scrollLeft = e.target.scrollLeft;\r\n            const theader = this.$refs.theader;\r\n            const tfooter = this.$refs.tfooter;\r\n\r\n            if (theader) {\r\n                theader.scrollLeft = scrollLeft;\r\n            }\r\n            if (tfooter) {\r\n                tfooter.scrollLeft = scrollLeft;\r\n            }\r\n        },\r\n        /**\r\n         * Update grid body height.\r\n         *\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _updateBodyHeight() {\r\n            if (this.isFixedHeight && (!this.isSmallScreen || !this.flipOnSmallScreen)) {\r\n                const gridHeight = this.$el.offsetHeight;\r\n                const theaderHeight = this.$refs.theader ? this.$refs.theader.offsetHeight : 0;\r\n                const tfooterHeight = this.$refs.tfooter ? this.$refs.tfooter.offsetHeight : 0;\r\n                const footerHeight = this.$refs.footer ? this.$refs.footer.offsetHeight : 0;\r\n\r\n                this.$refs.tcontent.style.height = (gridHeight - (theaderHeight + tfooterHeight + footerHeight)) + 'px';\r\n            }\r\n        },\r\n        /**\r\n         * Detect screen size and recalculate grid width.\r\n         *\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _updateTableWidth() {\r\n            this.isSmallScreen = this.screenMaxSm.matches;\r\n\r\n            if (this.$el && this.columnIterator.length > 0 && (!this.isSmallScreen || !this.flipOnSmallScreen)) {\r\n                if (this.columnsWidth.length === 0) {\r\n                    this.columnsWidth = this.columnIterator\r\n                        .filter(c => c.cellData === true)\r\n                        .map(col => col.width ? Number(col.width) : 0);\r\n                }\r\n                const elWidth = this.isFixedHeight\r\n                    ? (this.$el.getBoundingClientRect().width - 18)\r\n                    : this.$el.getBoundingClientRect().width;\r\n                let avgColsNoWidth = 0;\r\n                let decreaseWidth = true;\r\n                let tmpCols = this.columnsWidth.map(col => col);\r\n                const colsNoWidth = tmpCols.filter(c => c === 0);\r\n\r\n                if (this.rowSelection) {\r\n                    tmpCols.push(this.checkboxWidth);\r\n                }\r\n\r\n                let totWidth = sum(tmpCols);\r\n                if (elWidth > totWidth && colsNoWidth.length > 0) {\r\n                    avgColsNoWidth = Math.floor((elWidth - totWidth) / colsNoWidth.length);\r\n                }\r\n\r\n                this.table.columns = this.columnIterator.map((col, idx) => {\r\n                    if (tmpCols[idx] === 0) {\r\n                        const minWidth = parseInt(col.minWidth, 10);\r\n\r\n                        if (avgColsNoWidth < minWidth) {\r\n                            col.width = decreaseWidth ? (minWidth - 1) : minWidth;\r\n                        } else {\r\n                            col.width = decreaseWidth ? (avgColsNoWidth - 1) : avgColsNoWidth;\r\n                        }\r\n                        totWidth += col.width;\r\n                        decreaseWidth = false;\r\n                    }\r\n\r\n                    return col;\r\n                });\r\n\r\n                this.table.tableWidth = totWidth <= elWidth ? elWidth : totWidth;\r\n            } else {\r\n                this.table.tableWidth = null;\r\n            }\r\n        },\r\n        /**\r\n         * Deselect a row.\r\n         *\r\n         * @param {Record} item The item to deselect\r\n         * @returns {void}\r\n         */\r\n        deselectRow(item) {\r\n            if (this.isRowSelected(item)) {\r\n                this.table.selectedItems = this.table.selectedItems.filter(target => target !== item);\r\n                this.fireEvent('deselect', item);\r\n            }\r\n        },\r\n        /**\r\n         * Filter the data based on the given filters and fire event <tt>'filter'</tt> after data has been filtered.\r\n         *\r\n         * @param {IFilter[]} filters Collection of filters to be used\r\n         * @param {string} [logic]   The filter logic to be used\r\n         * @returns {void}\r\n         */\r\n        filter(filters, logic = 'AND') {\r\n            if (!Helper.isEmpty(this.dataSource)) {\r\n                this.dataSource\r\n                    .setFilterLogic((this.filterable && this.filterable.logic ? this.filterable.logic : logic))\r\n                    .setFilters(filters, true);\r\n            }\r\n\r\n            this.table.page = 1;\r\n            this._fetchData();\r\n            this.fireEvent('data-filter', filters);\r\n        },\r\n        /**\r\n         * Go to another page and load its data.\r\n         *\r\n         * @param {int} page Page number\r\n         * @returns {void}\r\n         */\r\n        gotoPage(page) {\r\n            if (page > 0 && page <= this.totalPages) {\r\n                this.table.page = page;\r\n            } else {\r\n                this.table.page = 1;\r\n            }\r\n\r\n            this._fetchData();\r\n        },\r\n        /**\r\n         * Check if a row is selected or not.\r\n         *\r\n         * @param {Record} item The item to be checked\r\n         * @returns {boolean} TRUE if the given item is selected otherwise FALSE\r\n         */\r\n        isRowSelected(item) {\r\n            return this.table.selectedItems.includes(item);\r\n        },\r\n        /**\r\n         * Go to next page and load its data.\r\n         *\r\n         * @returns {void}\r\n         */\r\n        nextPage() {\r\n            if (this.table.page < this.totalPages) {\r\n                ++this.table.page;\r\n                this._fetchData();\r\n            }\r\n        },\r\n        /**\r\n         * Go to previous page and load its data.\r\n         *\r\n         * @returns {void}\r\n         */\r\n        previousPage() {\r\n            if (this.table.page > 1) {\r\n                --this.table.page;\r\n                this._fetchData();\r\n            }\r\n        },\r\n        /**\r\n         * Reload data from the remote server.\r\n         *\r\n         * @returns {void}\r\n         */\r\n        reload() {\r\n            this._fetchData();\r\n        },\r\n        /**\r\n         * Select a row.\r\n         *\r\n         * @param {Record} item The selected item\r\n         * @returns {void}\r\n         */\r\n        selectRow(item) {\r\n            if (!this.isRowSelected(item)) {\r\n                this.table.selectedItems = this.table.selectedItems.concat([item]);\r\n                this.fireEvent('select', item);\r\n            }\r\n        },\r\n        /**\r\n         * Set default number of items to display within a page.\r\n         *\r\n         * @param {int} value Number of items to display\r\n         * @returns {void}\r\n         */\r\n        setPageSize(value) {\r\n            if (Helper.isEmpty(value)) {\r\n                this.table.page = 1;\r\n                this.table.pageSize = -1;\r\n            } else {\r\n                this.table.pageSize = value;\r\n            }\r\n            if (!Helper.isEmpty(this.dataSource)) {\r\n                // this.dataSource.pageSize = this.table.pageSize;\r\n                this.dataSource.setPageSize(this.table.pageSize);\r\n            }\r\n\r\n            this._fetchData();\r\n        },\r\n        /**\r\n         * Sort the data based on the given field name.\r\n         *\r\n         * @param {string} field     The field for sorting\r\n         * @param {string} direction The sort direction.\r\n         * @returns {void}\r\n         */\r\n        sort(field, direction) {\r\n            // this.dataSource.sorters = [{property: field, direction: direction.toLowerCase()}];\r\n            this.dataSource.setSorters([{property: field, direction: direction.toLowerCase()}]);\r\n            this._fetchData();\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"~bootstrap/scss/functions\";\r\n@import \"~bootstrap/scss/variables\";\r\n@import \"~bootstrap/scss/mixins/breakpoints\";\r\n@import \"~compass-sass-mixins/lib/compass/css3\";\r\n@import \"../../../scss/colors\";\r\n@import \"../../../scss/variables\";\r\n\r\n.#{$prefix}-grid,\r\n.#{$prefix}-treegrid {\r\n    position: relative;\r\n    width: 100%;\r\n\r\n    table {\r\n        border-collapse: separate;\r\n        border-spacing: 0;\r\n        height: auto;\r\n        width: 100%;\r\n        margin: 0;\r\n\r\n        .#{$prefix}-grid-cell {\r\n            &.row-numbering {\r\n                border-right: 1px solid lighten($gray-300, 4%);\r\n            }\r\n        }\r\n\r\n        th, td {\r\n            border-top: $table-border-width solid $table-border-color;\r\n            color: $table-text-color;\r\n            font-size: $table-font-size;\r\n            font-weight: $font-weight-light;\r\n            padding: $table-cell-padding;\r\n            vertical-align: middle;\r\n        }\r\n\r\n        thead, tfoot {\r\n            th {\r\n                @include user-select(none);\r\n                font-weight: $font-weight-bold;\r\n                color: $table-header-color;\r\n                padding-top: $padding-base;\r\n                padding-bottom: $padding-base;\r\n\r\n                &.row-numbering {\r\n                    border-right: 1px solid lighten($table-border-color, 20%);\r\n                }\r\n            }\r\n\r\n            > tr {\r\n                &:first-child {\r\n                    th {\r\n                        border-top: 0 none;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        tbody {\r\n            > tr {\r\n                &:first-child {\r\n                    td {\r\n                        border-top: 0 none;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        thead th, tbody td {\r\n            &:first-child {\r\n                padding-left: 1rem;\r\n            }\r\n        }\r\n    }\r\n\r\n    .#{$prefix}-pagination {\r\n        border-top: 1px solid darken($table-border-color, 10%);\r\n        position: relative;\r\n        background-color: $white;\r\n    }\r\n\r\n    .#{$prefix}-grid-header,\r\n    .#{$prefix}-grid-footer,\r\n    .#{$prefix}-grid-content {\r\n        position: relative;\r\n\r\n        table {\r\n            table-layout: fixed;\r\n        }\r\n    }\r\n\r\n    .#{$prefix}-grid-header {\r\n        background-color: $table-header-bgcolor;\r\n        border-bottom: 1px solid darken($table-border-color, 10%);\r\n\r\n        > .#{$prefix}-grid-header-wrap {\r\n            position: relative;\r\n            overflow: hidden;\r\n            width: 100%;\r\n\r\n            .#{$prefix}-grid-th-inner {\r\n                overflow: hidden;\r\n                position: relative;\r\n                text-overflow: ellipsis;\r\n                vertical-align: top;\r\n                white-space: nowrap;\r\n\r\n                &.#{$prefix}-sortable {\r\n                    cursor: pointer;\r\n                }\r\n\r\n                .sort-asc, .sort-desc {\r\n                    @include transition($transition-basic);\r\n                    color: lighten($table-header-color, 10%);\r\n                    display: inline-block;\r\n                    font-size: 12px;\r\n                }\r\n\r\n                .sort-asc {\r\n                    @include transform(rotateZ(0deg));\r\n                }\r\n\r\n                .sort-desc {\r\n                    @include transform(rotateZ(180deg));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .#{$prefix}-grid-footer {\r\n        background-color: lighten($table-header-bgcolor, 2%);\r\n        border-top: 1px solid $table-border-color;\r\n\r\n        > .#{$prefix}-grid-footer-wrap {\r\n            position: relative;\r\n            overflow: hidden;\r\n            width: 100%;\r\n\r\n            .#{$prefix}-grid-th-inner {\r\n                overflow: hidden;\r\n                position: relative;\r\n                text-overflow: ellipsis;\r\n                vertical-align: top;\r\n                white-space: nowrap;\r\n                font-weight: $font-weight-bold;\r\n            }\r\n        }\r\n    }\r\n\r\n    .#{$prefix}-grid-content {\r\n        background-color: $white;\r\n        min-height: 100px;\r\n        width: 100%;\r\n        overflow-y: hidden;\r\n        overflow-x: auto;\r\n        -webkit-overflow-scrolling: touch;\r\n        -ms-overflow-style: -ms-autohiding-scrollbar;\r\n\r\n        > .#{$prefix}-grid-alert {\r\n            max-width: 500px;\r\n\r\n            > .alert {\r\n                margin-bottom: 0;\r\n            }\r\n        }\r\n\r\n        .#{$prefix}-grid-cell-inner {\r\n            overflow: hidden;\r\n            position: relative;\r\n            text-overflow: ellipsis;\r\n            white-space: nowrap;\r\n\r\n            > .svg-inline--fa {\r\n                font-size: 18px;\r\n            }\r\n        }\r\n    }\r\n\r\n    .#{$prefix}-progress-bar {\r\n        position: absolute;\r\n        width: 100%;\r\n        z-index: 100;\r\n    }\r\n\r\n    .#{$prefix}-grid-progress-spinner {\r\n        @include flexbox((display: flex, justify-content: center));\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        right: 0;\r\n        z-index: 100;\r\n        min-height: 100px;\r\n        max-height: 100%;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    &.#{$prefix}-grid-bordered {\r\n        .#{$prefix}-grid-header,\r\n        .#{$prefix}-grid-content {\r\n            th, td {\r\n                border-right: $table-border-width solid $table-border-color;\r\n\r\n                &:last-child {\r\n                    border-right: none;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    &.#{$prefix}-grid-hoverable {\r\n        .#{$prefix}-grid-content {\r\n            .#{$prefix}-grid-row,\r\n            .#{$prefix}-grid-row-alt {\r\n                @include transition($transition-hoverable);\r\n\r\n                &:hover {\r\n                    background-color: $table-hover-bgcolor;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    &.#{$prefix}-grid-fixed {\r\n        .#{$prefix}-grid-header {\r\n            padding-right: 18px;\r\n\r\n            > .#{$prefix}-grid-header-wrap {\r\n                border-right: 1px solid darken($table-border-color, 10%);\r\n            }\r\n        }\r\n\r\n        .#{$prefix}-grid-content {\r\n            overflow-y: scroll;\r\n        }\r\n    }\r\n}\r\n\r\n.card {\r\n    > .#{$prefix}-grid,\r\n    > .#{$prefix}-treegrid {\r\n        &:first-child {\r\n            > div[class^=\"#{$prefix}-grid\"] {\r\n                &:first-child:not(.#{$prefix}-grid-cell-inner) {\r\n                    @include border-top-radius($border-radius-sm);\r\n                }\r\n\r\n                &:last-child:not(.#{$prefix}-grid-cell-inner) {\r\n                    @include border-bottom-radius($border-radius-sm);\r\n                }\r\n            }\r\n\r\n            > div:first-child {\r\n                > div[class^=\"#{$prefix}-grid\"] {\r\n                    &:first-child:not(.#{$prefix}-grid-cell-inner) {\r\n                        @include border-top-radius($border-radius-sm);\r\n                    }\r\n\r\n                    &:last-child:not(.#{$prefix}-grid-cell-inner) {\r\n                        @include border-bottom-radius($border-radius-sm);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        > div:last-child > div[class^=\"#{$prefix}-grid\"],\r\n        > div[class^=\"#{$prefix}-grid\"] {\r\n            &:last-child:not(.#{$prefix}-grid-cell-inner) {\r\n                @include border-bottom-radius($border-radius-sm);\r\n            }\r\n        }\r\n\r\n        .#{$prefix}-pagination {\r\n            @include border-bottom-radius($border-radius-sm);\r\n        }\r\n    }\r\n\r\n    .card-body {\r\n        .#{$prefix}-grid,\r\n        .#{$prefix}-treegrid {\r\n            .#{$prefix}-grid-header {\r\n                border-top: $table-border-width solid $table-border-color;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@include media-breakpoint-down(sm) {\r\n    .#{$prefix}-grid {\r\n        &.#{$prefix}-grid-flip {\r\n            .#{$prefix}-grid-header,\r\n            .#{$prefix}-grid-footer,\r\n            .#{$prefix}-grid-content {\r\n                .#{$prefix}-grid-cell-selection {\r\n                    width: auto;\r\n                }\r\n\r\n                table {\r\n                    table-layout: auto;\r\n                    display: inline-flex;\r\n\r\n                    thead, tfoot {\r\n                        @include flexbox((display: flex, flex-shrink: 0));\r\n\r\n                        th {\r\n                            color: $gray-800;\r\n                            font-weight: $font-weight-bold;\r\n                            text-align: left !important;\r\n                            padding-right: 1.2rem;\r\n\r\n                            &.row-numbering {\r\n                                border-right: none;\r\n                            }\r\n\r\n                            .sort-asc, .sort-desc {\r\n                                float: right;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    tbody, tfoot {\r\n                        @include display-flex();\r\n                        position: relative;\r\n                        overflow-x: auto;\r\n                        overflow-y: hidden;\r\n                    }\r\n\r\n                    tbody {\r\n                        td {\r\n                            border-right: $table-border-width solid $table-border-color;\r\n\r\n                            &.row-numbering {\r\n                                text-align: left !important;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    tr {\r\n                        @include flexbox((display: flex, flex-direction: column));\r\n                        min-width: min-content;\r\n\r\n                        td, th {\r\n                            display: block;\r\n                            border-top: $table-border-width solid $table-border-color;\r\n\r\n                            &:first-child {\r\n                                border-top: none;\r\n                            }\r\n                        }\r\n\r\n                        &:last-child {\r\n                            td {\r\n                                border-right: none;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            .#{$prefix}-grid-header {\r\n                border-right: $table-border-width solid $table-border-color;\r\n                border-bottom-width: 0;\r\n                max-width: 40%;\r\n            }\r\n\r\n            .#{$prefix}-grid-footer {\r\n                border-left: $table-border-width solid $table-border-color;\r\n                border-top: 0 none;\r\n                max-width: 30%;\r\n\r\n                > .#{$prefix}-grid-footer-wrap {\r\n                    overflow-x: auto;\r\n                    overflow-y: hidden;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .card {\r\n        > .#{$prefix}-grid {\r\n            &.#{$prefix}-grid-flip {\r\n                div[class^=\"#{$prefix}-grid\"] {\r\n                    &:first-child {\r\n                        @include border-top-right-radius(0);\r\n                        @include border-bottom-left-radius($border-radius-sm);\r\n                    }\r\n                }\r\n\r\n                .#{$prefix}-grid-content {\r\n                    @include border-top-right-radius($border-radius-sm);\r\n                }\r\n            }\r\n        }\r\n\r\n        .card-body {\r\n            .#{$prefix}-grid {\r\n                &.#{$prefix}-grid-flip {\r\n                    .#{$prefix}-grid-header,\r\n                    .#{$prefix}-grid-content {\r\n                        border-top: $table-border-width solid $table-border-color;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>\r\n"]}]}