{"remainingRequest":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsAnimation\\BsMaskLoader.vue?vue&type=script&lang=js&","dependencies":[{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsAnimation\\BsMaskLoader.vue","mtime":1611489717000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQnNQcm9ncmVzcyBmcm9tICIuL0JzUHJvZ3Jlc3MiOw0KaW1wb3J0IEJzT3ZlcmxheSBmcm9tICIuL0JzT3ZlcmxheSI7DQppbXBvcnQgSGVscGVyIGZyb20gIi4uLy4uL3V0aWxzL0hlbHBlciI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgICBuYW1lOiAiQnNNYXNrTG9hZGVyIiwNCiAgICBjb21wb25lbnRzOiB7QnNQcm9ncmVzcywgQnNPdmVybGF5fSwNCiAgICBwcm9wczogew0KICAgICAgICAvKioNCiAgICAgICAgICogU2V0cyB0aGUgY3NzLXN0eWxlIGBwb3NpdGlvbmAgdmFsdWUuIElmIGB0cnVlYCB0aGVuIGNzcy1zdHlsZSBgcG9zaXRpb25gIGlzIHNldCB0byBgZml4ZWRgLg0KICAgICAgICAgKiBAdHlwZSB7Ym9vbGVhbnwqfQ0KICAgICAgICAgKi8NCiAgICAgICAgZml4ZWRQb3NpdGlvbjogew0KICAgICAgICAgICAgdHlwZTogQm9vbGVhbiwNCiAgICAgICAgICAgIGRlZmF1bHQ6IGZhbHNlDQogICAgICAgIH0sDQogICAgICAgIC8qKg0KICAgICAgICAgKiBNYXNrIGxvYWRlciBzdGF0ZSwgc2hvdyBvciBoaWRlLg0KICAgICAgICAgKiBAdHlwZSB7Ym9vbGVhbnwqfQ0KICAgICAgICAgKi8NCiAgICAgICAgc2hvdzogew0KICAgICAgICAgICAgdHlwZTogQm9vbGVhbiwNCiAgICAgICAgICAgIGRlZmF1bHQ6IGZhbHNlDQogICAgICAgIH0sDQogICAgICAgIC8qKg0KICAgICAgICAgKiBCYWNrZHJvcCBvdmVybGF5IG9wYWNpdHkgdmFsdWUuDQogICAgICAgICAqIEB0eXBlIHtudW1iZXJ8Kn0NCiAgICAgICAgICovDQogICAgICAgIG92ZXJsYXlPcGFjaXR5OiB7DQogICAgICAgICAgICB0eXBlOiBOdW1iZXIsDQogICAgICAgICAgICBkZWZhdWx0OiAwLjQNCiAgICAgICAgfSwNCiAgICAgICAgLyoqDQogICAgICAgICAqIEJhY2tkcm9wIG92ZXJsYXkgY29sb3IuDQogICAgICAgICAqIEB0eXBlIHtzdHJpbmd8Kn0NCiAgICAgICAgICovDQogICAgICAgIG92ZXJsYXlDb2xvcjogew0KICAgICAgICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgICAgICAgZGVmYXVsdDogJyMwMDAnDQogICAgICAgIH0sDQogICAgICAgIC8qKg0KICAgICAgICAgKiBUaGUgYW5pbWF0aW9uIHRyYW5zaXRpb24gdG8gYmUgdXNlZCB3aGVuIGRpc3BsYXlpbmcgdGhlIG1hc2sgbG9hZGVyLg0KICAgICAgICAgKiBAdHlwZSB7c3RyaW5nfCp9DQogICAgICAgICAqLw0KICAgICAgICB0cmFuc2l0aW9uOiB7DQogICAgICAgICAgICB0eXBlOiBTdHJpbmcsDQogICAgICAgICAgICBkZWZhdWx0OiAnZmFkZScNCiAgICAgICAgfSwNCiAgICAgICAgLyoqDQogICAgICAgICAqIE1hc2sgbG9hZGVyIHNwaW5uZXIgY29sb3IuDQogICAgICAgICAqIEB0eXBlIHtzdHJpbmd8Kn0NCiAgICAgICAgICovDQogICAgICAgIHNwaW5uZXJDb2xvcjogew0KICAgICAgICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgICAgICAgZGVmYXVsdDogQnNQcm9ncmVzcy5wcm9wcy5jb2xvci5kZWZhdWx0DQogICAgICAgIH0sDQogICAgICAgIC8qKg0KICAgICAgICAgKiBNYXNrIGxvYWRlciBzcGlubmVyIGRpYW1ldGVyLg0KICAgICAgICAgKiBAdHlwZSB7bnVtYmVyfCp9DQogICAgICAgICAqLw0KICAgICAgICBzcGlubmVyRGlhbWV0ZXI6IHsNCiAgICAgICAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sDQogICAgICAgICAgICBkZWZhdWx0OiAzNSwNCiAgICAgICAgICAgIHZhbGlkYXRvcjogdiA9PiAhaXNOYU4ocGFyc2VJbnQodiwgMTApKQ0KICAgICAgICB9LA0KICAgICAgICAvKioNCiAgICAgICAgICogTWFzayBsb2FkZXIgc3Bpbm5lciB0aGlja25lc3MuDQogICAgICAgICAqIEB0eXBlIHtudW1iZXJ8Kn0NCiAgICAgICAgICovDQogICAgICAgIHNwaW5uZXJUaGlja25lc3M6IHsNCiAgICAgICAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sDQogICAgICAgICAgICBkZWZhdWx0OiA1LA0KICAgICAgICAgICAgdmFsaWRhdG9yOiB2ID0+ICFpc05hTihwYXJzZUludCh2LCAxMCkpDQogICAgICAgIH0sDQogICAgICAgIC8qKg0KICAgICAgICAgKiBNYXNrIGxvYWRlciBzcGlubmVyIHR5cGUuDQogICAgICAgICAqIEB0eXBlIHtzdHJpbmd8Kn0NCiAgICAgICAgICovDQogICAgICAgIHNwaW5uZXJUeXBlOiB7DQogICAgICAgICAgICB0eXBlOiBTdHJpbmcsDQogICAgICAgICAgICBkZWZhdWx0OiAnbGluZWFyJywNCiAgICAgICAgICAgIHZhbGlkYXRvcjogdiA9PiBbJ2xpbmVhcicsICdwcm9ncmVzcycsICdzcGlubmVyJywgJ2dyb3cnXS5pbmNsdWRlcyh2KQ0KICAgICAgICB9LA0KICAgICAgICAvKioNCiAgICAgICAgICogU2V0cyB0aGUgY3NzIHN0eWxlIGB6LWluZGV4YCB2YWx1ZS4NCiAgICAgICAgICogQHR5cGUge251bWJlcnwqfQ0KICAgICAgICAgKi8NCiAgICAgICAgekluZGV4OiB7DQogICAgICAgICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLA0KICAgICAgICAgICAgZGVmYXVsdDogMTAwLA0KICAgICAgICAgICAgdmFsaWRhdG9yOiB2ID0+ICFpc05hTihwYXJzZUludCh2LCAxMCkpDQogICAgICAgIH0sDQogICAgfSwNCiAgICBkYXRhOiAoKSA9PiAoew0KICAgICAgICBzdmdQYXRoRGF0YTogJ00zMDQgNDhjMCAyNi41MS0yMS40OSA0OC00OCA0OHMtNDgtMjEuNDktNDgtNDggMjEuNDktNDggNDgtNDggNDggMjEuNDkgNDggNDh6bS00OCAzNjhjLTI2LjUxIDAtNDggMjEuNDktNDggNDhzMjEuNDkgNDggNDggNDggNDgtMjEuNDkgNDgtNDgtMjEuNDktNDgtNDgtNDh6bTIwOC0yMDhjLTI2LjUxIDAtNDggMjEuNDktNDggNDhzMjEuNDkgNDggNDggNDggNDgtMjEuNDkgNDgtNDgtMjEuNDktNDgtNDgtNDh6TTk2IDI1NmMwLTI2LjUxLTIxLjQ5LTQ4LTQ4LTQ4UzAgMjI5LjQ5IDAgMjU2czIxLjQ5IDQ4IDQ4IDQ4IDQ4LTIxLjQ5IDQ4LTQ4em0xMi45MjIgOTkuMDc4Yy0yNi41MSAwLTQ4IDIxLjQ5LTQ4IDQ4czIxLjQ5IDQ4IDQ4IDQ4IDQ4LTIxLjQ5IDQ4LTQ4YzAtMjYuNTA5LTIxLjQ5MS00OC00OC00OHptMjk0LjE1NiAwYy0yNi41MSAwLTQ4IDIxLjQ5LTQ4IDQ4czIxLjQ5IDQ4IDQ4IDQ4IDQ4LTIxLjQ5IDQ4LTQ4YzAtMjYuNTA5LTIxLjQ5LTQ4LTQ4LTQ4ek0xMDguOTIyIDYwLjkyMmMtMjYuNTEgMC00OCAyMS40OS00OCA0OHMyMS40OSA0OCA0OCA0OCA0OC0yMS40OSA0OC00OC0yMS40OTEtNDgtNDgtNDh6JywNCiAgICB9KSwNCiAgICBjb21wdXRlZDogew0KICAgICAgICBfYnNTcGlubmVyU3R5bGVzKCkgew0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICAnYm9yZGVyLXdpZHRoJzogdGhpcy5pc0xpbmVhciA/IEhlbHBlci5zaXplVW5pdCh0aGlzLnNwaW5uZXJUaGlja25lc3MpIDogbnVsbCwNCiAgICAgICAgICAgICAgICAnaGVpZ2h0JzogSGVscGVyLnNpemVVbml0KHRoaXMuc3Bpbm5lckRpYW1ldGVyKSwNCiAgICAgICAgICAgICAgICAnd2lkdGgnOiBIZWxwZXIuc2l6ZVVuaXQodGhpcy5zcGlubmVyRGlhbWV0ZXIpLA0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBfYnNTcGlubmVyQ2xhc3NlcygpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgJ3NwaW5uZXItZ3Jvdyc6IHRoaXMuaXNHcm93LA0KICAgICAgICAgICAgICAgICdzcGlubmVyLWJvcmRlcic6IHRoaXMuaXNMaW5lYXIsDQogICAgICAgICAgICAgICAgWyd0ZXh0LScgKyB0aGlzLnNwaW5uZXJDb2xvcl06IHRoaXMuc3Bpbm5lckNvbG9yDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIF9zcGlubmVyQ2xhc3NlcygpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgJ2FsaWduLXNlbGYtY2VudGVyJzogdHJ1ZSwNCiAgICAgICAgICAgICAgICAnbWQtc3Bpbm5lci1yb3RhdGUnOiB0cnVlLA0KICAgICAgICAgICAgICAgIFsndGV4dC0nICsgdGhpcy5zcGlubmVyQ29sb3JdOiB0aGlzLnNwaW5uZXJDb2xvcg0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBfc3Bpbm5lclN0eWxlcygpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgJ2hlaWdodCc6IEhlbHBlci5zaXplVW5pdCh0aGlzLnNwaW5uZXJEaWFtZXRlciksDQogICAgICAgICAgICAgICAgJ3dpZHRoJzogSGVscGVyLnNpemVVbml0KHRoaXMuc3Bpbm5lckRpYW1ldGVyKSwNCiAgICAgICAgICAgIH07DQogICAgICAgIH0sDQogICAgICAgIF93cmFwcGVyU3R5bGVzKCkgew0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICAnei1pbmRleCc6IHRoaXMuekluZGV4LA0KICAgICAgICAgICAgICAgICdwb3NpdGlvbic6IHRoaXMuZml4ZWRQb3NpdGlvbiA/ICdmaXhlZCcgOiBudWxsDQogICAgICAgICAgICB9Ow0KICAgICAgICB9LA0KICAgICAgICBpc0xpbmVhcigpIHsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLnNwaW5uZXJUeXBlID09PSAnbGluZWFyJzsNCiAgICAgICAgfSwNCiAgICAgICAgaXNQcm9ncmVzcygpIHsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLnNwaW5uZXJUeXBlID09PSAncHJvZ3Jlc3MnOw0KICAgICAgICB9LA0KICAgICAgICBpc1NwaW5uZXIoKSB7DQogICAgICAgICAgICByZXR1cm4gdGhpcy5zcGlubmVyVHlwZSA9PT0gJ3NwaW5uZXInOw0KICAgICAgICB9LA0KICAgICAgICBpc0dyb3coKSB7DQogICAgICAgICAgICByZXR1cm4gdGhpcy5zcGlubmVyVHlwZSA9PT0gJ2dyb3cnOw0KICAgICAgICB9LA0KICAgIH0sDQp9DQo="},{"version":3,"sources":["BsMaskLoader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"BsMaskLoader.vue","sourceRoot":"node_modules/vue-mdbootstrap/src/components/BsAnimation","sourcesContent":["<template>\r\n  <transition :name=\"transition\">\r\n    <div\r\n      v-if=\"show\"\r\n      :style=\"_wrapperStyles\"\r\n      class=\"md-mask-loader\">\r\n      <bs-progress\r\n        v-if=\"isProgress\"\r\n        :color=\"spinnerColor\"\r\n        :diameter=\"spinnerDiameter\"\r\n        :stroke=\"spinnerThickness\"\r\n        class=\"align-self-center\"\r\n        type=\"spinner\" />\r\n      <svg\r\n        v-else-if=\"isSpinner\"\r\n        :class=\"_spinnerClasses\"\r\n        :style=\"_spinnerStyles\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 512 512\"\r\n        role=\"img\"\r\n        class=\"md-spinner-rotate align-self-center\"\r\n        focusable=\"false\">\r\n        <path :d=\"svgPathData\" fill=\"currentColor\" />\r\n      </svg>\r\n      <div\r\n        v-else\r\n        :class=\"_bsSpinnerClasses\"\r\n        :style=\"_bsSpinnerStyles\">\r\n      </div>\r\n      <bs-overlay\r\n        :color=\"overlayColor\"\r\n        :opacity=\"overlayOpacity\"\r\n        :show=\"show\"\r\n        :z-index=\"zIndex - 1\" />\r\n    </div>\r\n  </transition>\r\n</template>\r\n\r\n<script>\r\nimport BsProgress from \"./BsProgress\";\r\nimport BsOverlay from \"./BsOverlay\";\r\nimport Helper from \"../../utils/Helper\";\r\n\r\nexport default {\r\n    name: \"BsMaskLoader\",\r\n    components: {BsProgress, BsOverlay},\r\n    props: {\r\n        /**\r\n         * Sets the css-style `position` value. If `true` then css-style `position` is set to `fixed`.\r\n         * @type {boolean|*}\r\n         */\r\n        fixedPosition: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Mask loader state, show or hide.\r\n         * @type {boolean|*}\r\n         */\r\n        show: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Backdrop overlay opacity value.\r\n         * @type {number|*}\r\n         */\r\n        overlayOpacity: {\r\n            type: Number,\r\n            default: 0.4\r\n        },\r\n        /**\r\n         * Backdrop overlay color.\r\n         * @type {string|*}\r\n         */\r\n        overlayColor: {\r\n            type: String,\r\n            default: '#000'\r\n        },\r\n        /**\r\n         * The animation transition to be used when displaying the mask loader.\r\n         * @type {string|*}\r\n         */\r\n        transition: {\r\n            type: String,\r\n            default: 'fade'\r\n        },\r\n        /**\r\n         * Mask loader spinner color.\r\n         * @type {string|*}\r\n         */\r\n        spinnerColor: {\r\n            type: String,\r\n            default: BsProgress.props.color.default\r\n        },\r\n        /**\r\n         * Mask loader spinner diameter.\r\n         * @type {number|*}\r\n         */\r\n        spinnerDiameter: {\r\n            type: [Number, String],\r\n            default: 35,\r\n            validator: v => !isNaN(parseInt(v, 10))\r\n        },\r\n        /**\r\n         * Mask loader spinner thickness.\r\n         * @type {number|*}\r\n         */\r\n        spinnerThickness: {\r\n            type: [Number, String],\r\n            default: 5,\r\n            validator: v => !isNaN(parseInt(v, 10))\r\n        },\r\n        /**\r\n         * Mask loader spinner type.\r\n         * @type {string|*}\r\n         */\r\n        spinnerType: {\r\n            type: String,\r\n            default: 'linear',\r\n            validator: v => ['linear', 'progress', 'spinner', 'grow'].includes(v)\r\n        },\r\n        /**\r\n         * Sets the css style `z-index` value.\r\n         * @type {number|*}\r\n         */\r\n        zIndex: {\r\n            type: [Number, String],\r\n            default: 100,\r\n            validator: v => !isNaN(parseInt(v, 10))\r\n        },\r\n    },\r\n    data: () => ({\r\n        svgPathData: 'M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z',\r\n    }),\r\n    computed: {\r\n        _bsSpinnerStyles() {\r\n            return {\r\n                'border-width': this.isLinear ? Helper.sizeUnit(this.spinnerThickness) : null,\r\n                'height': Helper.sizeUnit(this.spinnerDiameter),\r\n                'width': Helper.sizeUnit(this.spinnerDiameter),\r\n            }\r\n        },\r\n        _bsSpinnerClasses() {\r\n            return {\r\n                'spinner-grow': this.isGrow,\r\n                'spinner-border': this.isLinear,\r\n                ['text-' + this.spinnerColor]: this.spinnerColor\r\n            }\r\n        },\r\n        _spinnerClasses() {\r\n            return {\r\n                'align-self-center': true,\r\n                'md-spinner-rotate': true,\r\n                ['text-' + this.spinnerColor]: this.spinnerColor\r\n            }\r\n        },\r\n        _spinnerStyles() {\r\n            return {\r\n                'height': Helper.sizeUnit(this.spinnerDiameter),\r\n                'width': Helper.sizeUnit(this.spinnerDiameter),\r\n            };\r\n        },\r\n        _wrapperStyles() {\r\n            return {\r\n                'z-index': this.zIndex,\r\n                'position': this.fixedPosition ? 'fixed' : null\r\n            };\r\n        },\r\n        isLinear() {\r\n            return this.spinnerType === 'linear';\r\n        },\r\n        isProgress() {\r\n            return this.spinnerType === 'progress';\r\n        },\r\n        isSpinner() {\r\n            return this.spinnerType === 'spinner';\r\n        },\r\n        isGrow() {\r\n            return this.spinnerType === 'grow';\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"~compass-sass-mixins/lib/compass/css3\";\r\n@import \"../../../scss/colors\";\r\n@import \"../../../scss/variables\";\r\n\r\n.#{$prefix}-mask-loader {\r\n    @include flexbox((display: flex, align-items: center, justify-content: center));\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    max-height: 100%;\r\n    position: absolute;\r\n\r\n    > .#{$prefix}-spinner-rotate {\r\n        animation: md-progress-spinner-rotate 1.5s linear infinite;\r\n    }\r\n}\r\n</style>\r\n"]}]}