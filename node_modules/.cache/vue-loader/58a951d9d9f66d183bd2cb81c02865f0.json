{"remainingRequest":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsChipField.vue?vue&type=script&lang=js&","dependencies":[{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsChipField.vue","mtime":1625050173000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BsChipField.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BsChipField.vue","sourceRoot":"node_modules/vue-mdbootstrap/src/components/BsField","sourcesContent":["<template>\r\n  <div :class=\"_classNames\" class=\"md-field md-chips-field row\">\r\n    <slot v-if=\"floatingLabel === false\" v-bind=\"{ id }\" />\r\n    <div class=\"md-field-wrapper\">\r\n      <div\r\n        v-if=\"prependIconOuter\"\r\n        class=\"md-prepend-icon\">\r\n        <slot name=\"prependIconOuter\">\r\n          <font-awesome-icon :icon=\"prependIconOuter\" fixed-width />\r\n        </slot>\r\n      </div>\r\n      <div class=\"md-field-ctrl\">\r\n        <div class=\"md-field-inner\">\r\n          <fieldset\r\n            v-if=\"outlined\"\r\n            aria-hidden=\"true\">\r\n            <legend ref=\"legend\">\r\n              <span>​</span>\r\n            </legend>\r\n          </fieldset>\r\n          <div\r\n            v-if=\"prependIcon\"\r\n            class=\"md-prepend-icon\">\r\n            <slot name=\"prependIcon\">\r\n              <font-awesome-icon :icon=\"prependIcon\" fixed-width />\r\n            </slot>\r\n          </div>\r\n          <div class=\"md-field-input-wrapper\">\r\n            <div\r\n              v-if=\"floatingLabel\"\r\n              ref=\"floatLabel\"\r\n              :class=\"floatingLabelClass\"\r\n              class=\"md-field-label\">\r\n              <slot v-bind=\"{ id }\" />\r\n            </div>\r\n            <bs-chip\r\n              v-for=\"label in localValue\"\r\n              :key=\"label\"\r\n              :color=\"chipColor\"\r\n              :disabled=\"disabled\"\r\n              :dismissible=\"chipDeletable && !readonly && !disabled\"\r\n              :label=\"chipLabeled\"\r\n              :outlined=\"chipOutlined\"\r\n              @close=\"_onDeleteChip(label)\">\r\n              {{ label }}\r\n            </bs-chip>\r\n            <input\r\n              v-if=\"!(readonly || disabled)\"\r\n              ref=\"input\"\r\n              v-bind=\"_inputAttrs\"\r\n              class=\"md-field-input\"\r\n              role=\"textbox\"\r\n              @blur=\"_onBlur\"\r\n              @focus=\"_onFocus\"\r\n              @input=\"inputValue = $event.target.value\"\r\n              @keydown=\"_onKeyDown\" />\r\n          </div>\r\n          <transition name=\"fade\">\r\n            <div\r\n              v-if=\"hasClearButton\"\r\n              class=\"md-action-icon\">\r\n              <bs-icon\r\n                v-if=\"hasClearButton\"\r\n                icon=\"clear\"\r\n                height=\"24\"\r\n                @click=\"clearValue\" />\r\n            </div>\r\n          </transition>\r\n          <div\r\n            v-if=\"appendIcon\"\r\n            class=\"md-append-icon\">\r\n            <slot name=\"appendIcon\">\r\n              <font-awesome-icon :icon=\"appendIcon\" fixed-width />\r\n            </slot>\r\n          </div>\r\n        </div>\r\n        <div\r\n          v-if=\"helpText || showErrorValidation\"\r\n          class=\"md-help-text\">\r\n          <transition name=\"fade\">\r\n            <slot name=\"helpText\">\r\n              <small\r\n                v-if=\"showHelpText\"\r\n                class=\"text-muted d-block\">\r\n                {{ helpText }}\r\n              </small>\r\n            </slot>\r\n          </transition>\r\n          <template v-if=\"hasValidationError\">\r\n            <small\r\n              v-for=\"(fld) in errorItems\"\r\n              :key=\"fld\"\r\n              class=\"text-danger d-block\">\r\n              {{ _validationMessage(fld) }}\r\n            </small>\r\n          </template>\r\n        </div>\r\n      </div>\r\n      <div\r\n        v-if=\"appendIconOuter\"\r\n        class=\"md-append-icon\">\r\n        <slot name=\"appendIconOuter\">\r\n          <font-awesome-icon :icon=\"appendIconOuter\" fixed-width />\r\n        </slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\r\nimport BsIcon from \"../BsIcon/BsIcon\";\r\nimport BsChip from \"../BsBasic/BsChip\";\r\nimport Input from \"./mixins/Input\";\r\nimport TextField from \"./mixins/TextField\";\r\nimport FieldValidation from \"./mixins/FieldValidation\";\r\nimport \"../../../scss/_field.scss\"\r\n\r\nexport default {\r\n    name: \"BsChipField\",\r\n    components: {FontAwesomeIcon, BsIcon, BsChip},\r\n    mixins: [Input, TextField, FieldValidation],\r\n    props: {\r\n        /**\r\n         * The default Chips color to apply.\r\n         * @type {string|*}\r\n         */\r\n        chipColor: {\r\n            type: String,\r\n            default: 'light-grey'\r\n        },\r\n        /**\r\n         * When set, display the close button on every Chip to delete a Chip.\r\n         * @type {boolean|*}\r\n         */\r\n        chipDeletable: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Remove Chip's circle edges.\r\n         * @type {boolean|*}\r\n         */\r\n        chipLabeled: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Render Chips with outlined style or not.\r\n         * @type {boolean|*}\r\n         */\r\n        chipOutlined: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * The value monitored by `v-model` to maintain field value.\r\n         * @type {string|number|*}\r\n         */\r\n        value: {\r\n            type: [String, Array],\r\n            default: undefined\r\n        },\r\n        /**\r\n         * Sets the returns value from `v-model` as Array.\r\n         * @type {boolean|*}\r\n         */\r\n        valueAsArray: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n    },\r\n    data: () => ({\r\n        inputValue: '',\r\n    }),\r\n    computed: {\r\n        /**\r\n         * Get computed component's class names.\r\n         *\r\n         * @returns {Object|*} Collection of css classes\r\n         * @private\r\n         */\r\n        _classNames() {\r\n            return {\r\n                ...this.cmpAttrClasses,\r\n                'md-field-flat': this.flat,\r\n                'md-field-filled': this.filled,\r\n                'md-field-outlined': this.outlined,\r\n                'md-floating-label': this.floatingLabel,\r\n                'md-focused': this.isFocused,\r\n                'has-error': this.hasValidationError,\r\n                'has-success': this.hasValidated && !this.hasValidationError\r\n            }\r\n        },\r\n        /**\r\n         * Get input field computed binding's attributes.\r\n         *\r\n         * @returns {Object|*} Attributes to bind\r\n         */\r\n        _inputAttrs() {\r\n            return {\r\n                ...this.cmpAttrs,\r\n                ...this.fieldAttrs,\r\n                'value': this.inputValue,\r\n                'type': 'text'\r\n            }\r\n        },\r\n    },\r\n    watch: {\r\n        value(newVal) {\r\n            this._computeInternalValues(newVal);\r\n            this._updateLegend(newVal);\r\n        }\r\n    },\r\n    created() {\r\n        this._computeInternalValues(this.value);\r\n    },\r\n    mounted() {\r\n        this._updateLabel();\r\n        this.$nextTick(() => {\r\n            if (this.autofocus && this.$refs.input) {\r\n                this.$refs.input.focus();\r\n            }\r\n            this._updateLegend();\r\n        });\r\n    },\r\n    methods: {\r\n        /**\r\n         * Clear the input value.\r\n         *\r\n         * @returns {void}\r\n         */\r\n        clearValue() {\r\n            this.inputValue = '';\r\n            this.localValue = [];\r\n            this.$emit('input', null);\r\n            this.$nextTick(() => {\r\n                this.$emit('clear');\r\n                this._updateLegend();\r\n            });\r\n        },\r\n        /**\r\n         * Set field value.\r\n         *\r\n         * @param {string} value The value to be set\r\n         * @returns {void}\r\n         */\r\n        setValue(value) {\r\n            this._computeInternalValues(value);\r\n            this._emitInput();\r\n        },\r\n        /**\r\n         * Compute local value from the given `value`.\r\n         *\r\n         * @param {string|Array} value The given value\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _computeInternalValues(value) {\r\n            if (Array.isArray(value)) {\r\n                this.localValue = value;\r\n            } else if (typeof value !== 'undefined' && value !== null && value !== '') {\r\n                this.localValue = value.split(',').map(v => v.trim());\r\n            } else {\r\n                this.localValue = [];\r\n            }\r\n        },\r\n        /**\r\n         * Fires input event.\r\n         *\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _emitInput() {\r\n            this.$emit('input', this.valueAsArray ? this.localValue : this.localValue.join(', '));\r\n        },\r\n        /**\r\n         * Handler when the input field lost focus.\r\n         *\r\n         * @param {FocusEvent} e The received event\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _onBlur(e) {\r\n            this.isFocused = false;\r\n\r\n            if (this.inputValue !== '') {\r\n                this.localValue.push(this.inputValue);\r\n                this._emitInput();\r\n            }\r\n\r\n            this.inputValue = '';\r\n            this.$emit('blur', e);\r\n            this._nextTickChange(this.localValue);\r\n            this._updateLegend();\r\n        },\r\n        /**\r\n         * Handler when the Chip is dismissed.\r\n         *\r\n         * @param {string} value The Chip text\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _onDeleteChip(value) {\r\n            this.localValue = this.localValue.filter(v => v !== value);\r\n            this._emitInput();\r\n            this.$emit('delete-item', value);\r\n        },\r\n        /**\r\n         * Handler when input field receive keypress.\r\n         *\r\n         * @param {KeyboardEvent} e The received event\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _onKeyDown(e) {\r\n            if (!this.$refs.input) {\r\n                return;\r\n            }\r\n\r\n            if (e.key && e.key === 'Backspace' && this.$refs.input.value === '') {\r\n                this.localValue.pop();\r\n                this.inputValue = '';\r\n                this.$emit('keydown', e);\r\n                this.$nextTick(() => {\r\n                    this._emitInput();\r\n                });\r\n            } else if (e.key && e.key === 'Enter') {\r\n                if (this.$refs.input.value !== '') {\r\n                    this.localValue.push(this.$refs.input.value);\r\n                }\r\n\r\n                this.inputValue = '';\r\n                this.$emit('keydown', e);\r\n                this.$nextTick(() => {\r\n                    this._emitInput();\r\n                });\r\n            } else {\r\n                this.$emit('keydown', e);\r\n            }\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"~compass-sass-mixins/lib/compass/css3\";\r\n@import \"../../../scss/colors\";\r\n@import \"../../../scss/variables\";\r\n\r\n.#{$prefix}-chips-field {\r\n    .#{$prefix}-field-input-wrapper {\r\n        @include flex-wrap(wrap);\r\n\r\n        .#{$prefix}-chip {\r\n            margin: .25rem $padding-sm .25rem 0;\r\n        }\r\n\r\n        > .#{$prefix}-field-input {\r\n            @include flexbox((display: inline-flex, flex: 1 1 0));\r\n            min-width: 125px;\r\n            max-width: 100%;\r\n            width: auto !important;\r\n        }\r\n    }\r\n\r\n    &.#{$prefix}-floating-label:not(.#{$prefix}-field-outlined) {\r\n        .#{$prefix}-field-inner {\r\n            .#{$prefix}-field-label {\r\n                top: 4px;\r\n\r\n                &.#{$prefix}-active {\r\n                    @include transform(translateY(-22px) scale(.8));\r\n                }\r\n            }\r\n        }\r\n\r\n        &.#{$prefix}-field-filled {\r\n            .#{$prefix}-field-inner {\r\n                padding-bottom: 0;\r\n\r\n                > .#{$prefix}-field-input-wrapper {\r\n                    margin-top: 1.15rem;\r\n\r\n                    > input {\r\n                        padding-top: $padding-sm;\r\n                    }\r\n\r\n                    > .#{$prefix}-field-label {\r\n                        top: 0;\r\n\r\n                        &.#{$prefix}-active {\r\n                            @include transform(translateY(-16px) scale(.8));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>\r\n"]}]}