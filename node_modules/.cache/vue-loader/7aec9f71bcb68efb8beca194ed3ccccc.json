{"remainingRequest":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsCombobox.vue?vue&type=template&id=0250f4ac&","dependencies":[{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsCombobox.vue","mtime":1625050711000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}