{"remainingRequest":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsTextArea.vue?vue&type=script&lang=js&","dependencies":[{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-mdbootstrap\\src\\components\\BsField\\BsTextArea.vue","mtime":1615047462000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"O:\\WORK\\JUMIA\\vuejs\\new\\jumia-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBGb250QXdlc29tZUljb24gfSBmcm9tICJAZm9ydGF3ZXNvbWUvdnVlLWZvbnRhd2Vzb21lIjsNCmltcG9ydCBCc0ljb24gZnJvbSAiLi4vQnNJY29uL0JzSWNvbiI7DQppbXBvcnQgSW5wdXQgZnJvbSAiLi9taXhpbnMvSW5wdXQiOw0KaW1wb3J0IFRleHRGaWVsZCBmcm9tICIuL21peGlucy9UZXh0RmllbGQiOw0KaW1wb3J0IEZpZWxkVmFsaWRhdGlvbiBmcm9tICIuL21peGlucy9GaWVsZFZhbGlkYXRpb24iOw0KaW1wb3J0IEhlbHBlciBmcm9tICIuLi8uLi91dGlscy9IZWxwZXIiOw0KaW1wb3J0ICIuLi8uLi8uLi9zY3NzL19maWVsZC5zY3NzIg0KDQpleHBvcnQgZGVmYXVsdCB7DQogICAgbmFtZTogIkJzVGV4dEFyZWEiLA0KICAgIGNvbXBvbmVudHM6IHtGb250QXdlc29tZUljb24sIEJzSWNvbn0sDQogICAgbWl4aW5zOiBbSW5wdXQsIFRleHRGaWVsZCwgRmllbGRWYWxpZGF0aW9uXSwNCiAgICBwcm9wczogew0KICAgICAgICAvKioNCiAgICAgICAgICogRW5hYmxlL2Rpc2FibGUgYDx0ZXh0YXJlYT5gIGVsZW1lbnQgdG8gYXV0byBncm93Lg0KICAgICAgICAgKiBAdHlwZSB7Ym9vbGVhbnwqfQ0KICAgICAgICAgKi8NCiAgICAgICAgYXV0b0dyb3c6IHsNCiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sDQogICAgICAgICAgICBkZWZhdWx0OiBmYWxzZQ0KICAgICAgICB9LA0KICAgICAgICAvKioNCiAgICAgICAgICogRGlzYWJsZSByZXNpemluZyB0aGUgYDx0ZXh0YXJlYT5gIGVsZW1lbnQuDQogICAgICAgICAqIEB0eXBlIHtib29sZWFufCp9DQogICAgICAgICAqLw0KICAgICAgICBub1Jlc2l6ZTogew0KICAgICAgICAgICAgdHlwZTogQm9vbGVhbiwNCiAgICAgICAgICAgIGRlZmF1bHQ6IGZhbHNlDQogICAgICAgIH0sDQogICAgICAgIC8qKg0KICAgICAgICAgKiBTZXRzIGA8dGV4dGFyZWE+YCBoZWlnaHQgaW4gcm93cy4NCiAgICAgICAgICogQHR5cGUge3N0cmluZ3xudW1iZXJ8Kn0NCiAgICAgICAgICovDQogICAgICAgIHJvd3M6IHsNCiAgICAgICAgICAgIHR5cGU6IFtTdHJpbmcsIE51bWJlcl0sDQogICAgICAgICAgICBkZWZhdWx0OiAyLA0KICAgICAgICAgICAgdmFsaWRhdG9yOiB2ID0+ICFpc05hTihwYXJzZUludCh2LCAxMCkpDQogICAgICAgIH0sDQogICAgICAgIC8qKg0KICAgICAgICAgKiBTZXRzIGA8dGV4dGFyZWE+YCBoZWlnaHQgaW4gcGl4ZWwuDQogICAgICAgICAqIEB0eXBlIHtzdHJpbmd8bnVtYmVyfCp9DQogICAgICAgICAqLw0KICAgICAgICByb3dIZWlnaHQ6IHsNCiAgICAgICAgICAgIHR5cGU6IFtTdHJpbmcsIE51bWJlcl0sDQogICAgICAgICAgICBkZWZhdWx0OiB1bmRlZmluZWQsDQogICAgICAgICAgICB2YWxpZGF0b3I6IHYgPT4gIWlzTmFOKHBhcnNlSW50KHYsIDEwKSkNCiAgICAgICAgfSwNCiAgICB9LA0KICAgIGNvbXB1dGVkOiB7DQogICAgICAgIC8qKg0KICAgICAgICAgKiBHZXQgY29tcHV0ZWQgY29tcG9uZW50J3MgY2xhc3MgbmFtZXMuDQogICAgICAgICAqDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R8Kn0gQ29sbGVjdGlvbiBvZiBjc3MgY2xhc3Nlcw0KICAgICAgICAgKi8NCiAgICAgICAgX2NsYXNzTmFtZXMoKSB7DQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgIC4uLnRoaXMuY21wQXR0ckNsYXNzZXMsDQogICAgICAgICAgICAgICAgJ21kLWZvY3VzZWQnOiB0aGlzLmlzRm9jdXNlZCwNCiAgICAgICAgICAgICAgICAnbWQtZmllbGQtZmxhdCc6IHRoaXMuZmxhdCwNCiAgICAgICAgICAgICAgICAnbWQtZmllbGQtZmlsbGVkJzogdGhpcy5maWxsZWQsDQogICAgICAgICAgICAgICAgJ21kLWZpZWxkLW91dGxpbmVkJzogdGhpcy5vdXRsaW5lZCwNCiAgICAgICAgICAgICAgICAnbWQtZmllbGQtYXV0b2dyb3cnOiB0aGlzLmNhbkdyb3csDQogICAgICAgICAgICAgICAgJ21kLWZpZWxkLW5vcmVzaXplJzogdGhpcy5ub1Jlc2l6ZSB8fCB0aGlzLmNhbkdyb3csDQogICAgICAgICAgICAgICAgJ21kLWZsb2F0aW5nLWxhYmVsJzogdGhpcy5mbG9hdGluZ0xhYmVsLA0KICAgICAgICAgICAgICAgICdoYXMtZXJyb3InOiB0aGlzLmhhc1ZhbGlkYXRpb25FcnJvciwNCiAgICAgICAgICAgICAgICAnaGFzLXN1Y2Nlc3MnOiB0aGlzLmhhc1ZhbGlkYXRlZCAmJiAhdGhpcy5oYXNWYWxpZGF0aW9uRXJyb3INCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgLyoqDQogICAgICAgICAqIEdldCBpbnB1dCBmaWVsZCBjb21wdXRlZCBiaW5kaW5nJ3MgYXR0cmlidXRlcy4NCiAgICAgICAgICoNCiAgICAgICAgICogQHJldHVybnMge09iamVjdHwqfSBBdHRyaWJ1dGVzIHRvIGJpbmQNCiAgICAgICAgICovDQogICAgICAgIGF0dHJpYnV0ZXMoKSB7DQogICAgICAgICAgICBsZXQgYXR0ciA9IHsNCiAgICAgICAgICAgICAgICAuLi50aGlzLmNtcEF0dHJzLA0KICAgICAgICAgICAgICAgIC4uLnRoaXMuZmllbGRBdHRycywNCiAgICAgICAgICAgICAgICAncm93cyc6IHRoaXMuY2FuR3JvdyA/IDIgOiB0aGlzLnJvd3MsDQogICAgICAgICAgICB9DQogICAgICAgICAgICBpZiAodGhpcy5maWVsZEhlaWdodCkgew0KICAgICAgICAgICAgICAgIGF0dHJbJ3N0eWxlJ10gPSB7DQogICAgICAgICAgICAgICAgICAgICdoZWlnaHQnOiB0aGlzLmZpZWxkSGVpZ2h0DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gYXR0cjsNCiAgICAgICAgfSwNCiAgICAgICAgLyoqDQogICAgICAgICAqIENoZWNrIGlmIFRleHRBcmVhIGZpZWxkIGNhbiBhdXRvIGdyb3cgb3Igbm90Lg0KICAgICAgICAgKg0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVFJVRSBpZiB0ZXh0YXJlYSBmaWVsZCBjYW4gZ3Jvdw0KICAgICAgICAgKi8NCiAgICAgICAgY2FuR3JvdygpIHsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLmF1dG9Hcm93ICYmICF0aGlzLm5vUmVzaXplOw0KICAgICAgICB9LA0KICAgICAgICAvKioNCiAgICAgICAgICogQ2FsY3VsYXRlIHRleHRhcmVhIGZpZWxkJ3MgaGVpZ2h0Lg0KICAgICAgICAgKg0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfG51bGx9IFRoZSB0ZXh0YXJlYSBmaWVsZCdzIGhlaWdodA0KICAgICAgICAgKi8NCiAgICAgICAgZmllbGRIZWlnaHQoKSB7DQogICAgICAgICAgICBpZiAodGhpcy5yb3dIZWlnaHQgJiYgIXRoaXMuY2FuR3Jvdykgew0KICAgICAgICAgICAgICAgIHJldHVybiBIZWxwZXIuc2l6ZVVuaXQodGhpcy5yb3dIZWlnaHQpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgfQ0KICAgIH0sDQogICAgbW91bnRlZCgpIHsNCiAgICAgICAgdGhpcy5fdXBkYXRlTGFiZWwoKTsNCiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gew0KICAgICAgICAgICAgaWYgKHRoaXMuYXV0b2ZvY3VzICYmIHRoaXMuJHJlZnMuaW5wdXQpIHsNCiAgICAgICAgICAgICAgICB0aGlzLiRyZWZzLmlucHV0LmZvY3VzKCk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICB0aGlzLl91cGRhdGVMZWdlbmQoKTsNCiAgICAgICAgfSk7DQogICAgfSwNCiAgICB3YXRjaDogew0KICAgICAgICB2YWx1ZShuZXdWYWwpIHsNCiAgICAgICAgICAgIHRoaXMubG9jYWxWYWx1ZSA9IG5ld1ZhbDsNCiAgICAgICAgICAgIHRoaXMuX3VwZGF0ZUxlZ2VuZChuZXdWYWwpOw0KICAgICAgICB9DQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICAgIC8qKg0KICAgICAgICAgKiBDbGVhciB0aGUgaW5wdXQgdmFsdWUuDQogICAgICAgICAqDQogICAgICAgICAqIEByZXR1cm5zIHt2b2lkfQ0KICAgICAgICAgKi8NCiAgICAgICAgY2xlYXJWYWx1ZSgpIHsNCiAgICAgICAgICAgIHRoaXMubG9jYWxWYWx1ZSA9IG51bGw7DQogICAgICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsICcnKTsNCiAgICAgICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdjbGVhcicpOw0KICAgICAgICAgICAgICAgIHRoaXMuX3VwZGF0ZUxlZ2VuZCgpOw0KICAgICAgICAgICAgfSk7DQogICAgICAgICAgICBpZiAodGhpcy5jYW5Hcm93KSB7DQogICAgICAgICAgICAgICAgdGhpcy4kcmVmcy5pbnB1dC5zdHlsZS5oZWlnaHQgPSAnYXV0byc7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIC8qKg0KICAgICAgICAgKiBVcGRhdGUgdGV4dGFyZWEgaGVpZ2h0IG9uIGlucHV0IGV2ZW50cy4NCiAgICAgICAgICoNCiAgICAgICAgICogQHBhcmFtIHtFdmVudH0gZSBUaGUgaW5wdXQgZXZlbnQNCiAgICAgICAgICogQHJldHVybnMge3ZvaWR9DQogICAgICAgICAqIEBwcml2YXRlDQogICAgICAgICAqLw0KICAgICAgICBfdXBkYXRlSGVpZ2h0KGUpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLmNhbkdyb3cpIHsNCiAgICAgICAgICAgICAgICB0aGlzLiRyZWZzLmlucHV0LnN0eWxlLmhlaWdodCA9ICdhdXRvJzsNCiAgICAgICAgICAgICAgICB0aGlzLiRyZWZzLmlucHV0LnN0eWxlLmhlaWdodCA9IGUudGFyZ2V0LnNjcm9sbEhlaWdodCArICJweCI7DQogICAgICAgICAgICB9DQogICAgICAgICAgICB0aGlzLl91cGRhdGVWYWx1ZShlLnRhcmdldC52YWx1ZSk7DQogICAgICAgIH0NCiAgICB9DQp9DQo="},{"version":3,"sources":["BsTextArea.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"BsTextArea.vue","sourceRoot":"node_modules/vue-mdbootstrap/src/components/BsField","sourcesContent":["<template>\r\n  <div :class=\"_classNames\" class=\"md-textarea row align-items-start\">\r\n    <slot v-if=\"floatingLabel === false\" v-bind=\"{ id }\" />\r\n    <div class=\"md-field-wrapper\">\r\n      <div\r\n        v-if=\"prependIconOuter\"\r\n        class=\"md-prepend-icon\">\r\n        <slot name=\"prependIconOuter\">\r\n          <font-awesome-icon :icon=\"prependIconOuter\" fixed-width />\r\n        </slot>\r\n      </div>\r\n      <div class=\"md-field-ctrl\">\r\n        <div class=\"md-field-inner\">\r\n          <fieldset\r\n            v-if=\"outlined\"\r\n            aria-hidden=\"true\">\r\n            <legend ref=\"legend\">\r\n              <span>â€‹</span>\r\n            </legend>\r\n          </fieldset>\r\n          <div\r\n            v-if=\"prependIcon\"\r\n            class=\"md-prepend-icon\">\r\n            <slot name=\"prependIcon\">\r\n              <font-awesome-icon :icon=\"prependIcon\" fixed-width />\r\n            </slot>\r\n          </div>\r\n          <div class=\"md-field-input-wrapper\">\r\n            <div\r\n              v-if=\"floatingLabel\"\r\n              ref=\"floatLabel\"\r\n              :class=\"floatingLabelClass\"\r\n              class=\"md-field-label\">\r\n              <slot v-bind=\"{ id }\" />\r\n            </div>\r\n            <textarea\r\n              ref=\"input\"\r\n              v-bind=\"attributes\"\r\n              role=\"textbox\"\r\n              @blur=\"_onBlur\"\r\n              @focus=\"_onFocus\"\r\n              @input=\"_updateHeight\"\r\n              @keydown=\"_onKeyDown\"></textarea>\r\n          </div>\r\n          <transition name=\"fade\">\r\n            <div\r\n              v-if=\"hasClearButton\"\r\n              class=\"md-action-icon\">\r\n              <bs-icon\r\n                v-if=\"hasClearButton\"\r\n                icon=\"clear\"\r\n                height=\"24\"\r\n                @click=\"clearValue\" />\r\n            </div>\r\n          </transition>\r\n          <div\r\n            v-if=\"appendIcon\"\r\n            class=\"md-append-icon\">\r\n            <slot name=\"appendIcon\">\r\n              <font-awesome-icon :icon=\"appendIcon\" fixed-width />\r\n            </slot>\r\n          </div>\r\n        </div>\r\n        <div\r\n          v-if=\"helpText || showErrorValidation\"\r\n          class=\"md-help-text\">\r\n          <transition name=\"fade\">\r\n            <slot name=\"helpText\">\r\n              <small\r\n                v-if=\"showHelpText\"\r\n                class=\"text-muted d-block\">\r\n                {{ helpText }}\r\n              </small>\r\n            </slot>\r\n          </transition>\r\n          <template v-if=\"hasValidationError\">\r\n            <small\r\n              v-for=\"(fld) in errorItems\"\r\n              :key=\"fld\"\r\n              class=\"text-danger d-block\">\r\n              {{ _validationMessage(fld) }}\r\n            </small>\r\n          </template>\r\n        </div>\r\n      </div>\r\n      <div\r\n        v-if=\"appendIconOuter\"\r\n        class=\"md-append-icon\">\r\n        <slot name=\"appendIconOuter\">\r\n          <font-awesome-icon :icon=\"appendIconOuter\" fixed-width />\r\n        </slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\r\nimport BsIcon from \"../BsIcon/BsIcon\";\r\nimport Input from \"./mixins/Input\";\r\nimport TextField from \"./mixins/TextField\";\r\nimport FieldValidation from \"./mixins/FieldValidation\";\r\nimport Helper from \"../../utils/Helper\";\r\nimport \"../../../scss/_field.scss\"\r\n\r\nexport default {\r\n    name: \"BsTextArea\",\r\n    components: {FontAwesomeIcon, BsIcon},\r\n    mixins: [Input, TextField, FieldValidation],\r\n    props: {\r\n        /**\r\n         * Enable/disable `<textarea>` element to auto grow.\r\n         * @type {boolean|*}\r\n         */\r\n        autoGrow: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Disable resizing the `<textarea>` element.\r\n         * @type {boolean|*}\r\n         */\r\n        noResize: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        /**\r\n         * Sets `<textarea>` height in rows.\r\n         * @type {string|number|*}\r\n         */\r\n        rows: {\r\n            type: [String, Number],\r\n            default: 2,\r\n            validator: v => !isNaN(parseInt(v, 10))\r\n        },\r\n        /**\r\n         * Sets `<textarea>` height in pixel.\r\n         * @type {string|number|*}\r\n         */\r\n        rowHeight: {\r\n            type: [String, Number],\r\n            default: undefined,\r\n            validator: v => !isNaN(parseInt(v, 10))\r\n        },\r\n    },\r\n    computed: {\r\n        /**\r\n         * Get computed component's class names.\r\n         *\r\n         * @returns {Object|*} Collection of css classes\r\n         */\r\n        _classNames() {\r\n            return {\r\n                ...this.cmpAttrClasses,\r\n                'md-focused': this.isFocused,\r\n                'md-field-flat': this.flat,\r\n                'md-field-filled': this.filled,\r\n                'md-field-outlined': this.outlined,\r\n                'md-field-autogrow': this.canGrow,\r\n                'md-field-noresize': this.noResize || this.canGrow,\r\n                'md-floating-label': this.floatingLabel,\r\n                'has-error': this.hasValidationError,\r\n                'has-success': this.hasValidated && !this.hasValidationError\r\n            }\r\n        },\r\n        /**\r\n         * Get input field computed binding's attributes.\r\n         *\r\n         * @returns {Object|*} Attributes to bind\r\n         */\r\n        attributes() {\r\n            let attr = {\r\n                ...this.cmpAttrs,\r\n                ...this.fieldAttrs,\r\n                'rows': this.canGrow ? 2 : this.rows,\r\n            }\r\n            if (this.fieldHeight) {\r\n                attr['style'] = {\r\n                    'height': this.fieldHeight\r\n                }\r\n            }\r\n\r\n            return attr;\r\n        },\r\n        /**\r\n         * Check if TextArea field can auto grow or not.\r\n         *\r\n         * @returns {boolean} TRUE if textarea field can grow\r\n         */\r\n        canGrow() {\r\n            return this.autoGrow && !this.noResize;\r\n        },\r\n        /**\r\n         * Calculate textarea field's height.\r\n         *\r\n         * @returns {string|null} The textarea field's height\r\n         */\r\n        fieldHeight() {\r\n            if (this.rowHeight && !this.canGrow) {\r\n                return Helper.sizeUnit(this.rowHeight);\r\n            }\r\n\r\n            return null;\r\n        }\r\n    },\r\n    mounted() {\r\n        this._updateLabel();\r\n        this.$nextTick(() => {\r\n            if (this.autofocus && this.$refs.input) {\r\n                this.$refs.input.focus();\r\n            }\r\n            this._updateLegend();\r\n        });\r\n    },\r\n    watch: {\r\n        value(newVal) {\r\n            this.localValue = newVal;\r\n            this._updateLegend(newVal);\r\n        }\r\n    },\r\n    methods: {\r\n        /**\r\n         * Clear the input value.\r\n         *\r\n         * @returns {void}\r\n         */\r\n        clearValue() {\r\n            this.localValue = null;\r\n            this.$emit('input', '');\r\n            this.$nextTick(() => {\r\n                this.$emit('clear');\r\n                this._updateLegend();\r\n            });\r\n            if (this.canGrow) {\r\n                this.$refs.input.style.height = 'auto';\r\n            }\r\n        },\r\n        /**\r\n         * Update textarea height on input events.\r\n         *\r\n         * @param {Event} e The input event\r\n         * @returns {void}\r\n         * @private\r\n         */\r\n        _updateHeight(e) {\r\n            if (this.canGrow) {\r\n                this.$refs.input.style.height = 'auto';\r\n                this.$refs.input.style.height = e.target.scrollHeight + \"px\";\r\n            }\r\n            this._updateValue(e.target.value);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}